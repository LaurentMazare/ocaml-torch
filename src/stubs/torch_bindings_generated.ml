(* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT BY HAND! *)

open Ctypes

module C0 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs___and__ = foreign "atg___and__" (ptr t @-> t @-> t @-> returning void)
  let stubs___iand__ = foreign "atg___iand__" (ptr t @-> t @-> t @-> returning void)
  let stubs___ilshift__ = foreign "atg___ilshift__" (ptr t @-> t @-> t @-> returning void)
  let stubs___ior__ = foreign "atg___ior__" (ptr t @-> t @-> t @-> returning void)
  let stubs___irshift__ = foreign "atg___irshift__" (ptr t @-> t @-> t @-> returning void)
  let stubs___ixor__ = foreign "atg___ixor__" (ptr t @-> t @-> t @-> returning void)
  let stubs___lshift__ = foreign "atg___lshift__" (ptr t @-> t @-> t @-> returning void)
  let stubs___or__ = foreign "atg___or__" (ptr t @-> t @-> t @-> returning void)
  let stubs___rshift__ = foreign "atg___rshift__" (ptr t @-> t @-> t @-> returning void)
  let stubs___xor__ = foreign "atg___xor__" (ptr t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool2d =
    foreign
      "atg__adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__adaptive_avg_pool2d_backward =
    foreign "atg__adaptive_avg_pool2d_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool3d =
    foreign
      "atg__adaptive_avg_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__adaptive_avg_pool3d_backward =
    foreign "atg__adaptive_avg_pool3d_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs__add_batch_dim =
    foreign "atg__add_batch_dim" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__add_relu = foreign "atg__add_relu" (ptr t @-> t @-> t @-> returning void)
  let stubs__add_relu_ = foreign "atg__add_relu_" (ptr t @-> t @-> t @-> returning void)

  let stubs__add_relu_out =
    foreign "atg__add_relu_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__aminmax = foreign "atg__aminmax" (ptr t @-> t @-> returning void)

  let stubs__aminmax1 =
    foreign "atg__aminmax1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__amp_update_scale_ =
    foreign
      "atg__amp_update_scale_"
      (ptr t @-> t @-> t @-> t @-> double @-> double @-> int64_t @-> returning void)

  let stubs__baddbmm_mkl_ =
    foreign "atg__baddbmm_mkl_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__bmm = foreign "atg__bmm" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__bmm_out =
    foreign "atg__bmm_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__cast_byte = foreign "atg__cast_byte" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_char = foreign "atg__cast_char" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_double =
    foreign "atg__cast_double" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_float =
    foreign "atg__cast_float" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_half = foreign "atg__cast_half" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_int = foreign "atg__cast_int" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_long = foreign "atg__cast_long" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_short =
    foreign "atg__cast_short" (ptr t @-> t @-> int @-> returning void)

  let stubs__cat =
    foreign "atg__cat" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__cat_out =
    foreign "atg__cat_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__cdist_backward =
    foreign
      "atg__cdist_backward"
      (ptr t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__cholesky_solve_helper =
    foreign "atg__cholesky_solve_helper" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__coalesce = foreign "atg__coalesce" (ptr t @-> t @-> returning void)

  let stubs__coalesced_ =
    foreign "atg__coalesced_" (ptr t @-> t @-> int @-> returning void)

  let stubs__compute_linear_combination =
    foreign "atg__compute_linear_combination" (ptr t @-> t @-> t @-> returning void)

  let stubs__compute_linear_combination_out =
    foreign
      "atg__compute_linear_combination_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__conj = foreign "atg__conj" (ptr t @-> t @-> returning void)

  let stubs__convolution =
    foreign
      "atg__convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__convolution1 =
    foreign
      "atg__convolution1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__convolution_mode =
    foreign
      "atg__convolution_mode"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__convolution_nogroup =
    foreign
      "atg__convolution_nogroup"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__copy_from =
    foreign "atg__copy_from" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__ctc_loss =
    foreign
      "atg__ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_backward =
    foreign
      "atg__ctc_loss_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__cudnn_ctc_loss =
    foreign
      "atg__cudnn_ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cudnn_init_dropout_state =
    foreign
      "atg__cudnn_init_dropout_state"
      (ptr t @-> double @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs__cudnn_rnn =
    foreign
      "atg__cudnn_rnn"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs__cudnn_rnn_flatten_weight =
    foreign
      "atg__cudnn_rnn_flatten_weight"
      (ptr t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cumprod = foreign "atg__cumprod" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__cumprod_out =
    foreign "atg__cumprod_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__cumsum = foreign "atg__cumsum" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__cumsum_out =
    foreign "atg__cumsum_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__dim_arange =
    foreign "atg__dim_arange" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__dirichlet_grad =
    foreign "atg__dirichlet_grad" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__embedding_bag =
    foreign
      "atg__embedding_bag"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_backward =
    foreign
      "atg__embedding_bag_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_dense_backward =
    foreign
      "atg__embedding_bag_dense_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_forward_only =
    foreign
      "atg__embedding_bag_forward_only"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_per_sample_weights_backward =
    foreign
      "atg__embedding_bag_per_sample_weights_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__embedding_bag_sparse_backward =
    foreign
      "atg__embedding_bag_sparse_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__empty_affine_quantized =
    foreign
      "atg__empty_affine_quantized"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs__empty_per_channel_affine_quantized =
    foreign
      "atg__empty_per_channel_affine_quantized"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__euclidean_dist =
    foreign "atg__euclidean_dist" (ptr t @-> t @-> t @-> returning void)

  let stubs__fake_quantize_learnable_per_channel_affine =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs__fake_quantize_learnable_per_channel_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs__fake_quantize_learnable_per_tensor_affine =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs__fake_quantize_learnable_per_tensor_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs__fft_c2c =
    foreign
      "atg__fft_c2c"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_c2c_out =
    foreign
      "atg__fft_c2c_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_c2r =
    foreign
      "atg__fft_c2r"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs__fft_c2r_out =
    foreign
      "atg__fft_c2r_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__fft_r2c =
    foreign
      "atg__fft_r2c"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_r2c_out =
    foreign
      "atg__fft_r2c_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fused_dropout =
    foreign "atg__fused_dropout" (ptr t @-> t @-> double @-> returning void)

  let stubs__fw_primal =
    foreign "atg__fw_primal" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__gather_sparse_backward =
    foreign
      "atg__gather_sparse_backward"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs__grid_sampler_2d_cpu_fallback =
    foreign
      "atg__grid_sampler_2d_cpu_fallback"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__grid_sampler_2d_cpu_fallback_backward =
    foreign
      "atg__grid_sampler_2d_cpu_fallback_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__index_copy_ =
    foreign "atg__index_copy_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs__index_put_impl_ =
    foreign
      "atg__index_put_impl_"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> int @-> returning void)

  let stubs__indices = foreign "atg__indices" (ptr t @-> t @-> returning void)

  let stubs__inverse_helper =
    foreign "atg__inverse_helper" (ptr t @-> t @-> returning void)

  let stubs__linalg_inv_out_helper_ =
    foreign "atg__linalg_inv_out_helper_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__linalg_qr_helper =
    foreign "atg__linalg_qr_helper" (ptr t @-> t @-> string @-> returning void)

  let stubs__linalg_solve_out_helper_ =
    foreign "atg__linalg_solve_out_helper_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__log_softmax =
    foreign "atg__log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__log_softmax_backward_data =
    foreign
      "atg__log_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__logcumsumexp =
    foreign "atg__logcumsumexp" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__logcumsumexp_out =
    foreign "atg__logcumsumexp_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__lu_with_info =
    foreign "atg__lu_with_info" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__make_dual =
    foreign "atg__make_dual" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_per_channel_quantized_tensor =
    foreign
      "atg__make_per_channel_quantized_tensor"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_per_tensor_quantized_tensor =
    foreign
      "atg__make_per_tensor_quantized_tensor"
      (ptr t @-> t @-> double @-> int64_t @-> returning void)

  let stubs__masked_scale =
    foreign "atg__masked_scale" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs__mkldnn_reshape =
    foreign "atg__mkldnn_reshape" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__mkldnn_transpose =
    foreign
      "atg__mkldnn_transpose"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)
end

module C1 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs__mkldnn_transpose_ =
    foreign
      "atg__mkldnn_transpose_"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__nnpack_spatial_convolution =
    foreign
      "atg__nnpack_spatial_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__nnpack_spatial_convolution_backward_input =
    foreign
      "atg__nnpack_spatial_convolution_backward_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__nnpack_spatial_convolution_backward_weight =
    foreign
      "atg__nnpack_spatial_convolution_backward_weight"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__pack_padded_sequence =
    foreign "atg__pack_padded_sequence" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__pack_padded_sequence_backward =
    foreign
      "atg__pack_padded_sequence_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> int @-> returning void)

  let stubs__pdist_backward =
    foreign "atg__pdist_backward" (ptr t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__remove_batch_dim =
    foreign
      "atg__remove_batch_dim"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs__reshape_from_tensor =
    foreign "atg__reshape_from_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs__rowwise_prune =
    foreign "atg__rowwise_prune" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__s_where = foreign "atg__s_where" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__sample_dirichlet =
    foreign "atg__sample_dirichlet" (ptr t @-> t @-> returning void)

  let stubs__saturate_weight_to_fp16 =
    foreign "atg__saturate_weight_to_fp16" (ptr t @-> t @-> returning void)

  let stubs__shape_as_tensor =
    foreign "atg__shape_as_tensor" (ptr t @-> t @-> returning void)

  let stubs__sobol_engine_draw =
    foreign
      "atg__sobol_engine_draw"
      (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__sobol_engine_ff_ =
    foreign
      "atg__sobol_engine_ff_"
      (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__sobol_engine_initialize_state_ =
    foreign
      "atg__sobol_engine_initialize_state_"
      (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__sobol_engine_scramble_ =
    foreign
      "atg__sobol_engine_scramble_"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__softmax =
    foreign "atg__softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__softmax_backward_data =
    foreign
      "atg__softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__solve_helper =
    foreign "atg__solve_helper" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_addmm =
    foreign "atg__sparse_addmm" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__sparse_coo_tensor_unsafe =
    foreign
      "atg__sparse_coo_tensor_unsafe"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_coo_tensor_with_dims =
    foreign
      "atg__sparse_coo_tensor_with_dims"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__sparse_coo_tensor_with_dims_and_tensors =
    foreign
      "atg__sparse_coo_tensor_with_dims_and_tensors"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int
      @-> int
      @-> returning void)

  let stubs__sparse_csr_tensor =
    foreign
      "atg__sparse_csr_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__sparse_csr_tensor1 =
    foreign
      "atg__sparse_csr_tensor1"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_log_softmax =
    foreign "atg__sparse_log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_log_softmax1 =
    foreign "atg__sparse_log_softmax1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_log_softmax_backward_data =
    foreign
      "atg__sparse_log_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_mask_helper =
    foreign "atg__sparse_mask_helper" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_mm = foreign "atg__sparse_mm" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_softmax =
    foreign "atg__sparse_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_softmax1 =
    foreign "atg__sparse_softmax1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_softmax_backward_data =
    foreign
      "atg__sparse_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_sparse_matmul =
    foreign "atg__sparse_sparse_matmul" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_sum = foreign "atg__sparse_sum" (ptr t @-> t @-> returning void)

  let stubs__sparse_sum1 =
    foreign "atg__sparse_sum1" (ptr t @-> t @-> int @-> returning void)

  let stubs__sparse_sum2 =
    foreign "atg__sparse_sum2" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_sum3 =
    foreign
      "atg__sparse_sum3"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__sparse_sum_backward =
    foreign
      "atg__sparse_sum_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__stack =
    foreign "atg__stack" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__stack_out =
    foreign "atg__stack_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__standard_gamma =
    foreign "atg__standard_gamma" (ptr t @-> t @-> returning void)

  let stubs__standard_gamma_grad =
    foreign "atg__standard_gamma_grad" (ptr t @-> t @-> t @-> returning void)

  let stubs__svd_helper =
    foreign "atg__svd_helper" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__symeig_helper =
    foreign "atg__symeig_helper" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__test_ambiguous_defaults =
    foreign
      "atg__test_ambiguous_defaults"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__test_ambiguous_defaults1 =
    foreign
      "atg__test_ambiguous_defaults1"
      (ptr t @-> t @-> int64_t @-> string @-> returning void)

  let stubs__test_optional_filled_intlist =
    foreign
      "atg__test_optional_filled_intlist"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_optional_intlist =
    foreign
      "atg__test_optional_intlist"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_serialization_subcmul =
    foreign "atg__test_serialization_subcmul" (ptr t @-> t @-> t @-> returning void)

  let stubs__test_string_default =
    foreign
      "atg__test_string_default"
      (ptr t @-> t @-> string @-> string @-> returning void)

  let stubs__thnn_differentiable_gru_cell_backward =
    foreign
      "atg__thnn_differentiable_gru_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_differentiable_lstm_cell_backward =
    foreign
      "atg__thnn_differentiable_lstm_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_gru_cell =
    foreign
      "atg__thnn_fused_gru_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_gru_cell_backward =
    foreign
      "atg__thnn_fused_gru_cell_backward"
      (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_lstm_cell =
    foreign
      "atg__thnn_fused_lstm_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_lstm_cell_backward =
    foreign
      "atg__thnn_fused_lstm_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__trilinear =
    foreign
      "atg__trilinear"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__unique =
    foreign "atg__unique" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__unique2 =
    foreign "atg__unique2" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__unpack_dual =
    foreign "atg__unpack_dual" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__unsafe_view =
    foreign "atg__unsafe_view" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__values = foreign "atg__values" (ptr t @-> t @-> returning void)

  let stubs__weight_norm =
    foreign "atg__weight_norm" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_cuda_interface =
    foreign
      "atg__weight_norm_cuda_interface"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_cuda_interface_backward =
    foreign
      "atg__weight_norm_cuda_interface_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_differentiable_backward =
    foreign
      "atg__weight_norm_differentiable_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_abs = foreign "atg_abs" (ptr t @-> t @-> returning void)
  let stubs_abs_ = foreign "atg_abs_" (ptr t @-> t @-> returning void)
  let stubs_abs_out = foreign "atg_abs_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_absolute = foreign "atg_absolute" (ptr t @-> t @-> returning void)
  let stubs_absolute_ = foreign "atg_absolute_" (ptr t @-> t @-> returning void)

  let stubs_absolute_out =
    foreign "atg_absolute_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_acos = foreign "atg_acos" (ptr t @-> t @-> returning void)
  let stubs_acos_ = foreign "atg_acos_" (ptr t @-> t @-> returning void)
  let stubs_acos_out = foreign "atg_acos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_acosh = foreign "atg_acosh" (ptr t @-> t @-> returning void)
  let stubs_acosh_ = foreign "atg_acosh_" (ptr t @-> t @-> returning void)
  let stubs_acosh_out = foreign "atg_acosh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_adaptive_avg_pool1d =
    foreign
      "atg_adaptive_avg_pool1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool2d =
    foreign
      "atg_adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool2d_out =
    foreign
      "atg_adaptive_avg_pool2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool3d =
    foreign
      "atg_adaptive_avg_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool3d_backward_out =
    foreign
      "atg_adaptive_avg_pool3d_backward_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_avg_pool3d_out =
    foreign
      "atg_adaptive_avg_pool3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool1d =
    foreign
      "atg_adaptive_max_pool1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool2d =
    foreign
      "atg_adaptive_max_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool2d_backward =
    foreign "atg_adaptive_max_pool2d_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool2d_backward_out =
    foreign
      "atg_adaptive_max_pool2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool2d_out =
    foreign
      "atg_adaptive_max_pool2d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool3d =
    foreign
      "atg_adaptive_max_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool3d_backward =
    foreign "atg_adaptive_max_pool3d_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool3d_backward_out =
    foreign
      "atg_adaptive_max_pool3d_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool3d_out =
    foreign
      "atg_adaptive_max_pool3d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_add = foreign "atg_add" (ptr t @-> t @-> t @-> returning void)
  let stubs_add_ = foreign "atg_add_" (ptr t @-> t @-> t @-> returning void)
  let stubs_add_out = foreign "atg_add_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addbmm = foreign "atg_addbmm" (ptr t @-> t @-> t @-> t @-> returning void)
end

module C2 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_addbmm_ = foreign "atg_addbmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addbmm_out =
    foreign "atg_addbmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addcdiv = foreign "atg_addcdiv" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addcdiv_ = foreign "atg_addcdiv_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addcdiv_out =
    foreign "atg_addcdiv_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addcmul = foreign "atg_addcmul" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addcmul_ = foreign "atg_addcmul_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addcmul_out =
    foreign "atg_addcmul_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addmm = foreign "atg_addmm" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addmm_ = foreign "atg_addmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addmm_out =
    foreign "atg_addmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addmv = foreign "atg_addmv" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addmv_ = foreign "atg_addmv_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addmv_out =
    foreign "atg_addmv_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addr = foreign "atg_addr" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addr_ = foreign "atg_addr_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addr_out =
    foreign "atg_addr_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_affine_grid_generator =
    foreign
      "atg_affine_grid_generator"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_affine_grid_generator_backward =
    foreign
      "atg_affine_grid_generator_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_alias = foreign "atg_alias" (ptr t @-> t @-> returning void)
  let stubs_align_as = foreign "atg_align_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_align_tensors =
    foreign "atg_align_tensors" (ptr t @-> int @-> returning (ptr t))

  let stubs_all = foreign "atg_all" (ptr t @-> t @-> returning void)
  let stubs_all1 = foreign "atg_all1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_all_out =
    foreign "atg_all_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_alpha_dropout =
    foreign "atg_alpha_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_alpha_dropout_ =
    foreign "atg_alpha_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_amax =
    foreign "atg_amax" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amax_out =
    foreign
      "atg_amax_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amin =
    foreign "atg_amin" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amin_out =
    foreign
      "atg_amin_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_angle = foreign "atg_angle" (ptr t @-> t @-> returning void)
  let stubs_angle_out = foreign "atg_angle_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_any = foreign "atg_any" (ptr t @-> t @-> returning void)
  let stubs_any1 = foreign "atg_any1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_any_out =
    foreign "atg_any_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_arccos = foreign "atg_arccos" (ptr t @-> t @-> returning void)
  let stubs_arccos_ = foreign "atg_arccos_" (ptr t @-> t @-> returning void)
  let stubs_arccos_out = foreign "atg_arccos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arccosh = foreign "atg_arccosh" (ptr t @-> t @-> returning void)
  let stubs_arccosh_ = foreign "atg_arccosh_" (ptr t @-> t @-> returning void)
  let stubs_arccosh_out = foreign "atg_arccosh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arcsin = foreign "atg_arcsin" (ptr t @-> t @-> returning void)
  let stubs_arcsin_ = foreign "atg_arcsin_" (ptr t @-> t @-> returning void)
  let stubs_arcsin_out = foreign "atg_arcsin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arcsinh = foreign "atg_arcsinh" (ptr t @-> t @-> returning void)
  let stubs_arcsinh_ = foreign "atg_arcsinh_" (ptr t @-> t @-> returning void)
  let stubs_arcsinh_out = foreign "atg_arcsinh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arctan = foreign "atg_arctan" (ptr t @-> t @-> returning void)
  let stubs_arctan_ = foreign "atg_arctan_" (ptr t @-> t @-> returning void)
  let stubs_arctan_out = foreign "atg_arctan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arctanh = foreign "atg_arctanh" (ptr t @-> t @-> returning void)
  let stubs_arctanh_ = foreign "atg_arctanh_" (ptr t @-> t @-> returning void)
  let stubs_arctanh_out = foreign "atg_arctanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_argmax =
    foreign "atg_argmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_argmax_out =
    foreign "atg_argmax_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_argmin =
    foreign "atg_argmin" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_argmin_out =
    foreign "atg_argmin_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_argsort =
    foreign "atg_argsort" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_as_strided =
    foreign
      "atg_as_strided"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_as_strided_ =
    foreign
      "atg_as_strided_"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_asin = foreign "atg_asin" (ptr t @-> t @-> returning void)
  let stubs_asin_ = foreign "atg_asin_" (ptr t @-> t @-> returning void)
  let stubs_asin_out = foreign "atg_asin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_asinh = foreign "atg_asinh" (ptr t @-> t @-> returning void)
  let stubs_asinh_ = foreign "atg_asinh_" (ptr t @-> t @-> returning void)
  let stubs_asinh_out = foreign "atg_asinh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atan = foreign "atg_atan" (ptr t @-> t @-> returning void)
  let stubs_atan2 = foreign "atg_atan2" (ptr t @-> t @-> t @-> returning void)
  let stubs_atan2_ = foreign "atg_atan2_" (ptr t @-> t @-> t @-> returning void)

  let stubs_atan2_out =
    foreign "atg_atan2_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_atan_ = foreign "atg_atan_" (ptr t @-> t @-> returning void)
  let stubs_atan_out = foreign "atg_atan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atanh = foreign "atg_atanh" (ptr t @-> t @-> returning void)
  let stubs_atanh_ = foreign "atg_atanh_" (ptr t @-> t @-> returning void)
  let stubs_atanh_out = foreign "atg_atanh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atleast_1d = foreign "atg_atleast_1d" (ptr t @-> t @-> returning void)
  let stubs_atleast_1d1 = foreign "atg_atleast_1d1" (ptr t @-> int @-> returning (ptr t))
  let stubs_atleast_2d = foreign "atg_atleast_2d" (ptr t @-> t @-> returning void)
  let stubs_atleast_2d1 = foreign "atg_atleast_2d1" (ptr t @-> int @-> returning (ptr t))
  let stubs_atleast_3d = foreign "atg_atleast_3d" (ptr t @-> t @-> returning void)
  let stubs_atleast_3d1 = foreign "atg_atleast_3d1" (ptr t @-> int @-> returning (ptr t))

  let stubs_avg_pool1d =
    foreign
      "atg_avg_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_avg_pool2d =
    foreign
      "atg_avg_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool2d_backward =
    foreign
      "atg_avg_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool2d_backward_out =
    foreign
      "atg_avg_pool2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool2d_out =
    foreign
      "atg_avg_pool2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool3d =
    foreign
      "atg_avg_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool3d_backward =
    foreign
      "atg_avg_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool3d_backward_out =
    foreign
      "atg_avg_pool3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_avg_pool3d_out =
    foreign
      "atg_avg_pool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_baddbmm = foreign "atg_baddbmm" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_baddbmm_ = foreign "atg_baddbmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_baddbmm_out =
    foreign "atg_baddbmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_bartlett_window =
    foreign "atg_bartlett_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_bartlett_window1 =
    foreign
      "atg_bartlett_window1"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_batch_norm =
    foreign
      "atg_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> int
      @-> returning void)

  let stubs_batch_norm_backward_elemt =
    foreign
      "atg_batch_norm_backward_elemt"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_batch_norm_backward_reduce =
    foreign
      "atg_batch_norm_backward_reduce"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_batch_norm_elemt =
    foreign
      "atg_batch_norm_elemt"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)
end

module C3 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_batch_norm_elemt_out =
    foreign
      "atg_batch_norm_elemt_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_batch_norm_gather_stats =
    foreign
      "atg_batch_norm_gather_stats"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_batch_norm_gather_stats_with_counts =
    foreign
      "atg_batch_norm_gather_stats_with_counts"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> double @-> double @-> t @-> returning void)

  let stubs_batch_norm_stats =
    foreign "atg_batch_norm_stats" (ptr t @-> t @-> double @-> returning void)

  let stubs_batch_norm_update_stats =
    foreign
      "atg_batch_norm_update_stats"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_bernoulli = foreign "atg_bernoulli" (ptr t @-> t @-> returning void)

  let stubs_bernoulli1 =
    foreign "atg_bernoulli1" (ptr t @-> t @-> double @-> returning void)

  let stubs_bernoulli_ = foreign "atg_bernoulli_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bernoulli_1 =
    foreign "atg_bernoulli_1" (ptr t @-> t @-> double @-> returning void)

  let stubs_bernoulli_out =
    foreign "atg_bernoulli_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_bilinear =
    foreign "atg_bilinear" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_binary_cross_entropy =
    foreign
      "atg_binary_cross_entropy"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_backward =
    foreign
      "atg_binary_cross_entropy_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_backward_out =
    foreign
      "atg_binary_cross_entropy_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_out =
    foreign
      "atg_binary_cross_entropy_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_with_logits =
    foreign
      "atg_binary_cross_entropy_with_logits"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_with_logits_backward =
    foreign
      "atg_binary_cross_entropy_with_logits_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_bincount =
    foreign "atg_bincount" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binomial = foreign "atg_binomial" (ptr t @-> t @-> t @-> returning void)
  let stubs_bitwise_and = foreign "atg_bitwise_and" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_and_ =
    foreign "atg_bitwise_and_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_and_out =
    foreign "atg_bitwise_and_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_not = foreign "atg_bitwise_not" (ptr t @-> t @-> returning void)
  let stubs_bitwise_not_ = foreign "atg_bitwise_not_" (ptr t @-> t @-> returning void)

  let stubs_bitwise_not_out =
    foreign "atg_bitwise_not_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_or = foreign "atg_bitwise_or" (ptr t @-> t @-> t @-> returning void)
  let stubs_bitwise_or_ = foreign "atg_bitwise_or_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_or_out =
    foreign "atg_bitwise_or_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_xor = foreign "atg_bitwise_xor" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_xor_ =
    foreign "atg_bitwise_xor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_xor_out =
    foreign "atg_bitwise_xor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_blackman_window =
    foreign "atg_blackman_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_blackman_window1 =
    foreign
      "atg_blackman_window1"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_block_diag =
    foreign "atg_block_diag" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_bmm = foreign "atg_bmm" (ptr t @-> t @-> t @-> returning void)
  let stubs_bmm_out = foreign "atg_bmm_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_broadcast_tensors =
    foreign "atg_broadcast_tensors" (ptr t @-> int @-> returning (ptr t))

  let stubs_broadcast_to =
    foreign "atg_broadcast_to" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_bucketize =
    foreign "atg_bucketize" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_bucketize_out =
    foreign
      "atg_bucketize_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_cartesian_prod =
    foreign "atg_cartesian_prod" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_cat =
    foreign "atg_cat" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_cat_out =
    foreign "atg_cat_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_cauchy_ =
    foreign "atg_cauchy_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_cdist =
    foreign "atg_cdist" (ptr t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_ceil = foreign "atg_ceil" (ptr t @-> t @-> returning void)
  let stubs_ceil_ = foreign "atg_ceil_" (ptr t @-> t @-> returning void)
  let stubs_ceil_out = foreign "atg_ceil_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_celu = foreign "atg_celu" (ptr t @-> t @-> returning void)
  let stubs_celu_ = foreign "atg_celu_" (ptr t @-> t @-> returning void)

  let stubs_chain_matmul =
    foreign "atg_chain_matmul" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_chain_matmul_out =
    foreign "atg_chain_matmul_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_channel_shuffle =
    foreign "atg_channel_shuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cholesky = foreign "atg_cholesky" (ptr t @-> t @-> int @-> returning void)

  let stubs_cholesky_inverse =
    foreign "atg_cholesky_inverse" (ptr t @-> t @-> int @-> returning void)

  let stubs_cholesky_inverse_out =
    foreign "atg_cholesky_inverse_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_out =
    foreign "atg_cholesky_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_solve =
    foreign "atg_cholesky_solve" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_solve_out =
    foreign "atg_cholesky_solve_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_choose_qparams_optimized =
    foreign
      "atg_choose_qparams_optimized"
      (ptr t @-> t @-> int64_t @-> int64_t @-> double @-> int64_t @-> returning void)

  let stubs_chunk = foreign "atg_chunk" (t @-> int64_t @-> int64_t @-> returning (ptr t))
  let stubs_clamp = foreign "atg_clamp" (ptr t @-> t @-> returning void)
  let stubs_clamp1 = foreign "atg_clamp1" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_clamp_ = foreign "atg_clamp_" (ptr t @-> t @-> returning void)
  let stubs_clamp_1 = foreign "atg_clamp_1" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_clamp_max = foreign "atg_clamp_max" (ptr t @-> t @-> t @-> returning void)
  let stubs_clamp_max_ = foreign "atg_clamp_max_" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_max_out =
    foreign "atg_clamp_max_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_min = foreign "atg_clamp_min" (ptr t @-> t @-> t @-> returning void)
  let stubs_clamp_min_ = foreign "atg_clamp_min_" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_min_out =
    foreign "atg_clamp_min_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_out = foreign "atg_clamp_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_out1 =
    foreign "atg_clamp_out1" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_clip = foreign "atg_clip" (ptr t @-> t @-> returning void)
  let stubs_clip1 = foreign "atg_clip1" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_clip_ = foreign "atg_clip_" (ptr t @-> t @-> returning void)
  let stubs_clip_1 = foreign "atg_clip_1" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_clip_out = foreign "atg_clip_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_clip_out1 =
    foreign "atg_clip_out1" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_clone = foreign "atg_clone" (ptr t @-> t @-> returning void)
  let stubs_coalesce = foreign "atg_coalesce" (ptr t @-> t @-> returning void)

  let stubs_col2im =
    foreign
      "atg_col2im"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col2im_backward =
    foreign
      "atg_col2im_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col2im_backward_out =
    foreign
      "atg_col2im_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col2im_out =
    foreign
      "atg_col2im_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col_indices = foreign "atg_col_indices" (ptr t @-> t @-> returning void)

  let stubs_column_stack =
    foreign "atg_column_stack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_column_stack_out =
    foreign "atg_column_stack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_combinations =
    foreign "atg_combinations" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_complex = foreign "atg_complex" (ptr t @-> t @-> t @-> returning void)

  let stubs_complex_out =
    foreign "atg_complex_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_conj = foreign "atg_conj" (ptr t @-> t @-> returning void)
  let stubs_conj_out = foreign "atg_conj_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_constant_pad_nd =
    foreign "atg_constant_pad_nd" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_contiguous = foreign "atg_contiguous" (ptr t @-> t @-> returning void)

  let stubs_conv1d =
    foreign
      "atg_conv1d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv1d1 =
    foreign
      "atg_conv1d1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv2d =
    foreign
      "atg_conv2d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv2d1 =
    foreign
      "atg_conv2d1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv3d =
    foreign
      "atg_conv3d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)
end

module C4 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_conv3d1 =
    foreign
      "atg_conv3d1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv_depthwise3d =
    foreign
      "atg_conv_depthwise3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_depthwise3d_backward_out =
    foreign
      "atg_conv_depthwise3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_tbc =
    foreign "atg_conv_tbc" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_conv_tbc_backward =
    foreign
      "atg_conv_tbc_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_conv_transpose1d =
    foreign
      "atg_conv_transpose1d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_transpose2d =
    foreign
      "atg_conv_transpose2d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_transpose3d =
    foreign
      "atg_conv_transpose3d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_convolution =
    foreign
      "atg_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_convolution_overrideable =
    foreign
      "atg_convolution_overrideable"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_copy_sparse_to_sparse_ =
    foreign "atg_copy_sparse_to_sparse_" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_copysign = foreign "atg_copysign" (ptr t @-> t @-> t @-> returning void)
  let stubs_copysign_ = foreign "atg_copysign_" (ptr t @-> t @-> t @-> returning void)

  let stubs_copysign_out =
    foreign "atg_copysign_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_cos = foreign "atg_cos" (ptr t @-> t @-> returning void)
  let stubs_cos_ = foreign "atg_cos_" (ptr t @-> t @-> returning void)
  let stubs_cos_out = foreign "atg_cos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_cosh = foreign "atg_cosh" (ptr t @-> t @-> returning void)
  let stubs_cosh_ = foreign "atg_cosh_" (ptr t @-> t @-> returning void)
  let stubs_cosh_out = foreign "atg_cosh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_cosine_embedding_loss =
    foreign
      "atg_cosine_embedding_loss"
      (ptr t @-> t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_cosine_similarity =
    foreign
      "atg_cosine_similarity"
      (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_cross = foreign "atg_cross" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cross_entropy_loss =
    foreign
      "atg_cross_entropy_loss"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_cross_out =
    foreign "atg_cross_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_crow_indices = foreign "atg_crow_indices" (ptr t @-> t @-> returning void)

  let stubs_ctc_loss =
    foreign
      "atg_ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_ctc_loss1 =
    foreign
      "atg_ctc_loss1"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_cudnn_affine_grid_generator =
    foreign
      "atg_cudnn_affine_grid_generator"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_cudnn_affine_grid_generator_backward =
    foreign
      "atg_cudnn_affine_grid_generator_backward"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_cudnn_batch_norm =
    foreign
      "atg_cudnn_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_cudnn_batch_norm_backward =
    foreign
      "atg_cudnn_batch_norm_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs_cudnn_convolution =
    foreign
      "atg_cudnn_convolution"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution1 =
    foreign
      "atg_cudnn_convolution1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution2 =
    foreign
      "atg_cudnn_convolution2"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_backward_input =
    foreign
      "atg_cudnn_convolution_backward_input"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_backward_weight =
    foreign
      "atg_cudnn_convolution_backward_weight"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_relu =
    foreign
      "atg_cudnn_convolution_relu"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_convolution_transpose =
    foreign
      "atg_cudnn_convolution_transpose"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_transpose1 =
    foreign
      "atg_cudnn_convolution_transpose1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_transpose2 =
    foreign
      "atg_cudnn_convolution_transpose2"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_transpose_backward_input =
    foreign
      "atg_cudnn_convolution_transpose_backward_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_transpose_backward_weight =
    foreign
      "atg_cudnn_convolution_transpose_backward_weight"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_grid_sampler =
    foreign "atg_cudnn_grid_sampler" (ptr t @-> t @-> t @-> returning void)

  let stubs_cudnn_grid_sampler_backward =
    foreign "atg_cudnn_grid_sampler_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_cummax = foreign "atg_cummax" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cummax_out =
    foreign "atg_cummax_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cummaxmin_backward =
    foreign
      "atg_cummaxmin_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cummin = foreign "atg_cummin" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cummin_out =
    foreign "atg_cummin_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cumprod =
    foreign "atg_cumprod" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumprod_ =
    foreign "atg_cumprod_" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumprod_backward =
    foreign "atg_cumprod_backward" (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_cumprod_out =
    foreign "atg_cumprod_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum =
    foreign "atg_cumsum" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum_ =
    foreign "atg_cumsum_" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum_out =
    foreign "atg_cumsum_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_data = foreign "atg_data" (ptr t @-> t @-> returning void)
  let stubs_deg2rad = foreign "atg_deg2rad" (ptr t @-> t @-> returning void)
  let stubs_deg2rad_ = foreign "atg_deg2rad_" (ptr t @-> t @-> returning void)
  let stubs_deg2rad_out = foreign "atg_deg2rad_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_dequantize = foreign "atg_dequantize" (ptr t @-> t @-> returning void)
  let stubs_dequantize1 = foreign "atg_dequantize1" (ptr t @-> int @-> returning (ptr t))
  let stubs_det = foreign "atg_det" (ptr t @-> t @-> returning void)
  let stubs_detach = foreign "atg_detach" (ptr t @-> t @-> returning void)
  let stubs_detach_ = foreign "atg_detach_" (ptr t @-> t @-> returning void)
  let stubs_diag = foreign "atg_diag" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_diag_backward =
    foreign
      "atg_diag_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> returning void)

  let stubs_diag_embed =
    foreign
      "atg_diag_embed"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diag_out =
    foreign "atg_diag_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_diagflat = foreign "atg_diagflat" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_diagonal =
    foreign
      "atg_diagonal"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diagonal_backward =
    foreign
      "atg_diagonal_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_diff =
    foreign "atg_diff" (ptr t @-> t @-> int64_t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_diff_out =
    foreign
      "atg_diff_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_digamma = foreign "atg_digamma" (ptr t @-> t @-> returning void)
  let stubs_digamma_ = foreign "atg_digamma_" (ptr t @-> t @-> returning void)
  let stubs_digamma_out = foreign "atg_digamma_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_dist = foreign "atg_dist" (ptr t @-> t @-> t @-> returning void)
  let stubs_div = foreign "atg_div" (ptr t @-> t @-> t @-> returning void)
  let stubs_div1 = foreign "atg_div1" (ptr t @-> t @-> t @-> string @-> returning void)
  let stubs_div_ = foreign "atg_div_" (ptr t @-> t @-> t @-> returning void)
  let stubs_div_1 = foreign "atg_div_1" (ptr t @-> t @-> t @-> string @-> returning void)
  let stubs_div_out = foreign "atg_div_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_div_out1 =
    foreign "atg_div_out1" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_divide = foreign "atg_divide" (ptr t @-> t @-> t @-> returning void)

  let stubs_divide1 =
    foreign "atg_divide1" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_divide_ = foreign "atg_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_divide_1 =
    foreign "atg_divide_1" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_divide_out =
    foreign "atg_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_divide_out1 =
    foreign "atg_divide_out1" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_dot = foreign "atg_dot" (ptr t @-> t @-> t @-> returning void)
  let stubs_dot_out = foreign "atg_dot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_dropout =
    foreign "atg_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_dropout_ =
    foreign "atg_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_dsplit = foreign "atg_dsplit" (t @-> int64_t @-> returning (ptr t))

  let stubs_dsplit1 =
    foreign "atg_dsplit1" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_dstack = foreign "atg_dstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_dstack_out =
    foreign "atg_dstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_eig = foreign "atg_eig" (ptr t @-> t @-> int @-> returning void)
end

module C5 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_eig_out =
    foreign "atg_eig_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_einsum =
    foreign "atg_einsum" (ptr t @-> string @-> ptr t @-> int @-> returning void)

  let stubs_elu = foreign "atg_elu" (ptr t @-> t @-> returning void)
  let stubs_elu_ = foreign "atg_elu_" (ptr t @-> t @-> returning void)
  let stubs_elu_out = foreign "atg_elu_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_embedding =
    foreign
      "atg_embedding"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_embedding_backward =
    foreign
      "atg_embedding_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_embedding_bag =
    foreign
      "atg_embedding_bag"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> returning void)

  let stubs_embedding_bag1 =
    foreign
      "atg_embedding_bag1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_embedding_dense_backward =
    foreign
      "atg_embedding_dense_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_embedding_renorm_ =
    foreign
      "atg_embedding_renorm_"
      (ptr t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_embedding_sparse_backward =
    foreign
      "atg_embedding_sparse_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_empty =
    foreign "atg_empty" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_empty_like = foreign "atg_empty_like" (ptr t @-> t @-> returning void)

  let stubs_empty_out =
    foreign "atg_empty_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_empty_quantized =
    foreign "atg_empty_quantized" (ptr t @-> ptr int64_t @-> int @-> t @-> returning void)

  let stubs_empty_strided =
    foreign
      "atg_empty_strided"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_eq = foreign "atg_eq" (ptr t @-> t @-> t @-> returning void)
  let stubs_eq_ = foreign "atg_eq_" (ptr t @-> t @-> t @-> returning void)
  let stubs_eq_out = foreign "atg_eq_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_erf = foreign "atg_erf" (ptr t @-> t @-> returning void)
  let stubs_erf_ = foreign "atg_erf_" (ptr t @-> t @-> returning void)
  let stubs_erf_out = foreign "atg_erf_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_erfc = foreign "atg_erfc" (ptr t @-> t @-> returning void)
  let stubs_erfc_ = foreign "atg_erfc_" (ptr t @-> t @-> returning void)
  let stubs_erfc_out = foreign "atg_erfc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_erfinv = foreign "atg_erfinv" (ptr t @-> t @-> returning void)
  let stubs_erfinv_ = foreign "atg_erfinv_" (ptr t @-> t @-> returning void)
  let stubs_erfinv_out = foreign "atg_erfinv_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_exp = foreign "atg_exp" (ptr t @-> t @-> returning void)
  let stubs_exp2 = foreign "atg_exp2" (ptr t @-> t @-> returning void)
  let stubs_exp2_ = foreign "atg_exp2_" (ptr t @-> t @-> returning void)
  let stubs_exp2_out = foreign "atg_exp2_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_exp_ = foreign "atg_exp_" (ptr t @-> t @-> returning void)
  let stubs_exp_out = foreign "atg_exp_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_expand =
    foreign "atg_expand" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_expand_as = foreign "atg_expand_as" (ptr t @-> t @-> t @-> returning void)
  let stubs_expm1 = foreign "atg_expm1" (ptr t @-> t @-> returning void)
  let stubs_expm1_ = foreign "atg_expm1_" (ptr t @-> t @-> returning void)
  let stubs_expm1_out = foreign "atg_expm1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_exponential_ =
    foreign "atg_exponential_" (ptr t @-> t @-> double @-> returning void)

  let stubs_eye = foreign "atg_eye" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_eye1 =
    foreign "atg_eye1" (ptr t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_eye_out = foreign "atg_eye_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_eye_out1 =
    foreign "atg_eye_out1" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine =
    foreign
      "atg_fake_quantize_per_channel_affine"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine_cachemask =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine =
    foreign
      "atg_fake_quantize_per_tensor_affine"
      (ptr t @-> t @-> double @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_cachemask =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask"
      (ptr t @-> t @-> double @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_fbgemm_linear_fp16_weight =
    foreign "atg_fbgemm_linear_fp16_weight" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_fbgemm_linear_fp16_weight_fp32_activation =
    foreign
      "atg_fbgemm_linear_fp16_weight_fp32_activation"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_fbgemm_pack_gemm_matrix_fp16 =
    foreign "atg_fbgemm_pack_gemm_matrix_fp16" (ptr t @-> t @-> returning void)

  let stubs_fbgemm_pack_quantized_matrix =
    foreign "atg_fbgemm_pack_quantized_matrix" (ptr t @-> t @-> returning void)

  let stubs_fbgemm_pack_quantized_matrix1 =
    foreign
      "atg_fbgemm_pack_quantized_matrix1"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_feature_alpha_dropout =
    foreign "atg_feature_alpha_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_alpha_dropout_ =
    foreign
      "atg_feature_alpha_dropout_"
      (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_dropout =
    foreign "atg_feature_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_dropout_ =
    foreign "atg_feature_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_fft_fft =
    foreign
      "atg_fft_fft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_fft2 =
    foreign
      "atg_fft_fft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fft2_out =
    foreign
      "atg_fft_fft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fft_out =
    foreign
      "atg_fft_fft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_fftfreq =
    foreign
      "atg_fft_fftfreq"
      (ptr t @-> int64_t @-> double @-> int @-> int @-> returning void)

  let stubs_fft_fftfreq_out =
    foreign "atg_fft_fftfreq_out" (ptr t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_fft_fftn =
    foreign
      "atg_fft_fftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fftn_out =
    foreign
      "atg_fft_fftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fftshift =
    foreign "atg_fft_fftshift" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fft_hfft =
    foreign
      "atg_fft_hfft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_hfft_out =
    foreign
      "atg_fft_hfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_ifft =
    foreign
      "atg_fft_ifft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_ifft2 =
    foreign
      "atg_fft_ifft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifft2_out =
    foreign
      "atg_fft_ifft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifft_out =
    foreign
      "atg_fft_ifft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_ifftn =
    foreign
      "atg_fft_ifftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifftn_out =
    foreign
      "atg_fft_ifftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifftshift =
    foreign "atg_fft_ifftshift" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fft_ihfft =
    foreign
      "atg_fft_ihfft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_ihfft_out =
    foreign
      "atg_fft_ihfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_irfft =
    foreign
      "atg_fft_irfft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_irfft2 =
    foreign
      "atg_fft_irfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfft2_out =
    foreign
      "atg_fft_irfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfft_out =
    foreign
      "atg_fft_irfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_irfftn =
    foreign
      "atg_fft_irfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfftn_out =
    foreign
      "atg_fft_irfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfft =
    foreign
      "atg_fft_rfft"
      (ptr t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_rfft2 =
    foreign
      "atg_fft_rfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfft2_out =
    foreign
      "atg_fft_rfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfft_out =
    foreign
      "atg_fft_rfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> string @-> returning void)

  let stubs_fft_rfftfreq =
    foreign
      "atg_fft_rfftfreq"
      (ptr t @-> int64_t @-> double @-> int @-> int @-> returning void)

  let stubs_fft_rfftfreq_out =
    foreign "atg_fft_rfftfreq_out" (ptr t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_fft_rfftn =
    foreign
      "atg_fft_rfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfftn_out =
    foreign
      "atg_fft_rfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fill_ = foreign "atg_fill_" (ptr t @-> t @-> t @-> returning void)
  let stubs_fix = foreign "atg_fix" (ptr t @-> t @-> returning void)
  let stubs_fix_ = foreign "atg_fix_" (ptr t @-> t @-> returning void)
  let stubs_fix_out = foreign "atg_fix_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_flatten =
    foreign "atg_flatten" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_flatten_dense_tensors =
    foreign "atg_flatten_dense_tensors" (ptr t @-> ptr t @-> int @-> returning void)
end

module C6 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_flip =
    foreign "atg_flip" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fliplr = foreign "atg_fliplr" (ptr t @-> t @-> returning void)
  let stubs_flipud = foreign "atg_flipud" (ptr t @-> t @-> returning void)
  let stubs_float_power = foreign "atg_float_power" (ptr t @-> t @-> t @-> returning void)

  let stubs_float_power_ =
    foreign "atg_float_power_" (ptr t @-> t @-> t @-> returning void)

  let stubs_float_power_out =
    foreign "atg_float_power_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_floor = foreign "atg_floor" (ptr t @-> t @-> returning void)
  let stubs_floor_ = foreign "atg_floor_" (ptr t @-> t @-> returning void)

  let stubs_floor_divide =
    foreign "atg_floor_divide" (ptr t @-> t @-> t @-> returning void)

  let stubs_floor_divide_ =
    foreign "atg_floor_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_floor_divide_out =
    foreign "atg_floor_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_floor_out = foreign "atg_floor_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmax = foreign "atg_fmax" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmax_out = foreign "atg_fmax_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_fmin = foreign "atg_fmin" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmin_out = foreign "atg_fmin_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_fmod = foreign "atg_fmod" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmod_ = foreign "atg_fmod_" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmod_out = foreign "atg_fmod_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_frac = foreign "atg_frac" (ptr t @-> t @-> returning void)
  let stubs_frac_ = foreign "atg_frac_" (ptr t @-> t @-> returning void)
  let stubs_frac_out = foreign "atg_frac_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_fractional_max_pool2d =
    foreign
      "atg_fractional_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_backward =
    foreign
      "atg_fractional_max_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_backward_out =
    foreign
      "atg_fractional_max_pool2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_out =
    foreign
      "atg_fractional_max_pool2d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d =
    foreign
      "atg_fractional_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_backward =
    foreign
      "atg_fractional_max_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_backward_out =
    foreign
      "atg_fractional_max_pool3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_out =
    foreign
      "atg_fractional_max_pool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_frexp = foreign "atg_frexp" (ptr t @-> t @-> returning void)

  let stubs_frexp_out =
    foreign "atg_frexp_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_frobenius_norm = foreign "atg_frobenius_norm" (ptr t @-> t @-> returning void)

  let stubs_frobenius_norm1 =
    foreign
      "atg_frobenius_norm1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_frobenius_norm_out =
    foreign
      "atg_frobenius_norm_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_from_file =
    foreign
      "atg_from_file"
      (ptr t @-> string @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs_gather =
    foreign "atg_gather" (ptr t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gather_backward =
    foreign
      "atg_gather_backward"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gather_out =
    foreign
      "atg_gather_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gcd = foreign "atg_gcd" (ptr t @-> t @-> t @-> returning void)
  let stubs_gcd_ = foreign "atg_gcd_" (ptr t @-> t @-> t @-> returning void)
  let stubs_gcd_out = foreign "atg_gcd_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_ge = foreign "atg_ge" (ptr t @-> t @-> t @-> returning void)
  let stubs_ge_ = foreign "atg_ge_" (ptr t @-> t @-> t @-> returning void)
  let stubs_ge_out = foreign "atg_ge_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_gelu = foreign "atg_gelu" (ptr t @-> t @-> returning void)

  let stubs_gelu_backward =
    foreign "atg_gelu_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_geometric_ =
    foreign "atg_geometric_" (ptr t @-> t @-> double @-> returning void)

  let stubs_geqrf = foreign "atg_geqrf" (ptr t @-> t @-> returning void)

  let stubs_geqrf_out =
    foreign "atg_geqrf_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_ger = foreign "atg_ger" (ptr t @-> t @-> t @-> returning void)
  let stubs_ger_out = foreign "atg_ger_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_glu = foreign "atg_glu" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_glu_backward =
    foreign "atg_glu_backward" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_backward_out =
    foreign "atg_glu_backward_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_out =
    foreign "atg_glu_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_grad = foreign "atg_grad" (ptr t @-> t @-> returning void)
  let stubs_greater = foreign "atg_greater" (ptr t @-> t @-> t @-> returning void)
  let stubs_greater_ = foreign "atg_greater_" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_equal =
    foreign "atg_greater_equal" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_equal_ =
    foreign "atg_greater_equal_" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_equal_out =
    foreign "atg_greater_equal_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_greater_out =
    foreign "atg_greater_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_grid_sampler =
    foreign
      "atg_grid_sampler"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_2d =
    foreign
      "atg_grid_sampler_2d"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_2d_backward =
    foreign
      "atg_grid_sampler_2d_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_3d =
    foreign
      "atg_grid_sampler_3d"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_3d_backward =
    foreign
      "atg_grid_sampler_3d_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_group_norm =
    foreign
      "atg_group_norm"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_gru =
    foreign
      "atg_gru"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_gru1 =
    foreign
      "atg_gru1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_gru_cell =
    foreign "atg_gru_cell" (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_gt = foreign "atg_gt" (ptr t @-> t @-> t @-> returning void)
  let stubs_gt_ = foreign "atg_gt_" (ptr t @-> t @-> t @-> returning void)
  let stubs_gt_out = foreign "atg_gt_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hamming_window =
    foreign "atg_hamming_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_hamming_window1 =
    foreign
      "atg_hamming_window1"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_hamming_window2 =
    foreign
      "atg_hamming_window2"
      (ptr t @-> int64_t @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_hamming_window3 =
    foreign
      "atg_hamming_window3"
      (ptr t @-> int64_t @-> int @-> double @-> double @-> int @-> int @-> returning void)

  let stubs_hann_window =
    foreign "atg_hann_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_hann_window1 =
    foreign
      "atg_hann_window1"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_hardshrink = foreign "atg_hardshrink" (ptr t @-> t @-> returning void)
  let stubs_hardsigmoid = foreign "atg_hardsigmoid" (ptr t @-> t @-> returning void)
  let stubs_hardsigmoid_ = foreign "atg_hardsigmoid_" (ptr t @-> t @-> returning void)

  let stubs_hardsigmoid_backward =
    foreign "atg_hardsigmoid_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardsigmoid_out =
    foreign "atg_hardsigmoid_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardswish = foreign "atg_hardswish" (ptr t @-> t @-> returning void)
  let stubs_hardswish_ = foreign "atg_hardswish_" (ptr t @-> t @-> returning void)

  let stubs_hardswish_backward =
    foreign "atg_hardswish_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardswish_out =
    foreign "atg_hardswish_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardtanh = foreign "atg_hardtanh" (ptr t @-> t @-> returning void)
  let stubs_hardtanh_ = foreign "atg_hardtanh_" (ptr t @-> t @-> returning void)

  let stubs_hardtanh_out =
    foreign "atg_hardtanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_heaviside = foreign "atg_heaviside" (ptr t @-> t @-> t @-> returning void)
  let stubs_heaviside_ = foreign "atg_heaviside_" (ptr t @-> t @-> t @-> returning void)

  let stubs_heaviside_out =
    foreign "atg_heaviside_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hinge_embedding_loss =
    foreign
      "atg_hinge_embedding_loss"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_histc = foreign "atg_histc" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_histc_out =
    foreign "atg_histc_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_hsplit = foreign "atg_hsplit" (t @-> int64_t @-> returning (ptr t))
end

module C7 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_hsplit1 =
    foreign "atg_hsplit1" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_hspmm = foreign "atg_hspmm" (ptr t @-> t @-> t @-> returning void)

  let stubs_hspmm_out =
    foreign "atg_hspmm_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hstack = foreign "atg_hstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_hstack_out =
    foreign "atg_hstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_huber_loss =
    foreign "atg_huber_loss" (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_backward =
    foreign
      "atg_huber_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_backward_out =
    foreign
      "atg_huber_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_out =
    foreign
      "atg_huber_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_hypot = foreign "atg_hypot" (ptr t @-> t @-> t @-> returning void)
  let stubs_hypot_ = foreign "atg_hypot_" (ptr t @-> t @-> t @-> returning void)

  let stubs_hypot_out =
    foreign "atg_hypot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_i0 = foreign "atg_i0" (ptr t @-> t @-> returning void)
  let stubs_i0_ = foreign "atg_i0_" (ptr t @-> t @-> returning void)
  let stubs_i0_out = foreign "atg_i0_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_igamma = foreign "atg_igamma" (ptr t @-> t @-> t @-> returning void)
  let stubs_igamma_ = foreign "atg_igamma_" (ptr t @-> t @-> t @-> returning void)

  let stubs_igamma_out =
    foreign "atg_igamma_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_igammac = foreign "atg_igammac" (ptr t @-> t @-> t @-> returning void)
  let stubs_igammac_ = foreign "atg_igammac_" (ptr t @-> t @-> t @-> returning void)

  let stubs_igammac_out =
    foreign "atg_igammac_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_im2col =
    foreign
      "atg_im2col"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_im2col_backward =
    foreign
      "atg_im2col_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_im2col_backward_out =
    foreign
      "atg_im2col_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_im2col_out =
    foreign
      "atg_im2col_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_imag = foreign "atg_imag" (ptr t @-> t @-> returning void)
  let stubs_index = foreign "atg_index" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_index_add =
    foreign "atg_index_add" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_add_ =
    foreign "atg_index_add_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_copy =
    foreign "atg_index_copy" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_copy_ =
    foreign "atg_index_copy_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_fill =
    foreign "atg_index_fill" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_fill_ =
    foreign "atg_index_fill_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_put =
    foreign
      "atg_index_put"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs_index_put_ =
    foreign
      "atg_index_put_"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs_index_select =
    foreign "atg_index_select" (ptr t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_index_select_backward =
    foreign
      "atg_index_select_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> t @-> returning void)

  let stubs_index_select_out =
    foreign "atg_index_select_out" (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_indices = foreign "atg_indices" (ptr t @-> t @-> returning void)

  let stubs_infinitely_differentiable_gelu_backward =
    foreign
      "atg_infinitely_differentiable_gelu_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_inner = foreign "atg_inner" (ptr t @-> t @-> t @-> returning void)

  let stubs_inner_out =
    foreign "atg_inner_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_instance_norm =
    foreign
      "atg_instance_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> int
      @-> returning void)

  let stubs_int_repr = foreign "atg_int_repr" (ptr t @-> t @-> returning void)
  let stubs_inverse = foreign "atg_inverse" (ptr t @-> t @-> returning void)
  let stubs_inverse_out = foreign "atg_inverse_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isclose =
    foreign
      "atg_isclose"
      (ptr t @-> t @-> t @-> double @-> double @-> int @-> returning void)

  let stubs_isfinite = foreign "atg_isfinite" (ptr t @-> t @-> returning void)
  let stubs_isinf = foreign "atg_isinf" (ptr t @-> t @-> returning void)
  let stubs_isnan = foreign "atg_isnan" (ptr t @-> t @-> returning void)
  let stubs_isneginf = foreign "atg_isneginf" (ptr t @-> t @-> returning void)

  let stubs_isneginf_out =
    foreign "atg_isneginf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isposinf = foreign "atg_isposinf" (ptr t @-> t @-> returning void)

  let stubs_isposinf_out =
    foreign "atg_isposinf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isreal = foreign "atg_isreal" (ptr t @-> t @-> returning void)

  let stubs_istft =
    foreign
      "atg_istft"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_kaiser_window =
    foreign "atg_kaiser_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_kaiser_window1 =
    foreign
      "atg_kaiser_window1"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_kaiser_window2 =
    foreign
      "atg_kaiser_window2"
      (ptr t @-> int64_t @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_kl_div =
    foreign "atg_kl_div" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_kl_div_backward =
    foreign
      "atg_kl_div_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_kron = foreign "atg_kron" (ptr t @-> t @-> t @-> returning void)
  let stubs_kron_out = foreign "atg_kron_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_kthvalue =
    foreign "atg_kthvalue" (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_kthvalue_out =
    foreign
      "atg_kthvalue_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_l1_loss =
    foreign "atg_l1_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_l1_loss_backward =
    foreign "atg_l1_loss_backward" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_l1_loss_backward_out =
    foreign
      "atg_l1_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_l1_loss_out =
    foreign "atg_l1_loss_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_layer_norm =
    foreign
      "atg_layer_norm"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> double
      @-> int
      @-> returning void)

  let stubs_lcm = foreign "atg_lcm" (ptr t @-> t @-> t @-> returning void)
  let stubs_lcm_ = foreign "atg_lcm_" (ptr t @-> t @-> t @-> returning void)
  let stubs_lcm_out = foreign "atg_lcm_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_ldexp = foreign "atg_ldexp" (ptr t @-> t @-> t @-> returning void)
  let stubs_ldexp_ = foreign "atg_ldexp_" (ptr t @-> t @-> t @-> returning void)

  let stubs_ldexp_out =
    foreign "atg_ldexp_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_le = foreign "atg_le" (ptr t @-> t @-> t @-> returning void)
  let stubs_le_ = foreign "atg_le_" (ptr t @-> t @-> t @-> returning void)
  let stubs_le_out = foreign "atg_le_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_leaky_relu = foreign "atg_leaky_relu" (ptr t @-> t @-> returning void)
  let stubs_leaky_relu_ = foreign "atg_leaky_relu_" (ptr t @-> t @-> returning void)

  let stubs_leaky_relu_out =
    foreign "atg_leaky_relu_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_lerp = foreign "atg_lerp" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_lerp_ = foreign "atg_lerp_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lerp_out =
    foreign "atg_lerp_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_less = foreign "atg_less" (ptr t @-> t @-> t @-> returning void)
  let stubs_less_ = foreign "atg_less_" (ptr t @-> t @-> t @-> returning void)
  let stubs_less_equal = foreign "atg_less_equal" (ptr t @-> t @-> t @-> returning void)
  let stubs_less_equal_ = foreign "atg_less_equal_" (ptr t @-> t @-> t @-> returning void)

  let stubs_less_equal_out =
    foreign "atg_less_equal_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_less_out = foreign "atg_less_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_lgamma = foreign "atg_lgamma" (ptr t @-> t @-> returning void)
  let stubs_lgamma_ = foreign "atg_lgamma_" (ptr t @-> t @-> returning void)
  let stubs_lgamma_out = foreign "atg_lgamma_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_cholesky =
    foreign "atg_linalg_cholesky" (ptr t @-> t @-> returning void)

  let stubs_linalg_cholesky_ex =
    foreign "atg_linalg_cholesky_ex" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_cholesky_ex_out =
    foreign
      "atg_linalg_cholesky_ex_out"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_cholesky_out =
    foreign "atg_linalg_cholesky_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_cond = foreign "atg_linalg_cond" (ptr t @-> t @-> returning void)

  let stubs_linalg_cond1 =
    foreign "atg_linalg_cond1" (ptr t @-> t @-> string @-> returning void)
end

module C8 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_linalg_cond_out =
    foreign "atg_linalg_cond_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_cond_out1 =
    foreign "atg_linalg_cond_out1" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_det = foreign "atg_linalg_det" (ptr t @-> t @-> returning void)

  let stubs_linalg_det_out =
    foreign "atg_linalg_det_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_eig = foreign "atg_linalg_eig" (ptr t @-> t @-> returning void)

  let stubs_linalg_eig_out =
    foreign "atg_linalg_eig_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_eigh =
    foreign "atg_linalg_eigh" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_eigh_out =
    foreign "atg_linalg_eigh_out" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_eigvals = foreign "atg_linalg_eigvals" (ptr t @-> t @-> returning void)

  let stubs_linalg_eigvals_out =
    foreign "atg_linalg_eigvals_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_eigvalsh =
    foreign "atg_linalg_eigvalsh" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_eigvalsh_out =
    foreign "atg_linalg_eigvalsh_out" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_householder_product =
    foreign "atg_linalg_householder_product" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_householder_product_out =
    foreign
      "atg_linalg_householder_product_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_inv = foreign "atg_linalg_inv" (ptr t @-> t @-> returning void)

  let stubs_linalg_inv_ex =
    foreign "atg_linalg_inv_ex" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_inv_ex_out =
    foreign "atg_linalg_inv_ex_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_inv_out =
    foreign "atg_linalg_inv_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_lstsq =
    foreign "atg_linalg_lstsq" (ptr t @-> t @-> t @-> double @-> string @-> returning void)

  let stubs_linalg_lstsq_out =
    foreign
      "atg_linalg_lstsq_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> string @-> returning void)

  let stubs_linalg_matrix_norm =
    foreign
      "atg_linalg_matrix_norm"
      (ptr t @-> t @-> string @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_linalg_matrix_norm_out =
    foreign
      "atg_linalg_matrix_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_linalg_matrix_power =
    foreign "atg_linalg_matrix_power" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_matrix_power_out =
    foreign
      "atg_linalg_matrix_power_out"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_matrix_rank =
    foreign "atg_linalg_matrix_rank" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_matrix_rank1 =
    foreign "atg_linalg_matrix_rank1" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_matrix_rank_out =
    foreign
      "atg_linalg_matrix_rank_out"
      (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_matrix_rank_out1 =
    foreign
      "atg_linalg_matrix_rank_out1"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_multi_dot =
    foreign "atg_linalg_multi_dot" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_linalg_multi_dot_out =
    foreign "atg_linalg_multi_dot_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_linalg_pinv =
    foreign "atg_linalg_pinv" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_pinv1 =
    foreign "atg_linalg_pinv1" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_pinv_out =
    foreign "atg_linalg_pinv_out" (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_pinv_out1 =
    foreign "atg_linalg_pinv_out1" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_qr = foreign "atg_linalg_qr" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_qr_out =
    foreign "atg_linalg_qr_out" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_slogdet = foreign "atg_linalg_slogdet" (ptr t @-> t @-> returning void)

  let stubs_linalg_slogdet_out =
    foreign "atg_linalg_slogdet_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_solve =
    foreign "atg_linalg_solve" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_solve_out =
    foreign "atg_linalg_solve_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_svd = foreign "atg_linalg_svd" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_svd_out =
    foreign "atg_linalg_svd_out" (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_svdvals = foreign "atg_linalg_svdvals" (ptr t @-> t @-> returning void)

  let stubs_linalg_svdvals_out =
    foreign "atg_linalg_svdvals_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_tensorinv =
    foreign "atg_linalg_tensorinv" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_tensorinv_out =
    foreign "atg_linalg_tensorinv_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_tensorsolve =
    foreign
      "atg_linalg_tensorsolve"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_linalg_tensorsolve_out =
    foreign
      "atg_linalg_tensorsolve_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_linear = foreign "atg_linear" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_log = foreign "atg_log" (ptr t @-> t @-> returning void)
  let stubs_log10 = foreign "atg_log10" (ptr t @-> t @-> returning void)
  let stubs_log10_ = foreign "atg_log10_" (ptr t @-> t @-> returning void)
  let stubs_log10_out = foreign "atg_log10_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log1p = foreign "atg_log1p" (ptr t @-> t @-> returning void)
  let stubs_log1p_ = foreign "atg_log1p_" (ptr t @-> t @-> returning void)
  let stubs_log1p_out = foreign "atg_log1p_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log2 = foreign "atg_log2" (ptr t @-> t @-> returning void)
  let stubs_log2_ = foreign "atg_log2_" (ptr t @-> t @-> returning void)
  let stubs_log2_out = foreign "atg_log2_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log_ = foreign "atg_log_" (ptr t @-> t @-> returning void)

  let stubs_log_normal_ =
    foreign "atg_log_normal_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_log_out = foreign "atg_log_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log_sigmoid = foreign "atg_log_sigmoid" (ptr t @-> t @-> returning void)

  let stubs_log_sigmoid_backward =
    foreign "atg_log_sigmoid_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_log_sigmoid_backward_out =
    foreign
      "atg_log_sigmoid_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_log_sigmoid_out =
    foreign "atg_log_sigmoid_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_log_softmax =
    foreign "atg_log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_logaddexp = foreign "atg_logaddexp" (ptr t @-> t @-> t @-> returning void)
  let stubs_logaddexp2 = foreign "atg_logaddexp2" (ptr t @-> t @-> t @-> returning void)

  let stubs_logaddexp2_out =
    foreign "atg_logaddexp2_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logaddexp_out =
    foreign "atg_logaddexp_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logcumsumexp =
    foreign "atg_logcumsumexp" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_logcumsumexp_out =
    foreign "atg_logcumsumexp_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_logdet = foreign "atg_logdet" (ptr t @-> t @-> returning void)
  let stubs_logical_and = foreign "atg_logical_and" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_and_ =
    foreign "atg_logical_and_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_and_out =
    foreign "atg_logical_and_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logical_not = foreign "atg_logical_not" (ptr t @-> t @-> returning void)
  let stubs_logical_not_ = foreign "atg_logical_not_" (ptr t @-> t @-> returning void)

  let stubs_logical_not_out =
    foreign "atg_logical_not_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_or = foreign "atg_logical_or" (ptr t @-> t @-> t @-> returning void)
  let stubs_logical_or_ = foreign "atg_logical_or_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_or_out =
    foreign "atg_logical_or_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logical_xor = foreign "atg_logical_xor" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_xor_ =
    foreign "atg_logical_xor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_xor_out =
    foreign "atg_logical_xor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logit = foreign "atg_logit" (ptr t @-> t @-> double @-> returning void)
  let stubs_logit_ = foreign "atg_logit_" (ptr t @-> t @-> double @-> returning void)

  let stubs_logit_backward =
    foreign "atg_logit_backward" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_logit_backward_out =
    foreign
      "atg_logit_backward_out"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_logit_out =
    foreign "atg_logit_out" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_logsumexp =
    foreign
      "atg_logsumexp"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_logsumexp_out =
    foreign
      "atg_logsumexp_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_lstm =
    foreign
      "atg_lstm"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_lstm1 =
    foreign
      "atg_lstm1"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_lstm_cell =
    foreign
      "atg_lstm_cell"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_lstsq = foreign "atg_lstsq" (ptr t @-> t @-> t @-> returning void)

  let stubs_lstsq_out =
    foreign "atg_lstsq_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_lt = foreign "atg_lt" (ptr t @-> t @-> t @-> returning void)
  let stubs_lt_ = foreign "atg_lt_" (ptr t @-> t @-> t @-> returning void)
end

module C9 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_lt_out = foreign "atg_lt_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_lu_solve = foreign "atg_lu_solve" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lu_solve_out =
    foreign "atg_lu_solve_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_lu_unpack =
    foreign "atg_lu_unpack" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_lu_unpack_out =
    foreign
      "atg_lu_unpack_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_margin_ranking_loss =
    foreign
      "atg_margin_ranking_loss"
      (ptr t @-> t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_masked_fill =
    foreign "atg_masked_fill" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_fill_ =
    foreign "atg_masked_fill_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_scatter =
    foreign "atg_masked_scatter" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_scatter_ =
    foreign "atg_masked_scatter_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_select =
    foreign "atg_masked_select" (ptr t @-> t @-> t @-> returning void)

  let stubs_masked_select_backward =
    foreign "atg_masked_select_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_select_out =
    foreign "atg_masked_select_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_matmul = foreign "atg_matmul" (ptr t @-> t @-> t @-> returning void)

  let stubs_matmul_out =
    foreign "atg_matmul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_matrix_exp = foreign "atg_matrix_exp" (ptr t @-> t @-> returning void)

  let stubs_matrix_exp_backward =
    foreign "atg_matrix_exp_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_matrix_power =
    foreign "atg_matrix_power" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_matrix_power_out =
    foreign "atg_matrix_power_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_matrix_rank =
    foreign "atg_matrix_rank" (ptr t @-> t @-> int @-> returning void)

  let stubs_matrix_rank1 =
    foreign "atg_matrix_rank1" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_max = foreign "atg_max" (ptr t @-> t @-> returning void)
  let stubs_max1 = foreign "atg_max1" (ptr t @-> t @-> t @-> returning void)
  let stubs_max2 = foreign "atg_max2" (ptr t @-> t @-> int64_t @-> int @-> returning void)
  let stubs_max_out = foreign "atg_max_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_max_out1 =
    foreign "atg_max_out1" (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_max_pool1d =
    foreign
      "atg_max_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool1d_with_indices =
    foreign
      "atg_max_pool1d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d =
    foreign
      "atg_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_with_indices =
    foreign
      "atg_max_pool2d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_with_indices_backward =
    foreign
      "atg_max_pool2d_with_indices_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool2d_with_indices_backward_out =
    foreign
      "atg_max_pool2d_with_indices_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool2d_with_indices_out =
    foreign
      "atg_max_pool2d_with_indices_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d =
    foreign
      "atg_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d_with_indices =
    foreign
      "atg_max_pool3d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d_with_indices_backward =
    foreign
      "atg_max_pool3d_with_indices_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool3d_with_indices_backward_out =
    foreign
      "atg_max_pool3d_with_indices_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool3d_with_indices_out =
    foreign
      "atg_max_pool3d_with_indices_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_unpool2d =
    foreign
      "atg_max_unpool2d"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool2d_backward =
    foreign
      "atg_max_unpool2d_backward"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool2d_backward_out =
    foreign
      "atg_max_unpool2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool2d_out =
    foreign
      "atg_max_unpool2d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool3d =
    foreign
      "atg_max_unpool3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_max_unpool3d_backward =
    foreign
      "atg_max_unpool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_max_unpool3d_backward_out =
    foreign
      "atg_max_unpool3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_max_unpool3d_out =
    foreign
      "atg_max_unpool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_maximum = foreign "atg_maximum" (ptr t @-> t @-> t @-> returning void)

  let stubs_maximum_out =
    foreign "atg_maximum_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mean = foreign "atg_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_mean1 =
    foreign
      "atg_mean1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_mean_out =
    foreign
      "atg_mean_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_median = foreign "atg_median" (ptr t @-> t @-> returning void)

  let stubs_median1 =
    foreign "atg_median1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_median_out =
    foreign
      "atg_median_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_meshgrid = foreign "atg_meshgrid" (ptr t @-> int @-> returning (ptr t))
  let stubs_min = foreign "atg_min" (ptr t @-> t @-> returning void)
  let stubs_min1 = foreign "atg_min1" (ptr t @-> t @-> t @-> returning void)
  let stubs_min2 = foreign "atg_min2" (ptr t @-> t @-> int64_t @-> int @-> returning void)
  let stubs_min_out = foreign "atg_min_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_min_out1 =
    foreign "atg_min_out1" (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_minimum = foreign "atg_minimum" (ptr t @-> t @-> t @-> returning void)

  let stubs_minimum_out =
    foreign "atg_minimum_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_miopen_batch_norm =
    foreign
      "atg_miopen_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_miopen_batch_norm_backward =
    foreign
      "atg_miopen_batch_norm_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_miopen_convolution =
    foreign
      "atg_miopen_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_backward_bias =
    foreign "atg_miopen_convolution_backward_bias" (ptr t @-> t @-> returning void)

  let stubs_miopen_convolution_backward_input =
    foreign
      "atg_miopen_convolution_backward_input"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_backward_weight =
    foreign
      "atg_miopen_convolution_backward_weight"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_transpose =
    foreign
      "atg_miopen_convolution_transpose"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_transpose_backward_input =
    foreign
      "atg_miopen_convolution_transpose_backward_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_transpose_backward_weight =
    foreign
      "atg_miopen_convolution_transpose_backward_weight"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_depthwise_convolution =
    foreign
      "atg_miopen_depthwise_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_depthwise_convolution_backward_input =
    foreign
      "atg_miopen_depthwise_convolution_backward_input"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_depthwise_convolution_backward_weight =
    foreign
      "atg_miopen_depthwise_convolution_backward_weight"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_rnn =
    foreign
      "atg_miopen_rnn"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_mish = foreign "atg_mish" (ptr t @-> t @-> returning void)
  let stubs_mish_ = foreign "atg_mish_" (ptr t @-> t @-> returning void)

  let stubs_mish_backward =
    foreign "atg_mish_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_mish_out = foreign "atg_mish_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d_backward =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_mkldnn_convolution =
    foreign
      "atg_mkldnn_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_convolution_backward_input =
    foreign
      "atg_mkldnn_convolution_backward_input"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_mkldnn_convolution_backward_weights =
    foreign
      "atg_mkldnn_convolution_backward_weights"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_mkldnn_linear =
    foreign "atg_mkldnn_linear" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mkldnn_linear_backward_input =
    foreign
      "atg_mkldnn_linear_backward_input"
      (ptr t @-> ptr int64_t @-> int @-> t @-> t @-> returning void)

  let stubs_mkldnn_linear_backward_weights =
    foreign
      "atg_mkldnn_linear_backward_weights"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_mkldnn_max_pool2d =
    foreign
      "atg_mkldnn_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool2d_backward =
    foreign
      "atg_mkldnn_max_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d =
    foreign
      "atg_mkldnn_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d_backward =
    foreign
      "atg_mkldnn_max_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_reorder_conv2d_weight =
    foreign
      "atg_mkldnn_reorder_conv2d_weight"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_reorder_conv3d_weight =
    foreign
      "atg_mkldnn_reorder_conv3d_weight"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mm = foreign "atg_mm" (ptr t @-> t @-> t @-> returning void)
  let stubs_mm_out = foreign "atg_mm_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_mode = foreign "atg_mode" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_mode_out =
    foreign "atg_mode_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_moveaxis =
    foreign
      "atg_moveaxis"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_moveaxis1 =
    foreign "atg_moveaxis1" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_movedim =
    foreign
      "atg_movedim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)
end

module C10 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_movedim1 =
    foreign "atg_movedim1" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_mse_loss =
    foreign "atg_mse_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_backward =
    foreign
      "atg_mse_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_backward_out =
    foreign
      "atg_mse_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_out =
    foreign "atg_mse_loss_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_msort = foreign "atg_msort" (ptr t @-> t @-> returning void)
  let stubs_msort_out = foreign "atg_msort_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_mul = foreign "atg_mul" (ptr t @-> t @-> t @-> returning void)
  let stubs_mul_ = foreign "atg_mul_" (ptr t @-> t @-> t @-> returning void)
  let stubs_mul_out = foreign "atg_mul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_multilabel_margin_loss =
    foreign "atg_multilabel_margin_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_multilabel_margin_loss_backward =
    foreign
      "atg_multilabel_margin_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_multilabel_margin_loss_backward_out =
    foreign
      "atg_multilabel_margin_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_multilabel_margin_loss_out =
    foreign
      "atg_multilabel_margin_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_multinomial =
    foreign "atg_multinomial" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_multinomial_out =
    foreign
      "atg_multinomial_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_multiply = foreign "atg_multiply" (ptr t @-> t @-> t @-> returning void)
  let stubs_multiply_ = foreign "atg_multiply_" (ptr t @-> t @-> t @-> returning void)

  let stubs_multiply_out =
    foreign "atg_multiply_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mv = foreign "atg_mv" (ptr t @-> t @-> t @-> returning void)
  let stubs_mv_out = foreign "atg_mv_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_mvlgamma = foreign "atg_mvlgamma" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_mvlgamma_ =
    foreign "atg_mvlgamma_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_nan_to_num =
    foreign
      "atg_nan_to_num"
      (ptr t @-> t @-> double @-> double @-> double @-> returning void)

  let stubs_nan_to_num_ =
    foreign
      "atg_nan_to_num_"
      (ptr t @-> t @-> double @-> double @-> double @-> returning void)

  let stubs_nan_to_num_out =
    foreign
      "atg_nan_to_num_out"
      (ptr t @-> t @-> t @-> double @-> double @-> double @-> returning void)

  let stubs_nanmedian = foreign "atg_nanmedian" (ptr t @-> t @-> returning void)

  let stubs_nanmedian1 =
    foreign "atg_nanmedian1" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanmedian_out =
    foreign
      "atg_nanmedian_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanquantile =
    foreign
      "atg_nanquantile"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_nanquantile1 =
    foreign "atg_nanquantile1" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanquantile2 =
    foreign
      "atg_nanquantile2"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> string @-> returning void)

  let stubs_nanquantile3 =
    foreign
      "atg_nanquantile3"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> string @-> returning void)

  let stubs_nanquantile_out =
    foreign
      "atg_nanquantile_out"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_nanquantile_out1 =
    foreign
      "atg_nanquantile_out1"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanquantile_out2 =
    foreign
      "atg_nanquantile_out2"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> string @-> returning void)

  let stubs_nanquantile_out3 =
    foreign
      "atg_nanquantile_out3"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> string @-> returning void)

  let stubs_nansum = foreign "atg_nansum" (ptr t @-> t @-> int @-> returning void)

  let stubs_nansum1 =
    foreign
      "atg_nansum1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_nansum_out =
    foreign
      "atg_nansum_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_narrow =
    foreign
      "atg_narrow"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_narrow1 =
    foreign "atg_narrow1" (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> returning void)

  let stubs_narrow_copy =
    foreign
      "atg_narrow_copy"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_narrow_copy_out =
    foreign
      "atg_narrow_copy_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_native_batch_norm =
    foreign
      "atg_native_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_native_batch_norm_out =
    foreign
      "atg_native_batch_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_native_group_norm =
    foreign
      "atg_native_group_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs_native_layer_norm =
    foreign
      "atg_native_layer_norm"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> t @-> double @-> returning void)

  let stubs_native_norm = foreign "atg_native_norm" (ptr t @-> t @-> returning void)
  let stubs_ne = foreign "atg_ne" (ptr t @-> t @-> t @-> returning void)
  let stubs_ne_ = foreign "atg_ne_" (ptr t @-> t @-> t @-> returning void)
  let stubs_ne_out = foreign "atg_ne_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_neg = foreign "atg_neg" (ptr t @-> t @-> returning void)
  let stubs_neg_ = foreign "atg_neg_" (ptr t @-> t @-> returning void)
  let stubs_neg_out = foreign "atg_neg_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_negative = foreign "atg_negative" (ptr t @-> t @-> returning void)
  let stubs_negative_ = foreign "atg_negative_" (ptr t @-> t @-> returning void)

  let stubs_negative_out =
    foreign "atg_negative_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_new_empty =
    foreign
      "atg_new_empty"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_new_empty_strided =
    foreign
      "atg_new_empty_strided"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_new_zeros =
    foreign
      "atg_new_zeros"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_nextafter = foreign "atg_nextafter" (ptr t @-> t @-> t @-> returning void)
  let stubs_nextafter_ = foreign "atg_nextafter_" (ptr t @-> t @-> t @-> returning void)

  let stubs_nextafter_out =
    foreign "atg_nextafter_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_nll_loss =
    foreign
      "atg_nll_loss"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss2d =
    foreign
      "atg_nll_loss2d"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss2d_backward =
    foreign
      "atg_nll_loss2d_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> returning void)

  let stubs_nll_loss2d_backward_out =
    foreign
      "atg_nll_loss2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> returning void)

  let stubs_nll_loss2d_out =
    foreign
      "atg_nll_loss2d_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss_backward =
    foreign
      "atg_nll_loss_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> returning void)

  let stubs_nll_loss_backward_out =
    foreign
      "atg_nll_loss_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> returning void)

  let stubs_nll_loss_nd =
    foreign
      "atg_nll_loss_nd"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss_out =
    foreign
      "atg_nll_loss_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nonzero = foreign "atg_nonzero" (ptr t @-> t @-> returning void)
  let stubs_nonzero_numpy = foreign "atg_nonzero_numpy" (t @-> returning (ptr t))
  let stubs_nonzero_out = foreign "atg_nonzero_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_norm = foreign "atg_norm" (ptr t @-> t @-> returning void)

  let stubs_norm_except_dim =
    foreign "atg_norm_except_dim" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_normal_ =
    foreign "atg_normal_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_normal_out =
    foreign "atg_normal_out" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_normal_out1 =
    foreign "atg_normal_out1" (ptr t @-> t @-> double @-> t @-> returning void)

  let stubs_normal_out2 =
    foreign "atg_normal_out2" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_normal_out3 =
    foreign
      "atg_normal_out3"
      (ptr t @-> t @-> double @-> double @-> ptr int64_t @-> int @-> returning void)

  let stubs_not_equal = foreign "atg_not_equal" (ptr t @-> t @-> t @-> returning void)
  let stubs_not_equal_ = foreign "atg_not_equal_" (ptr t @-> t @-> t @-> returning void)

  let stubs_not_equal_out =
    foreign "atg_not_equal_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_nuclear_norm =
    foreign "atg_nuclear_norm" (ptr t @-> t @-> int @-> returning void)

  let stubs_nuclear_norm1 =
    foreign
      "atg_nuclear_norm1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_nuclear_norm_out =
    foreign "atg_nuclear_norm_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_nuclear_norm_out1 =
    foreign
      "atg_nuclear_norm_out1"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_numpy_t = foreign "atg_numpy_t" (ptr t @-> t @-> returning void)
  let stubs_one_hot = foreign "atg_one_hot" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_ones =
    foreign "atg_ones" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_ones_like = foreign "atg_ones_like" (ptr t @-> t @-> returning void)

  let stubs_ones_out =
    foreign "atg_ones_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_orgqr = foreign "atg_orgqr" (ptr t @-> t @-> t @-> returning void)

  let stubs_orgqr_out =
    foreign "atg_orgqr_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_ormqr =
    foreign "atg_ormqr" (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_ormqr_out =
    foreign
      "atg_ormqr_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_outer = foreign "atg_outer" (ptr t @-> t @-> t @-> returning void)
end

module C11 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_outer_out =
    foreign "atg_outer_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_pad_sequence =
    foreign
      "atg_pad_sequence"
      (ptr t @-> ptr t @-> int @-> int @-> double @-> returning void)

  let stubs_pairwise_distance =
    foreign
      "atg_pairwise_distance"
      (ptr t @-> t @-> t @-> double @-> double @-> int @-> returning void)

  let stubs_pdist = foreign "atg_pdist" (ptr t @-> t @-> double @-> returning void)

  let stubs_permute =
    foreign "atg_permute" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_pin_memory = foreign "atg_pin_memory" (ptr t @-> t @-> returning void)
  let stubs_pinverse = foreign "atg_pinverse" (ptr t @-> t @-> double @-> returning void)

  let stubs_pixel_shuffle =
    foreign "atg_pixel_shuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_pixel_unshuffle =
    foreign "atg_pixel_unshuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_poisson = foreign "atg_poisson" (ptr t @-> t @-> returning void)

  let stubs_poisson_nll_loss =
    foreign
      "atg_poisson_nll_loss"
      (ptr t @-> t @-> t @-> int @-> int @-> double @-> int64_t @-> returning void)

  let stubs_polar = foreign "atg_polar" (ptr t @-> t @-> t @-> returning void)

  let stubs_polar_out =
    foreign "atg_polar_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_polygamma =
    foreign "atg_polygamma" (ptr t @-> int64_t @-> t @-> returning void)

  let stubs_polygamma_ =
    foreign "atg_polygamma_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_polygamma_out =
    foreign "atg_polygamma_out" (ptr t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_positive = foreign "atg_positive" (ptr t @-> t @-> returning void)
  let stubs_pow = foreign "atg_pow" (ptr t @-> t @-> t @-> returning void)
  let stubs_pow_ = foreign "atg_pow_" (ptr t @-> t @-> t @-> returning void)
  let stubs_pow_out = foreign "atg_pow_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_prelu = foreign "atg_prelu" (ptr t @-> t @-> t @-> returning void)

  let stubs_prelu_backward =
    foreign "atg_prelu_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_prod = foreign "atg_prod" (ptr t @-> t @-> int @-> returning void)

  let stubs_prod1 =
    foreign "atg_prod1" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_prod_out =
    foreign
      "atg_prod_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_put = foreign "atg_put" (ptr t @-> t @-> t @-> t @-> int @-> returning void)
  let stubs_put_ = foreign "atg_put_" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_q_per_channel_scales =
    foreign "atg_q_per_channel_scales" (ptr t @-> t @-> returning void)

  let stubs_q_per_channel_zero_points =
    foreign "atg_q_per_channel_zero_points" (ptr t @-> t @-> returning void)

  let stubs_qr = foreign "atg_qr" (ptr t @-> t @-> int @-> returning void)

  let stubs_qr_out =
    foreign "atg_qr_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_quantile =
    foreign "atg_quantile" (ptr t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_quantile1 =
    foreign "atg_quantile1" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_quantile2 =
    foreign
      "atg_quantile2"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> string @-> returning void)

  let stubs_quantile3 =
    foreign
      "atg_quantile3"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> string @-> returning void)

  let stubs_quantile_out =
    foreign
      "atg_quantile_out"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_quantile_out1 =
    foreign
      "atg_quantile_out1"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_quantile_out2 =
    foreign
      "atg_quantile_out2"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> string @-> returning void)

  let stubs_quantile_out3 =
    foreign
      "atg_quantile_out3"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> string @-> returning void)

  let stubs_quantize_per_channel =
    foreign
      "atg_quantize_per_channel"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_tensor =
    foreign
      "atg_quantize_per_tensor"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_tensor1 =
    foreign
      "atg_quantize_per_tensor1"
      (ptr t @-> int @-> t @-> t @-> int @-> returning (ptr t))

  let stubs_quantized_batch_norm =
    foreign
      "atg_quantized_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_quantized_max_pool1d =
    foreign
      "atg_quantized_max_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_quantized_max_pool2d =
    foreign
      "atg_quantized_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_rad2deg = foreign "atg_rad2deg" (ptr t @-> t @-> returning void)
  let stubs_rad2deg_ = foreign "atg_rad2deg_" (ptr t @-> t @-> returning void)
  let stubs_rad2deg_out = foreign "atg_rad2deg_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_rand =
    foreign "atg_rand" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_rand_like = foreign "atg_rand_like" (ptr t @-> t @-> returning void)

  let stubs_rand_out =
    foreign "atg_rand_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randint =
    foreign
      "atg_randint"
      (ptr t @-> int64_t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_randint1 =
    foreign
      "atg_randint1"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_randint_like =
    foreign "atg_randint_like" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_randint_like1 =
    foreign "atg_randint_like1" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_randint_out =
    foreign
      "atg_randint_out"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randint_out1 =
    foreign
      "atg_randint_out1"
      (ptr t @-> t @-> int64_t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randn =
    foreign "atg_randn" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_randn_like = foreign "atg_randn_like" (ptr t @-> t @-> returning void)

  let stubs_randn_out =
    foreign "atg_randn_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_random_ = foreign "atg_random_" (ptr t @-> t @-> returning void)
  let stubs_random_1 = foreign "atg_random_1" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_random_2 =
    foreign "atg_random_2" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_randperm =
    foreign "atg_randperm" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_randperm_out =
    foreign "atg_randperm_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_ravel = foreign "atg_ravel" (ptr t @-> t @-> returning void)
  let stubs_real = foreign "atg_real" (ptr t @-> t @-> returning void)
  let stubs_reciprocal = foreign "atg_reciprocal" (ptr t @-> t @-> returning void)
  let stubs_reciprocal_ = foreign "atg_reciprocal_" (ptr t @-> t @-> returning void)

  let stubs_reciprocal_out =
    foreign "atg_reciprocal_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_reflection_pad1d =
    foreign "atg_reflection_pad1d" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_backward =
    foreign
      "atg_reflection_pad1d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_backward_out =
    foreign
      "atg_reflection_pad1d_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_out =
    foreign
      "atg_reflection_pad1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d =
    foreign "atg_reflection_pad2d" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_backward =
    foreign
      "atg_reflection_pad2d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_backward_out =
    foreign
      "atg_reflection_pad2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_out =
    foreign
      "atg_reflection_pad2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_relu = foreign "atg_relu" (ptr t @-> t @-> returning void)
  let stubs_relu6 = foreign "atg_relu6" (ptr t @-> t @-> returning void)
  let stubs_relu6_ = foreign "atg_relu6_" (ptr t @-> t @-> returning void)
  let stubs_relu_ = foreign "atg_relu_" (ptr t @-> t @-> returning void)
  let stubs_remainder = foreign "atg_remainder" (ptr t @-> t @-> t @-> returning void)
  let stubs_remainder_ = foreign "atg_remainder_" (ptr t @-> t @-> t @-> returning void)

  let stubs_remainder_out =
    foreign "atg_remainder_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_repeat =
    foreign "atg_repeat" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_repeat_interleave =
    foreign "atg_repeat_interleave" (ptr t @-> t @-> returning void)

  let stubs_repeat_interleave1 =
    foreign "atg_repeat_interleave1" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_repeat_interleave2 =
    foreign
      "atg_repeat_interleave2"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_replication_pad1d =
    foreign
      "atg_replication_pad1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_backward =
    foreign
      "atg_replication_pad1d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_backward_out =
    foreign
      "atg_replication_pad1d_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_out =
    foreign
      "atg_replication_pad1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d =
    foreign
      "atg_replication_pad2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_backward =
    foreign
      "atg_replication_pad2d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_backward_out =
    foreign
      "atg_replication_pad2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_out =
    foreign
      "atg_replication_pad2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d =
    foreign
      "atg_replication_pad3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d_backward =
    foreign
      "atg_replication_pad3d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d_backward_out =
    foreign
      "atg_replication_pad3d_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)
end

module C12 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_replication_pad3d_out =
    foreign
      "atg_replication_pad3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_requires_grad_ =
    foreign "atg_requires_grad_" (ptr t @-> t @-> int @-> returning void)

  let stubs_reshape =
    foreign "atg_reshape" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reshape_as = foreign "atg_reshape_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize_ =
    foreign "atg_resize_" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_resize_as_ = foreign "atg_resize_as_" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize_as_sparse_ =
    foreign "atg_resize_as_sparse_" (ptr t @-> t @-> t @-> returning void)

  let stubs_rnn_relu =
    foreign
      "atg_rnn_relu"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_relu1 =
    foreign
      "atg_rnn_relu1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_relu_cell =
    foreign
      "atg_rnn_relu_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_rnn_tanh =
    foreign
      "atg_rnn_tanh"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_tanh1 =
    foreign
      "atg_rnn_tanh1"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_tanh_cell =
    foreign
      "atg_rnn_tanh_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_roll =
    foreign
      "atg_roll"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_rot90 =
    foreign
      "atg_rot90"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_round = foreign "atg_round" (ptr t @-> t @-> returning void)
  let stubs_round_ = foreign "atg_round_" (ptr t @-> t @-> returning void)
  let stubs_round_out = foreign "atg_round_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_row_stack =
    foreign "atg_row_stack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_row_stack_out =
    foreign "atg_row_stack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_rrelu = foreign "atg_rrelu" (ptr t @-> t @-> int @-> returning void)
  let stubs_rrelu_ = foreign "atg_rrelu_" (ptr t @-> t @-> int @-> returning void)

  let stubs_rrelu_with_noise =
    foreign "atg_rrelu_with_noise" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_rrelu_with_noise_ =
    foreign "atg_rrelu_with_noise_" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_rrelu_with_noise_out =
    foreign "atg_rrelu_with_noise_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_rsqrt = foreign "atg_rsqrt" (ptr t @-> t @-> returning void)
  let stubs_rsqrt_ = foreign "atg_rsqrt_" (ptr t @-> t @-> returning void)
  let stubs_rsqrt_out = foreign "atg_rsqrt_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_rsub = foreign "atg_rsub" (ptr t @-> t @-> t @-> returning void)

  let stubs_scatter =
    foreign "atg_scatter" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_ =
    foreign "atg_scatter_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_1 =
    foreign
      "atg_scatter_1"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> returning void)

  let stubs_scatter_add =
    foreign "atg_scatter_add" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_add_ =
    foreign "atg_scatter_add_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_searchsorted =
    foreign "atg_searchsorted" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_searchsorted_out =
    foreign
      "atg_searchsorted_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_segment_reduce =
    foreign
      "atg_segment_reduce"
      (ptr t @-> t @-> string @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_segment_reduce_backward =
    foreign
      "atg_segment_reduce_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_select =
    foreign "atg_select" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_backward =
    foreign
      "atg_select_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_selu = foreign "atg_selu" (ptr t @-> t @-> returning void)
  let stubs_selu_ = foreign "atg_selu_" (ptr t @-> t @-> returning void)
  let stubs_set_ = foreign "atg_set_" (ptr t @-> t @-> returning void)
  let stubs_set_1 = foreign "atg_set_1" (ptr t @-> t @-> t @-> returning void)

  let stubs_set_requires_grad =
    foreign "atg_set_requires_grad" (ptr t @-> t @-> int @-> returning void)

  let stubs_sgn = foreign "atg_sgn" (ptr t @-> t @-> returning void)
  let stubs_sgn_ = foreign "atg_sgn_" (ptr t @-> t @-> returning void)
  let stubs_sgn_out = foreign "atg_sgn_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sigmoid = foreign "atg_sigmoid" (ptr t @-> t @-> returning void)
  let stubs_sigmoid_ = foreign "atg_sigmoid_" (ptr t @-> t @-> returning void)

  let stubs_sigmoid_backward =
    foreign "atg_sigmoid_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_sigmoid_backward_out =
    foreign "atg_sigmoid_backward_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sigmoid_out = foreign "atg_sigmoid_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sign = foreign "atg_sign" (ptr t @-> t @-> returning void)
  let stubs_sign_ = foreign "atg_sign_" (ptr t @-> t @-> returning void)
  let stubs_sign_out = foreign "atg_sign_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_signbit = foreign "atg_signbit" (ptr t @-> t @-> returning void)
  let stubs_signbit_out = foreign "atg_signbit_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_silu = foreign "atg_silu" (ptr t @-> t @-> returning void)
  let stubs_silu_ = foreign "atg_silu_" (ptr t @-> t @-> returning void)

  let stubs_silu_backward =
    foreign "atg_silu_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_silu_out = foreign "atg_silu_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sin = foreign "atg_sin" (ptr t @-> t @-> returning void)
  let stubs_sin_ = foreign "atg_sin_" (ptr t @-> t @-> returning void)
  let stubs_sin_out = foreign "atg_sin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sinc = foreign "atg_sinc" (ptr t @-> t @-> returning void)
  let stubs_sinc_ = foreign "atg_sinc_" (ptr t @-> t @-> returning void)
  let stubs_sinc_out = foreign "atg_sinc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sinh = foreign "atg_sinh" (ptr t @-> t @-> returning void)
  let stubs_sinh_ = foreign "atg_sinh_" (ptr t @-> t @-> returning void)
  let stubs_sinh_out = foreign "atg_sinh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_slice =
    foreign
      "atg_slice"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_slice_backward =
    foreign
      "atg_slice_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_slogdet = foreign "atg_slogdet" (ptr t @-> t @-> returning void)

  let stubs_slow_conv3d =
    foreign
      "atg_slow_conv3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv3d_out =
    foreign
      "atg_slow_conv3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated2d =
    foreign
      "atg_slow_conv_dilated2d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated3d =
    foreign
      "atg_slow_conv_dilated3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose2d =
    foreign
      "atg_slow_conv_transpose2d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose2d_out =
    foreign
      "atg_slow_conv_transpose2d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose3d =
    foreign
      "atg_slow_conv_transpose3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose3d_out =
    foreign
      "atg_slow_conv_transpose3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_smm = foreign "atg_smm" (ptr t @-> t @-> t @-> returning void)

  let stubs_smooth_l1_loss =
    foreign
      "atg_smooth_l1_loss"
      (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_backward =
    foreign
      "atg_smooth_l1_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_backward_out =
    foreign
      "atg_smooth_l1_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_out =
    foreign
      "atg_smooth_l1_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_soft_margin_loss =
    foreign "atg_soft_margin_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_backward =
    foreign
      "atg_soft_margin_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_backward_out =
    foreign
      "atg_soft_margin_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_out =
    foreign
      "atg_soft_margin_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_softmax =
    foreign "atg_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_softplus = foreign "atg_softplus" (ptr t @-> t @-> returning void)

  let stubs_softplus_out =
    foreign "atg_softplus_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_softshrink = foreign "atg_softshrink" (ptr t @-> t @-> returning void)

  let stubs_softshrink_out =
    foreign "atg_softshrink_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_solve = foreign "atg_solve" (ptr t @-> t @-> t @-> returning void)

  let stubs_solve_out =
    foreign "atg_solve_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_sort = foreign "atg_sort" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_sort1 =
    foreign "atg_sort1" (ptr t @-> t @-> int @-> int64_t @-> int @-> returning void)
end

module C13 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_sort_out =
    foreign "atg_sort_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_sort_out1 =
    foreign
      "atg_sort_out1"
      (ptr t @-> t @-> t @-> t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_sparse_coo_tensor =
    foreign
      "atg_sparse_coo_tensor"
      (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor1 =
    foreign "atg_sparse_coo_tensor1" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor2 =
    foreign
      "atg_sparse_coo_tensor2"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_mask = foreign "atg_sparse_mask" (ptr t @-> t @-> t @-> returning void)

  let stubs_sparse_resize_ =
    foreign
      "atg_sparse_resize_"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_sparse_resize_and_clear_ =
    foreign
      "atg_sparse_resize_and_clear_"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_special_entr = foreign "atg_special_entr" (ptr t @-> t @-> returning void)

  let stubs_special_entr_out =
    foreign "atg_special_entr_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erf = foreign "atg_special_erf" (ptr t @-> t @-> returning void)

  let stubs_special_erf_out =
    foreign "atg_special_erf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erfc = foreign "atg_special_erfc" (ptr t @-> t @-> returning void)

  let stubs_special_erfc_out =
    foreign "atg_special_erfc_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erfinv = foreign "atg_special_erfinv" (ptr t @-> t @-> returning void)

  let stubs_special_erfinv_out =
    foreign "atg_special_erfinv_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_exp2 = foreign "atg_special_exp2" (ptr t @-> t @-> returning void)

  let stubs_special_exp2_out =
    foreign "atg_special_exp2_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_expit = foreign "atg_special_expit" (ptr t @-> t @-> returning void)

  let stubs_special_expit_out =
    foreign "atg_special_expit_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_expm1 = foreign "atg_special_expm1" (ptr t @-> t @-> returning void)

  let stubs_special_expm1_out =
    foreign "atg_special_expm1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_gammaln =
    foreign "atg_special_gammaln" (ptr t @-> t @-> returning void)

  let stubs_special_gammaln_out =
    foreign "atg_special_gammaln_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_i0e = foreign "atg_special_i0e" (ptr t @-> t @-> returning void)

  let stubs_special_i0e_out =
    foreign "atg_special_i0e_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_logit =
    foreign "atg_special_logit" (ptr t @-> t @-> double @-> returning void)

  let stubs_special_logit_out =
    foreign "atg_special_logit_out" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_special_xlog1py =
    foreign "atg_special_xlog1py" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_xlog1py_out =
    foreign "atg_special_xlog1py_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_split = foreign "atg_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_split_with_sizes =
    foreign
      "atg_split_with_sizes"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_sqrt = foreign "atg_sqrt" (ptr t @-> t @-> returning void)
  let stubs_sqrt_ = foreign "atg_sqrt_" (ptr t @-> t @-> returning void)
  let stubs_sqrt_out = foreign "atg_sqrt_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_square = foreign "atg_square" (ptr t @-> t @-> returning void)
  let stubs_square_ = foreign "atg_square_" (ptr t @-> t @-> returning void)
  let stubs_square_out = foreign "atg_square_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_squeeze = foreign "atg_squeeze" (ptr t @-> t @-> returning void)
  let stubs_squeeze1 = foreign "atg_squeeze1" (ptr t @-> t @-> int64_t @-> returning void)
  let stubs_squeeze_ = foreign "atg_squeeze_" (ptr t @-> t @-> returning void)

  let stubs_squeeze_1 =
    foreign "atg_squeeze_1" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_sspaddmm = foreign "atg_sspaddmm" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sspaddmm_out =
    foreign "atg_sspaddmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_stack =
    foreign "atg_stack" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_stack_out =
    foreign "atg_stack_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_std = foreign "atg_std" (ptr t @-> t @-> int @-> returning void)

  let stubs_std1 =
    foreign
      "atg_std1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_std2 =
    foreign
      "atg_std2"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_std_mean = foreign "atg_std_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_std_mean1 =
    foreign
      "atg_std_mean1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_std_mean2 =
    foreign
      "atg_std_mean2"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_std_out =
    foreign
      "atg_std_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_std_out1 =
    foreign
      "atg_std_out1"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_stft =
    foreign
      "atg_stft"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_sub = foreign "atg_sub" (ptr t @-> t @-> t @-> returning void)
  let stubs_sub_ = foreign "atg_sub_" (ptr t @-> t @-> t @-> returning void)
  let stubs_sub_out = foreign "atg_sub_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_subtract = foreign "atg_subtract" (ptr t @-> t @-> t @-> returning void)
  let stubs_subtract_ = foreign "atg_subtract_" (ptr t @-> t @-> t @-> returning void)

  let stubs_subtract_out =
    foreign "atg_subtract_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sum = foreign "atg_sum" (ptr t @-> t @-> int @-> returning void)

  let stubs_sum1 =
    foreign
      "atg_sum1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sum_out =
    foreign
      "atg_sum_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sum_to_size =
    foreign "atg_sum_to_size" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_svd = foreign "atg_svd" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_svd_out =
    foreign
      "atg_svd_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_swapaxes =
    foreign "atg_swapaxes" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapaxes_ =
    foreign "atg_swapaxes_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapdims =
    foreign "atg_swapdims" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapdims_ =
    foreign "atg_swapdims_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_symeig = foreign "atg_symeig" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_symeig_out =
    foreign "atg_symeig_out" (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_tr = foreign "atg_t" (ptr t @-> t @-> returning void)
  let stubs_t_ = foreign "atg_t_" (ptr t @-> t @-> returning void)
  let stubs_take = foreign "atg_take" (ptr t @-> t @-> t @-> returning void)

  let stubs_take_along_dim =
    foreign "atg_take_along_dim" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_take_along_dim_out =
    foreign
      "atg_take_along_dim_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_take_out = foreign "atg_take_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_tan = foreign "atg_tan" (ptr t @-> t @-> returning void)
  let stubs_tan_ = foreign "atg_tan_" (ptr t @-> t @-> returning void)
  let stubs_tan_out = foreign "atg_tan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_tanh = foreign "atg_tanh" (ptr t @-> t @-> returning void)
  let stubs_tanh_ = foreign "atg_tanh_" (ptr t @-> t @-> returning void)

  let stubs_tanh_backward =
    foreign "atg_tanh_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_tanh_backward_out =
    foreign "atg_tanh_backward_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_tanh_out = foreign "atg_tanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_tensor_split =
    foreign "atg_tensor_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_tensor_split1 =
    foreign
      "atg_tensor_split1"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_tensor_split2 =
    foreign "atg_tensor_split2" (t @-> t @-> int64_t @-> returning (ptr t))

  let stubs_tensordot =
    foreign
      "atg_tensordot"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_tensordot_out =
    foreign
      "atg_tensordot_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_tile =
    foreign "atg_tile" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_to_ = foreign "atg_to" (ptr t @-> t @-> int @-> returning void)

  let stubs_to1 =
    foreign "atg_to1" (ptr t @-> t @-> int @-> int @-> int @-> int @-> returning void)

  let stubs_to2 =
    foreign "atg_to2" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_to3 = foreign "atg_to3" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_to4 =
    foreign "atg_to4" (ptr t @-> t @-> int @-> int @-> int @-> int @-> returning void)

  let stubs_to_dense = foreign "atg_to_dense" (ptr t @-> t @-> int @-> returning void)

  let stubs_to_dense_backward =
    foreign "atg_to_dense_backward" (ptr t @-> t @-> t @-> returning void)
end

module C14 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_to_mkldnn = foreign "atg_to_mkldnn" (ptr t @-> t @-> int @-> returning void)

  let stubs_to_mkldnn_backward =
    foreign "atg_to_mkldnn_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_to_sparse = foreign "atg_to_sparse" (ptr t @-> t @-> returning void)

  let stubs_to_sparse1 =
    foreign "atg_to_sparse1" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_topk =
    foreign
      "atg_topk"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_topk_out =
    foreign
      "atg_topk_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_totype = foreign "atg_totype" (ptr t @-> t @-> int @-> returning void)
  let stubs_trace = foreign "atg_trace" (ptr t @-> t @-> returning void)

  let stubs_trace_backward =
    foreign "atg_trace_backward" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_transpose =
    foreign "atg_transpose" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_transpose_ =
    foreign "atg_transpose_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_trapz = foreign "atg_trapz" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_trapz1 =
    foreign "atg_trapz1" (ptr t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_triangular_solve =
    foreign
      "atg_triangular_solve"
      (ptr t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_triangular_solve_out =
    foreign
      "atg_triangular_solve_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_tril = foreign "atg_tril" (ptr t @-> t @-> int64_t @-> returning void)
  let stubs_tril_ = foreign "atg_tril_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_tril_indices =
    foreign
      "atg_tril_indices"
      (ptr t @-> int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_tril_out =
    foreign "atg_tril_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_triplet_margin_loss =
    foreign
      "atg_triplet_margin_loss"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> double
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_triu = foreign "atg_triu" (ptr t @-> t @-> int64_t @-> returning void)
  let stubs_triu_ = foreign "atg_triu_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_triu_indices =
    foreign
      "atg_triu_indices"
      (ptr t @-> int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_triu_out =
    foreign "atg_triu_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_true_divide = foreign "atg_true_divide" (ptr t @-> t @-> t @-> returning void)

  let stubs_true_divide_ =
    foreign "atg_true_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_true_divide_out =
    foreign "atg_true_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_trunc = foreign "atg_trunc" (ptr t @-> t @-> returning void)
  let stubs_trunc_ = foreign "atg_trunc_" (ptr t @-> t @-> returning void)
  let stubs_trunc_out = foreign "atg_trunc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_type_as = foreign "atg_type_as" (ptr t @-> t @-> t @-> returning void)
  let stubs_unbind = foreign "atg_unbind" (t @-> int64_t @-> returning (ptr t))

  let stubs_unflatten =
    foreign
      "atg_unflatten"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_unflatten_dense_tensors =
    foreign "atg_unflatten_dense_tensors" (t @-> ptr t @-> int @-> returning (ptr t))

  let stubs_unfold =
    foreign
      "atg_unfold"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_unfold_backward =
    foreign
      "atg_unfold_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_uniform_ =
    foreign "atg_uniform_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_unique_consecutive =
    foreign
      "atg_unique_consecutive"
      (ptr t @-> t @-> int @-> int @-> int64_t @-> returning void)

  let stubs_unique_dim =
    foreign
      "atg_unique_dim"
      (ptr t @-> t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_unique_dim_consecutive =
    foreign
      "atg_unique_dim_consecutive"
      (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_unsafe_chunk =
    foreign "atg_unsafe_chunk" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_unsafe_split =
    foreign "atg_unsafe_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_unsafe_split_with_sizes =
    foreign
      "atg_unsafe_split_with_sizes"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_unsqueeze =
    foreign "atg_unsqueeze" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_unsqueeze_ =
    foreign "atg_unsqueeze_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_upsample_bicubic2d =
    foreign
      "atg_upsample_bicubic2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bicubic2d_backward =
    foreign
      "atg_upsample_bicubic2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bicubic2d_backward_out =
    foreign
      "atg_upsample_bicubic2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bicubic2d_out =
    foreign
      "atg_upsample_bicubic2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bilinear2d =
    foreign
      "atg_upsample_bilinear2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bilinear2d_backward =
    foreign
      "atg_upsample_bilinear2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bilinear2d_backward_out =
    foreign
      "atg_upsample_bilinear2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_bilinear2d_out =
    foreign
      "atg_upsample_bilinear2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_linear1d =
    foreign
      "atg_upsample_linear1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> double @-> returning void)

  let stubs_upsample_linear1d_backward =
    foreign
      "atg_upsample_linear1d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> returning void)

  let stubs_upsample_linear1d_backward_out =
    foreign
      "atg_upsample_linear1d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> returning void)

  let stubs_upsample_linear1d_out =
    foreign
      "atg_upsample_linear1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> double @-> returning void)

  let stubs_upsample_nearest1d =
    foreign
      "atg_upsample_nearest1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> double @-> returning void)

  let stubs_upsample_nearest1d_backward =
    foreign
      "atg_upsample_nearest1d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> returning void)

  let stubs_upsample_nearest1d_backward_out =
    foreign
      "atg_upsample_nearest1d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> returning void)

  let stubs_upsample_nearest1d_out =
    foreign
      "atg_upsample_nearest1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> double @-> returning void)

  let stubs_upsample_nearest2d =
    foreign
      "atg_upsample_nearest2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> double @-> double @-> returning void)

  let stubs_upsample_nearest2d_backward =
    foreign
      "atg_upsample_nearest2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_nearest2d_backward_out =
    foreign
      "atg_upsample_nearest2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_nearest2d_out =
    foreign
      "atg_upsample_nearest2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> double @-> double @-> returning void)

  let stubs_upsample_nearest3d =
    foreign
      "atg_upsample_nearest3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_nearest3d_backward =
    foreign
      "atg_upsample_nearest3d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_nearest3d_backward_out =
    foreign
      "atg_upsample_nearest3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_nearest3d_out =
    foreign
      "atg_upsample_nearest3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_trilinear3d =
    foreign
      "atg_upsample_trilinear3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_trilinear3d_backward =
    foreign
      "atg_upsample_trilinear3d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_trilinear3d_backward_out =
    foreign
      "atg_upsample_trilinear3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_upsample_trilinear3d_out =
    foreign
      "atg_upsample_trilinear3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> double
      @-> double
      @-> returning void)

  let stubs_value_selecting_reduction_backward =
    foreign
      "atg_value_selecting_reduction_backward"
      (ptr t @-> t @-> int64_t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_values = foreign "atg_values" (ptr t @-> t @-> returning void)

  let stubs_vander =
    foreign "atg_vander" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_var = foreign "atg_var" (ptr t @-> t @-> int @-> returning void)

  let stubs_var1 =
    foreign
      "atg_var1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_var2 =
    foreign
      "atg_var2"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_var_mean = foreign "atg_var_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_var_mean1 =
    foreign
      "atg_var_mean1"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_var_mean2 =
    foreign
      "atg_var_mean2"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_var_out =
    foreign
      "atg_var_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_var_out1 =
    foreign
      "atg_var_out1"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_vdot = foreign "atg_vdot" (ptr t @-> t @-> t @-> returning void)
  let stubs_vdot_out = foreign "atg_vdot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_view =
    foreign "atg_view" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_view1 = foreign "atg_view1" (ptr t @-> t @-> int @-> returning void)
  let stubs_view_as = foreign "atg_view_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_view_as_complex =
    foreign "atg_view_as_complex" (ptr t @-> t @-> returning void)

  let stubs_view_as_real = foreign "atg_view_as_real" (ptr t @-> t @-> returning void)
  let stubs_vsplit = foreign "atg_vsplit" (t @-> int64_t @-> returning (ptr t))

  let stubs_vsplit1 =
    foreign "atg_vsplit1" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_vstack = foreign "atg_vstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_vstack_out =
    foreign "atg_vstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_where = foreign "atg_where" (t @-> returning (ptr t))
  let stubs_where1 = foreign "atg_where1" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_xlogy = foreign "atg_xlogy" (ptr t @-> t @-> t @-> returning void)
  let stubs_xlogy_ = foreign "atg_xlogy_" (ptr t @-> t @-> t @-> returning void)

  let stubs_xlogy_out =
    foreign "atg_xlogy_out" (ptr t @-> t @-> t @-> t @-> returning void)
end

module C15 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_zero_ = foreign "atg_zero_" (ptr t @-> t @-> returning void)

  let stubs_zeros =
    foreign "atg_zeros" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_zeros_like = foreign "atg_zeros_like" (ptr t @-> t @-> returning void)

  let stubs_zeros_out =
    foreign "atg_zeros_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)
end

module C (F : Cstubs.FOREIGN) = struct
  include C0 (F)
  include C1 (F)
  include C2 (F)
  include C3 (F)
  include C4 (F)
  include C5 (F)
  include C6 (F)
  include C7 (F)
  include C8 (F)
  include C9 (F)
  include C10 (F)
  include C11 (F)
  include C12 (F)
  include C13 (F)
  include C14 (F)
  include C15 (F)
end
