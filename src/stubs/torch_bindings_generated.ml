(* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT BY HAND! *)

open Ctypes

module C0 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs___and__ = foreign "atg___and__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___and__tensor_ =
    foreign "atg___and__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___iand__ = foreign "atg___iand__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___iand__tensor_ =
    foreign "atg___iand__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___ilshift__ =
    foreign "atg___ilshift__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___ilshift__tensor_ =
    foreign "atg___ilshift__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___ior__ = foreign "atg___ior__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___ior__tensor_ =
    foreign "atg___ior__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___irshift__ =
    foreign "atg___irshift__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___irshift__tensor_ =
    foreign "atg___irshift__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___ixor__ = foreign "atg___ixor__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___ixor__tensor_ =
    foreign "atg___ixor__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___lshift__ =
    foreign "atg___lshift__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___lshift__scalar_out_ =
    foreign "atg___lshift__scalar_out_" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs___lshift__tensor_ =
    foreign "atg___lshift__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___lshift__tensor_out_ =
    foreign "atg___lshift__tensor_out_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs___or__ = foreign "atg___or__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___or__tensor_ =
    foreign "atg___or__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___rshift__ =
    foreign "atg___rshift__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___rshift__scalar_out_ =
    foreign "atg___rshift__scalar_out_" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs___rshift__tensor_ =
    foreign "atg___rshift__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs___rshift__tensor_out_ =
    foreign "atg___rshift__tensor_out_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs___xor__ = foreign "atg___xor__" (ptr t @-> t @-> scalar @-> returning void)

  let stubs___xor__tensor_ =
    foreign "atg___xor__tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool2d =
    foreign
      "atg__adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__adaptive_avg_pool2d_backward =
    foreign "atg__adaptive_avg_pool2d_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool2d_backward_out =
    foreign
      "atg__adaptive_avg_pool2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool2d_out =
    foreign
      "atg__adaptive_avg_pool2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__adaptive_avg_pool3d =
    foreign
      "atg__adaptive_avg_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__adaptive_avg_pool3d_backward =
    foreign "atg__adaptive_avg_pool3d_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool3d_backward_out =
    foreign
      "atg__adaptive_avg_pool3d_backward_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__adaptive_avg_pool3d_out =
    foreign
      "atg__adaptive_avg_pool3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__add_batch_dim =
    foreign "atg__add_batch_dim" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__add_relu = foreign "atg__add_relu" (ptr t @-> t @-> t @-> returning void)
  let stubs__add_relu_ = foreign "atg__add_relu_" (ptr t @-> t @-> t @-> returning void)

  let stubs__add_relu_out =
    foreign "atg__add_relu_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__add_relu_scalar =
    foreign "atg__add_relu_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs__add_relu_scalar_ =
    foreign "atg__add_relu_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs__add_relu_scalar_out =
    foreign "atg__add_relu_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs__addmm_activation =
    foreign "atg__addmm_activation" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__addmm_activation_out =
    foreign
      "atg__addmm_activation_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__aminmax = foreign "atg__aminmax" (ptr t @-> t @-> returning void)

  let stubs__aminmax_dim =
    foreign "atg__aminmax_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__aminmax_dim_out =
    foreign
      "atg__aminmax_dim_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__aminmax_out =
    foreign "atg__aminmax_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__amp_update_scale =
    foreign
      "atg__amp_update_scale"
      (ptr t @-> t @-> t @-> t @-> double @-> double @-> int64_t @-> returning void)

  let stubs__amp_update_scale_ =
    foreign
      "atg__amp_update_scale_"
      (ptr t @-> t @-> t @-> t @-> double @-> double @-> int64_t @-> returning void)

  let stubs__amp_update_scale_out =
    foreign
      "atg__amp_update_scale_out"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> double @-> int64_t @-> returning void)

  let stubs__assert_tensor_metadata =
    foreign
      "atg__assert_tensor_metadata"
      (t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__autocast_to_full_precision =
    foreign
      "atg__autocast_to_full_precision"
      (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__autocast_to_reduced_precision =
    foreign
      "atg__autocast_to_reduced_precision"
      (ptr t @-> t @-> int @-> int @-> int @-> int @-> returning void)

  let stubs__cast_byte = foreign "atg__cast_byte" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_char = foreign "atg__cast_char" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_double =
    foreign "atg__cast_double" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_float =
    foreign "atg__cast_float" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_half = foreign "atg__cast_half" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_int = foreign "atg__cast_int" (ptr t @-> t @-> int @-> returning void)
  let stubs__cast_long = foreign "atg__cast_long" (ptr t @-> t @-> int @-> returning void)

  let stubs__cast_short =
    foreign "atg__cast_short" (ptr t @-> t @-> int @-> returning void)

  let stubs__cdist_backward =
    foreign
      "atg__cdist_backward"
      (ptr t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__cdist_backward_out =
    foreign
      "atg__cdist_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__cholesky_solve_helper =
    foreign "atg__cholesky_solve_helper" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__cholesky_solve_helper_out =
    foreign
      "atg__cholesky_solve_helper_out"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__coalesce = foreign "atg__coalesce" (ptr t @-> t @-> returning void)

  let stubs__coalesce_out =
    foreign "atg__coalesce_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__coalesced = foreign "atg__coalesced" (ptr t @-> t @-> int @-> returning void)

  let stubs__coalesced_ =
    foreign "atg__coalesced_" (ptr t @-> t @-> int @-> returning void)

  let stubs__coalesced_out =
    foreign "atg__coalesced_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__compute_linear_combination =
    foreign "atg__compute_linear_combination" (ptr t @-> t @-> t @-> returning void)

  let stubs__compute_linear_combination_out =
    foreign
      "atg__compute_linear_combination_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__conj = foreign "atg__conj" (ptr t @-> t @-> returning void)
  let stubs__conj_copy = foreign "atg__conj_copy" (ptr t @-> t @-> returning void)

  let stubs__conj_copy_out =
    foreign "atg__conj_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__conj_physical = foreign "atg__conj_physical" (ptr t @-> t @-> returning void)

  let stubs__conj_physical_out =
    foreign "atg__conj_physical_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__conv_depthwise2d =
    foreign
      "atg__conv_depthwise2d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__conv_depthwise2d_out =
    foreign
      "atg__conv_depthwise2d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__convert_indices_from_coo_to_csr =
    foreign
      "atg__convert_indices_from_coo_to_csr"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__convert_indices_from_coo_to_csr_out =
    foreign
      "atg__convert_indices_from_coo_to_csr_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__convert_indices_from_csr_to_coo =
    foreign
      "atg__convert_indices_from_csr_to_coo"
      (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__convert_indices_from_csr_to_coo_out =
    foreign
      "atg__convert_indices_from_csr_to_coo_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__convolution =
    foreign
      "atg__convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__convolution_deprecated =
    foreign
      "atg__convolution_deprecated"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__convolution_mode =
    foreign
      "atg__convolution_mode"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__convolution_out =
    foreign
      "atg__convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__copy_from =
    foreign "atg__copy_from" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__copy_from_and_resize =
    foreign "atg__copy_from_and_resize" (ptr t @-> t @-> t @-> returning void)

  let stubs__copy_from_and_resize_out =
    foreign "atg__copy_from_and_resize_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__copy_from_out =
    foreign "atg__copy_from_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__ctc_loss =
    foreign
      "atg__ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_backward =
    foreign
      "atg__ctc_loss_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_backward_out =
    foreign
      "atg__ctc_loss_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_backward_tensor =
    foreign
      "atg__ctc_loss_backward_tensor"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_out =
    foreign
      "atg__ctc_loss_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__ctc_loss_tensor =
    foreign
      "atg__ctc_loss_tensor"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__ctc_loss_tensor_out =
    foreign
      "atg__ctc_loss_tensor_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__cudnn_ctc_loss =
    foreign
      "atg__cudnn_ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cudnn_ctc_loss_out =
    foreign
      "atg__cudnn_ctc_loss_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cudnn_ctc_loss_tensor =
    foreign
      "atg__cudnn_ctc_loss_tensor"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs__cudnn_init_dropout_state =
    foreign
      "atg__cudnn_init_dropout_state"
      (ptr t @-> double @-> int @-> int64_t @-> int @-> int @-> returning void)
end

module C1 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs__cudnn_init_dropout_state_out =
    foreign
      "atg__cudnn_init_dropout_state_out"
      (ptr t @-> t @-> double @-> int @-> int64_t @-> returning void)

  let stubs__cudnn_rnn =
    foreign
      "atg__cudnn_rnn"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs__cudnn_rnn_flatten_weight =
    foreign
      "atg__cudnn_rnn_flatten_weight"
      (ptr t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cudnn_rnn_flatten_weight_out =
    foreign
      "atg__cudnn_rnn_flatten_weight_out"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__cudnn_rnn_out =
    foreign
      "atg__cudnn_rnn_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs__dim_arange =
    foreign "atg__dim_arange" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__dirichlet_grad =
    foreign "atg__dirichlet_grad" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__dirichlet_grad_out =
    foreign "atg__dirichlet_grad_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__efficient_attention_backward =
    foreign
      "atg__efficient_attention_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__efficientzerotensor =
    foreign
      "atg__efficientzerotensor"
      (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__efficientzerotensor_out =
    foreign
      "atg__efficientzerotensor_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__embedding_bag =
    foreign
      "atg__embedding_bag"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_backward =
    foreign
      "atg__embedding_bag_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_dense_backward =
    foreign
      "atg__embedding_bag_dense_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_dense_backward_out =
    foreign
      "atg__embedding_bag_dense_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_forward_only =
    foreign
      "atg__embedding_bag_forward_only"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_forward_only_out =
    foreign
      "atg__embedding_bag_forward_only_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_out =
    foreign
      "atg__embedding_bag_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_per_sample_weights_backward =
    foreign
      "atg__embedding_bag_per_sample_weights_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__embedding_bag_per_sample_weights_backward_out =
    foreign
      "atg__embedding_bag_per_sample_weights_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__embedding_bag_sparse_backward =
    foreign
      "atg__embedding_bag_sparse_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs__empty_affine_quantized =
    foreign
      "atg__empty_affine_quantized"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs__empty_affine_quantized_out =
    foreign
      "atg__empty_affine_quantized_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> double @-> int64_t @-> returning void)

  let stubs__empty_per_channel_affine_quantized =
    foreign
      "atg__empty_per_channel_affine_quantized"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__empty_per_channel_affine_quantized_out =
    foreign
      "atg__empty_per_channel_affine_quantized_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> t @-> int64_t @-> returning void)

  let stubs__euclidean_dist =
    foreign "atg__euclidean_dist" (ptr t @-> t @-> t @-> returning void)

  let stubs__euclidean_dist_out =
    foreign "atg__euclidean_dist_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__fake_quantize_learnable_per_channel_affine =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs__fake_quantize_learnable_per_channel_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs__fake_quantize_learnable_per_channel_affine_out =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs__fake_quantize_learnable_per_tensor_affine =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs__fake_quantize_learnable_per_tensor_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs__fake_quantize_learnable_per_tensor_affine_out =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs__fake_quantize_per_tensor_affine_cachemask_tensor_qparams =
    foreign
      "atg__fake_quantize_per_tensor_affine_cachemask_tensor_qparams"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__fake_quantize_per_tensor_affine_cachemask_tensor_qparams_out =
    foreign
      "atg__fake_quantize_per_tensor_affine_cachemask_tensor_qparams_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__fft_c2c =
    foreign
      "atg__fft_c2c"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_c2c_out =
    foreign
      "atg__fft_c2c_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_c2r =
    foreign
      "atg__fft_c2r"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs__fft_c2r_out =
    foreign
      "atg__fft_c2r_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__fft_r2c =
    foreign
      "atg__fft_r2c"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__fft_r2c_out =
    foreign
      "atg__fft_r2c_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__flash_attention_backward =
    foreign
      "atg__flash_attention_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__foobar =
    foreign "atg__foobar" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__foobar_out =
    foreign
      "atg__foobar_out"
      (ptr t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__fused_dropout =
    foreign "atg__fused_dropout" (ptr t @-> t @-> double @-> returning void)

  let stubs__fused_dropout_out =
    foreign
      "atg__fused_dropout_out"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs__fused_moving_avg_obs_fq_helper =
    foreign
      "atg__fused_moving_avg_obs_fq_helper"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__fused_moving_avg_obs_fq_helper_functional =
    foreign
      "atg__fused_moving_avg_obs_fq_helper_functional"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__fused_moving_avg_obs_fq_helper_out =
    foreign
      "atg__fused_moving_avg_obs_fq_helper_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs__fw_primal =
    foreign "atg__fw_primal" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__fw_primal_copy =
    foreign "atg__fw_primal_copy" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__fw_primal_copy_out =
    foreign "atg__fw_primal_copy_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__gather_sparse_backward =
    foreign
      "atg__gather_sparse_backward"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs__grid_sampler_2d_cpu_fallback =
    foreign
      "atg__grid_sampler_2d_cpu_fallback"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__grid_sampler_2d_cpu_fallback_backward =
    foreign
      "atg__grid_sampler_2d_cpu_fallback_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__grid_sampler_2d_cpu_fallback_out =
    foreign
      "atg__grid_sampler_2d_cpu_fallback_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__histogramdd_bin_edges =
    foreign
      "atg__histogramdd_bin_edges"
      (t
      @-> ptr int64_t
      @-> int
      @-> ptr double
      @-> int
      @-> t
      @-> int
      @-> returning (ptr t))

  let stubs__histogramdd_bin_edges_out =
    foreign
      "atg__histogramdd_bin_edges_out"
      (ptr t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr double
      @-> int
      @-> t
      @-> int
      @-> returning void)

  let stubs__histogramdd_from_bin_cts =
    foreign
      "atg__histogramdd_from_bin_cts"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr double
      @-> int
      @-> t
      @-> int
      @-> returning void)

  let stubs__histogramdd_from_bin_cts_out =
    foreign
      "atg__histogramdd_from_bin_cts_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr double
      @-> int
      @-> t
      @-> int
      @-> returning void)

  let stubs__histogramdd_from_bin_tensors =
    foreign
      "atg__histogramdd_from_bin_tensors"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs__histogramdd_from_bin_tensors_out =
    foreign
      "atg__histogramdd_from_bin_tensors_out"
      (ptr t @-> t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs__index_put_impl =
    foreign
      "atg__index_put_impl"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> int @-> returning void)

  let stubs__index_put_impl_ =
    foreign
      "atg__index_put_impl_"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> int @-> returning void)

  let stubs__index_put_impl_out =
    foreign
      "atg__index_put_impl_out"
      (ptr t @-> t @-> t @-> ptr t @-> int @-> t @-> int @-> int @-> returning void)

  let stubs__indices = foreign "atg__indices" (ptr t @-> t @-> returning void)
  let stubs__indices_copy = foreign "atg__indices_copy" (ptr t @-> t @-> returning void)

  let stubs__indices_copy_out =
    foreign "atg__indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__is_all_true = foreign "atg__is_all_true" (ptr t @-> t @-> returning void)
  let stubs__is_any_true = foreign "atg__is_any_true" (ptr t @-> t @-> returning void)

  let stubs__linalg_check_errors =
    foreign "atg__linalg_check_errors" (t @-> string @-> int @-> returning void)

  let stubs__linalg_det = foreign "atg__linalg_det" (ptr t @-> t @-> returning void)

  let stubs__linalg_det_result =
    foreign "atg__linalg_det_result" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__linalg_eigh =
    foreign "atg__linalg_eigh" (ptr t @-> t @-> string @-> int @-> returning void)

  let stubs__linalg_eigh_eigenvalues =
    foreign
      "atg__linalg_eigh_eigenvalues"
      (ptr t @-> t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs__linalg_slogdet =
    foreign "atg__linalg_slogdet" (ptr t @-> t @-> returning void)

  let stubs__linalg_slogdet_sign =
    foreign
      "atg__linalg_slogdet_sign"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__linalg_solve_ex =
    foreign "atg__linalg_solve_ex" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__linalg_solve_ex_result =
    foreign
      "atg__linalg_solve_ex_result"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__linalg_svd =
    foreign "atg__linalg_svd" (ptr t @-> t @-> int @-> int @-> string @-> returning void)

  let stubs__linalg_svd_u =
    foreign
      "atg__linalg_svd_u"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> string @-> returning void)

  let stubs__log_softmax =
    foreign "atg__log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__log_softmax_backward_data =
    foreign
      "atg__log_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__log_softmax_backward_data_out =
    foreign
      "atg__log_softmax_backward_data_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__log_softmax_out =
    foreign
      "atg__log_softmax_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__logcumsumexp =
    foreign "atg__logcumsumexp" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__logcumsumexp_out =
    foreign "atg__logcumsumexp_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__lstm_mps =
    foreign
      "atg__lstm_mps"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__lstm_mps_out =
    foreign
      "atg__lstm_mps_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__lu_with_info =
    foreign "atg__lu_with_info" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__make_dual =
    foreign "atg__make_dual" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_dual_copy =
    foreign "atg__make_dual_copy" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_dual_copy_out =
    foreign
      "atg__make_dual_copy_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_per_channel_quantized_tensor =
    foreign
      "atg__make_per_channel_quantized_tensor"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_per_channel_quantized_tensor_out =
    foreign
      "atg__make_per_channel_quantized_tensor_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__make_per_tensor_quantized_tensor =
    foreign
      "atg__make_per_tensor_quantized_tensor"
      (ptr t @-> t @-> double @-> int64_t @-> returning void)

  let stubs__make_per_tensor_quantized_tensor_out =
    foreign
      "atg__make_per_tensor_quantized_tensor_out"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs__masked_scale =
    foreign "atg__masked_scale" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs__masked_scale_out =
    foreign "atg__masked_scale_out" (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs__masked_softmax =
    foreign
      "atg__masked_softmax"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> int @-> returning void)
end

module C2 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs__masked_softmax_backward =
    foreign
      "atg__masked_softmax_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__masked_softmax_backward_out =
    foreign
      "atg__masked_softmax_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__masked_softmax_out =
    foreign
      "atg__masked_softmax_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs__mkldnn_reshape =
    foreign "atg__mkldnn_reshape" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__mkldnn_reshape_out =
    foreign
      "atg__mkldnn_reshape_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__mkldnn_transpose =
    foreign
      "atg__mkldnn_transpose"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__mkldnn_transpose_ =
    foreign
      "atg__mkldnn_transpose_"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__mkldnn_transpose_out =
    foreign
      "atg__mkldnn_transpose_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__mps_convolution =
    foreign
      "atg__mps_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__mps_convolution_out =
    foreign
      "atg__mps_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__mps_convolution_transpose =
    foreign
      "atg__mps_convolution_transpose"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__mps_convolution_transpose_out =
    foreign
      "atg__mps_convolution_transpose_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__native_batch_norm_legit =
    foreign
      "atg__native_batch_norm_legit"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs__native_batch_norm_legit_functional =
    foreign
      "atg__native_batch_norm_legit_functional"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs__native_batch_norm_legit_no_stats =
    foreign
      "atg__native_batch_norm_legit_no_stats"
      (ptr t @-> t @-> t @-> t @-> int @-> double @-> double @-> returning void)

  let stubs__native_batch_norm_legit_no_stats_out =
    foreign
      "atg__native_batch_norm_legit_no_stats_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs__native_batch_norm_legit_out =
    foreign
      "atg__native_batch_norm_legit_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs__native_decoder_only_multi_head_attention =
    foreign
      "atg__native_decoder_only_multi_head_attention"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> returning void)

  let stubs__native_decoder_only_multi_head_attention_out =
    foreign
      "atg__native_decoder_only_multi_head_attention_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> returning void)

  let stubs__native_multi_head_attention =
    foreign
      "atg__native_multi_head_attention"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__native_multi_head_attention_out =
    foreign
      "atg__native_multi_head_attention_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__neg_view = foreign "atg__neg_view" (ptr t @-> t @-> returning void)
  let stubs__neg_view_copy = foreign "atg__neg_view_copy" (ptr t @-> t @-> returning void)

  let stubs__neg_view_copy_out =
    foreign "atg__neg_view_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__nested_from_padded =
    foreign "atg__nested_from_padded" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__nested_from_padded_and_nested_example =
    foreign
      "atg__nested_from_padded_and_nested_example"
      (ptr t @-> t @-> t @-> returning void)

  let stubs__nested_from_padded_and_nested_example_out =
    foreign
      "atg__nested_from_padded_and_nested_example_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__nested_from_padded_out =
    foreign
      "atg__nested_from_padded_out"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__nested_select_backward =
    foreign
      "atg__nested_select_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__nested_sum_backward =
    foreign
      "atg__nested_sum_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__nested_view_from_buffer =
    foreign
      "atg__nested_view_from_buffer"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__nested_view_from_buffer_copy =
    foreign
      "atg__nested_view_from_buffer_copy"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__nested_view_from_buffer_copy_out =
    foreign
      "atg__nested_view_from_buffer_copy_out"
      (ptr t @-> t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__new_zeros_with_same_feature_meta =
    foreign
      "atg__new_zeros_with_same_feature_meta"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__new_zeros_with_same_feature_meta_out =
    foreign
      "atg__new_zeros_with_same_feature_meta_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__nnpack_spatial_convolution =
    foreign
      "atg__nnpack_spatial_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__nnpack_spatial_convolution_out =
    foreign
      "atg__nnpack_spatial_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__pack_padded_sequence =
    foreign "atg__pack_padded_sequence" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__pack_padded_sequence_backward =
    foreign
      "atg__pack_padded_sequence_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> int @-> returning void)

  let stubs__pack_padded_sequence_out =
    foreign
      "atg__pack_padded_sequence_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__pad_circular =
    foreign "atg__pad_circular" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__pad_enum =
    foreign
      "atg__pad_enum"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> returning void)

  let stubs__pad_packed_sequence =
    foreign
      "atg__pad_packed_sequence"
      (ptr t @-> t @-> t @-> int @-> scalar @-> int64_t @-> returning void)

  let stubs__pdist_backward =
    foreign "atg__pdist_backward" (ptr t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__pdist_backward_out =
    foreign
      "atg__pdist_backward_out"
      (ptr t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs__pin_memory =
    foreign "atg__pin_memory" (ptr t @-> t @-> int @-> returning void)

  let stubs__pin_memory_out =
    foreign "atg__pin_memory_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__prelu_kernel =
    foreign "atg__prelu_kernel" (ptr t @-> t @-> t @-> returning void)

  let stubs__prelu_kernel_backward =
    foreign "atg__prelu_kernel_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__remove_batch_dim =
    foreign
      "atg__remove_batch_dim"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs__reshape_alias =
    foreign
      "atg__reshape_alias"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs__reshape_alias_copy =
    foreign
      "atg__reshape_alias_copy"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs__reshape_alias_copy_out =
    foreign
      "atg__reshape_alias_copy_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__reshape_copy =
    foreign "atg__reshape_copy" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__reshape_from_tensor =
    foreign "atg__reshape_from_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs__resize_output =
    foreign
      "atg__resize_output"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__resize_output_ =
    foreign
      "atg__resize_output_"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__resize_output_out =
    foreign
      "atg__resize_output_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__rowwise_prune =
    foreign "atg__rowwise_prune" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__sample_dirichlet =
    foreign "atg__sample_dirichlet" (ptr t @-> t @-> returning void)

  let stubs__sample_dirichlet_out =
    foreign "atg__sample_dirichlet_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__saturate_weight_to_fp16 =
    foreign "atg__saturate_weight_to_fp16" (ptr t @-> t @-> returning void)

  let stubs__scaled_dot_product_attention =
    foreign
      "atg__scaled_dot_product_attention"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> int @-> int @-> returning void)

  let stubs__scaled_dot_product_attention_math =
    foreign
      "atg__scaled_dot_product_attention_math"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> int @-> t @-> returning void)

  let stubs__scaled_dot_product_efficient_attention =
    foreign
      "atg__scaled_dot_product_efficient_attention"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__scaled_dot_product_efficient_attention_backward =
    foreign
      "atg__scaled_dot_product_efficient_attention_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__scaled_dot_product_flash_attention_backward =
    foreign
      "atg__scaled_dot_product_flash_attention_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs__scatter_reduce =
    foreign
      "atg__scatter_reduce"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs__scatter_reduce_ =
    foreign
      "atg__scatter_reduce_"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs__scatter_reduce_two_out =
    foreign
      "atg__scatter_reduce_two_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs__segment_reduce_backward =
    foreign
      "atg__segment_reduce_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> string
      @-> t
      @-> t
      @-> int64_t
      @-> scalar
      @-> returning void)

  let stubs__segment_reduce_backward_out =
    foreign
      "atg__segment_reduce_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> string
      @-> t
      @-> t
      @-> int64_t
      @-> scalar
      @-> returning void)

  let stubs__shape_as_tensor =
    foreign "atg__shape_as_tensor" (ptr t @-> t @-> returning void)

  let stubs__slow_conv2d_backward =
    foreign
      "atg__slow_conv2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs__sobol_engine_draw =
    foreign
      "atg__sobol_engine_draw"
      (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs__sobol_engine_ff_ =
    foreign
      "atg__sobol_engine_ff_"
      (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__sobol_engine_initialize_state_ =
    foreign
      "atg__sobol_engine_initialize_state_"
      (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__sobol_engine_scramble_ =
    foreign
      "atg__sobol_engine_scramble_"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__softmax =
    foreign "atg__softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__softmax_backward_data =
    foreign
      "atg__softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__softmax_backward_data_out =
    foreign
      "atg__softmax_backward_data_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__softmax_out =
    foreign "atg__softmax_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_addmm =
    foreign "atg__sparse_addmm" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__sparse_addmm_out =
    foreign "atg__sparse_addmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__sparse_broadcast_to =
    foreign
      "atg__sparse_broadcast_to"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_broadcast_to_copy =
    foreign
      "atg__sparse_broadcast_to_copy"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_broadcast_to_copy_out =
    foreign
      "atg__sparse_broadcast_to_copy_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_bsc_tensor_unsafe =
    foreign
      "atg__sparse_bsc_tensor_unsafe"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_bsr_tensor_unsafe =
    foreign
      "atg__sparse_bsr_tensor_unsafe"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_compressed_tensor_unsafe =
    foreign
      "atg__sparse_compressed_tensor_unsafe"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_coo_tensor_unsafe =
    foreign
      "atg__sparse_coo_tensor_unsafe"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_coo_tensor_with_dims =
    foreign
      "atg__sparse_coo_tensor_with_dims"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs__sparse_coo_tensor_with_dims_and_tensors =
    foreign
      "atg__sparse_coo_tensor_with_dims_and_tensors"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> int
      @-> int
      @-> returning void)

  let stubs__sparse_coo_tensor_with_dims_and_tensors_out =
    foreign
      "atg__sparse_coo_tensor_with_dims_and_tensors_out"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> returning void)

  let stubs__sparse_coo_tensor_with_dims_out =
    foreign
      "atg__sparse_coo_tensor_with_dims_out"
      (ptr t @-> t @-> int64_t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_csc_tensor_unsafe =
    foreign
      "atg__sparse_csc_tensor_unsafe"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_csr_prod =
    foreign
      "atg__sparse_csr_prod"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_csr_prod_dim_dtype_out =
    foreign
      "atg__sparse_csr_prod_dim_dtype_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_csr_sum =
    foreign
      "atg__sparse_csr_sum"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_csr_sum_dim_dtype_out =
    foreign
      "atg__sparse_csr_sum_dim_dtype_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)
end

module C3 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs__sparse_csr_tensor_unsafe =
    foreign
      "atg__sparse_csr_tensor_unsafe"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs__sparse_log_softmax =
    foreign "atg__sparse_log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_log_softmax_backward_data =
    foreign
      "atg__sparse_log_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_log_softmax_backward_data_out =
    foreign
      "atg__sparse_log_softmax_backward_data_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_log_softmax_int =
    foreign
      "atg__sparse_log_softmax_int"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_log_softmax_out =
    foreign
      "atg__sparse_log_softmax_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_mm = foreign "atg__sparse_mm" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_mm_reduce =
    foreign "atg__sparse_mm_reduce" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs__sparse_mm_reduce_impl =
    foreign "atg__sparse_mm_reduce_impl" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs__sparse_softmax =
    foreign "atg__sparse_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_softmax_backward_data =
    foreign
      "atg__sparse_softmax_backward_data"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_softmax_backward_data_out =
    foreign
      "atg__sparse_softmax_backward_data_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs__sparse_softmax_int =
    foreign "atg__sparse_softmax_int" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_softmax_out =
    foreign
      "atg__sparse_softmax_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs__sparse_sparse_matmul =
    foreign "atg__sparse_sparse_matmul" (ptr t @-> t @-> t @-> returning void)

  let stubs__sparse_sparse_matmul_out =
    foreign "atg__sparse_sparse_matmul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__sparse_sum = foreign "atg__sparse_sum" (ptr t @-> t @-> returning void)

  let stubs__sparse_sum_backward =
    foreign
      "atg__sparse_sum_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_sum_backward_out =
    foreign
      "atg__sparse_sum_backward_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_sum_dim =
    foreign "atg__sparse_sum_dim" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_sum_dim_dtype =
    foreign
      "atg__sparse_sum_dim_dtype"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs__sparse_sum_dim_out =
    foreign
      "atg__sparse_sum_dim_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__sparse_sum_dtype =
    foreign "atg__sparse_sum_dtype" (ptr t @-> t @-> int @-> returning void)

  let stubs__spdiags =
    foreign "atg__spdiags" (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__spdiags_out =
    foreign
      "atg__spdiags_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__stack =
    foreign "atg__stack" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__stack_out =
    foreign "atg__stack_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs__standard_gamma =
    foreign "atg__standard_gamma" (ptr t @-> t @-> returning void)

  let stubs__standard_gamma_grad =
    foreign "atg__standard_gamma_grad" (ptr t @-> t @-> t @-> returning void)

  let stubs__standard_gamma_grad_out =
    foreign "atg__standard_gamma_grad_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs__standard_gamma_out =
    foreign "atg__standard_gamma_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__test_ambiguous_defaults =
    foreign
      "atg__test_ambiguous_defaults"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs__test_ambiguous_defaults_b =
    foreign
      "atg__test_ambiguous_defaults_b"
      (ptr t @-> t @-> int64_t @-> string @-> returning void)

  let stubs__test_autograd_multiple_dispatch =
    foreign "atg__test_autograd_multiple_dispatch" (ptr t @-> t @-> returning void)

  let stubs__test_autograd_multiple_dispatch_fullcoverage_out =
    foreign
      "atg__test_autograd_multiple_dispatch_fullcoverage_out"
      (ptr t @-> t @-> t @-> returning void)

  let stubs__test_autograd_multiple_dispatch_ntonly =
    foreign
      "atg__test_autograd_multiple_dispatch_ntonly"
      (ptr t @-> t @-> int @-> returning void)

  let stubs__test_autograd_multiple_dispatch_view =
    foreign "atg__test_autograd_multiple_dispatch_view" (ptr t @-> t @-> returning void)

  let stubs__test_autograd_multiple_dispatch_view_copy =
    foreign
      "atg__test_autograd_multiple_dispatch_view_copy"
      (ptr t @-> t @-> returning void)

  let stubs__test_autograd_multiple_dispatch_view_copy_out =
    foreign
      "atg__test_autograd_multiple_dispatch_view_copy_out"
      (ptr t @-> t @-> t @-> returning void)

  let stubs__test_check_tensor =
    foreign "atg__test_check_tensor" (ptr t @-> t @-> returning void)

  let stubs__test_optional_filled_intlist =
    foreign
      "atg__test_optional_filled_intlist"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_optional_filled_intlist_out =
    foreign
      "atg__test_optional_filled_intlist_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_optional_floatlist =
    foreign
      "atg__test_optional_floatlist"
      (ptr t @-> t @-> ptr double @-> int @-> returning void)

  let stubs__test_optional_floatlist_out =
    foreign
      "atg__test_optional_floatlist_out"
      (ptr t @-> t @-> t @-> ptr double @-> int @-> returning void)

  let stubs__test_optional_intlist =
    foreign
      "atg__test_optional_intlist"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_optional_intlist_out =
    foreign
      "atg__test_optional_intlist_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__test_serialization_subcmul =
    foreign "atg__test_serialization_subcmul" (ptr t @-> t @-> t @-> returning void)

  let stubs__test_string_default =
    foreign
      "atg__test_string_default"
      (ptr t @-> t @-> string @-> string @-> returning void)

  let stubs__test_warn_in_autograd =
    foreign "atg__test_warn_in_autograd" (ptr t @-> t @-> returning void)

  let stubs__test_warn_in_autograd_out =
    foreign "atg__test_warn_in_autograd_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__thnn_differentiable_gru_cell_backward =
    foreign
      "atg__thnn_differentiable_gru_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_differentiable_lstm_cell_backward =
    foreign
      "atg__thnn_differentiable_lstm_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_gru_cell =
    foreign
      "atg__thnn_fused_gru_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_gru_cell_backward =
    foreign
      "atg__thnn_fused_gru_cell_backward"
      (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_gru_cell_backward_out =
    foreign
      "atg__thnn_fused_gru_cell_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_gru_cell_out =
    foreign
      "atg__thnn_fused_gru_cell_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_lstm_cell =
    foreign
      "atg__thnn_fused_lstm_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__thnn_fused_lstm_cell_backward =
    foreign
      "atg__thnn_fused_lstm_cell_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_lstm_cell_backward_impl =
    foreign
      "atg__thnn_fused_lstm_cell_backward_impl"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_lstm_cell_backward_impl_out =
    foreign
      "atg__thnn_fused_lstm_cell_backward_impl_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs__thnn_fused_lstm_cell_out =
    foreign
      "atg__thnn_fused_lstm_cell_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs__to_copy =
    foreign "atg__to_copy" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__to_copy_out =
    foreign "atg__to_copy_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__to_cpu = foreign "atg__to_cpu" (ptr t @-> int @-> returning (ptr t))
  let stubs__to_dense = foreign "atg__to_dense" (ptr t @-> t @-> int @-> returning void)

  let stubs__to_dense_out =
    foreign "atg__to_dense_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs__transform_bias_rescale_qkv =
    foreign
      "atg__transform_bias_rescale_qkv"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__transform_bias_rescale_qkv_out =
    foreign
      "atg__transform_bias_rescale_qkv_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__transformer_decoder_only_layer_fwd =
    foreign
      "atg__transformer_decoder_only_layer_fwd"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> double
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> returning void)

  let stubs__transformer_decoder_only_layer_fwd_out =
    foreign
      "atg__transformer_decoder_only_layer_fwd_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> double
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> returning void)

  let stubs__transformer_encoder_layer_fwd =
    foreign
      "atg__transformer_encoder_layer_fwd"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> double
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__transformer_encoder_layer_fwd_out =
    foreign
      "atg__transformer_encoder_layer_fwd_out"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> double
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs__trilinear =
    foreign
      "atg__trilinear"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__trilinear_out =
    foreign
      "atg__trilinear_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs__triton_multi_head_attention =
    foreign
      "atg__triton_multi_head_attention"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> returning void)

  let stubs__triton_multi_head_attention_out =
    foreign
      "atg__triton_multi_head_attention_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> returning void)

  let stubs__triton_scaled_dot_attention =
    foreign
      "atg__triton_scaled_dot_attention"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs__triton_scaled_dot_attention_out =
    foreign
      "atg__triton_scaled_dot_attention_out"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs__unique =
    foreign "atg__unique" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs__unique2 =
    foreign "atg__unique2" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__unique2_out =
    foreign
      "atg__unique2_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs__unique_out =
    foreign "atg__unique_out" (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs__unpack_dual =
    foreign "atg__unpack_dual" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs__unsafe_view =
    foreign "atg__unsafe_view" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__unsafe_view_out =
    foreign
      "atg__unsafe_view_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__upsample_bicubic2d_aa =
    foreign
      "atg__upsample_bicubic2d_aa"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bicubic2d_aa_backward =
    foreign
      "atg__upsample_bicubic2d_aa_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bicubic2d_aa_backward_grad_input =
    foreign
      "atg__upsample_bicubic2d_aa_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bicubic2d_aa_out =
    foreign
      "atg__upsample_bicubic2d_aa_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bicubic2d_aa_vec =
    foreign
      "atg__upsample_bicubic2d_aa_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs__upsample_bilinear2d_aa =
    foreign
      "atg__upsample_bilinear2d_aa"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bilinear2d_aa_backward =
    foreign
      "atg__upsample_bilinear2d_aa_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bilinear2d_aa_backward_grad_input =
    foreign
      "atg__upsample_bilinear2d_aa_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bilinear2d_aa_out =
    foreign
      "atg__upsample_bilinear2d_aa_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_bilinear2d_aa_vec =
    foreign
      "atg__upsample_bilinear2d_aa_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact1d =
    foreign
      "atg__upsample_nearest_exact1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> double @-> int @-> returning void)

  let stubs__upsample_nearest_exact1d_backward =
    foreign
      "atg__upsample_nearest_exact1d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact1d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact1d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact1d_out =
    foreign
      "atg__upsample_nearest_exact1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> double @-> int @-> returning void)

  let stubs__upsample_nearest_exact1d_vec =
    foreign
      "atg__upsample_nearest_exact1d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)
end

module C4 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs__upsample_nearest_exact2d =
    foreign
      "atg__upsample_nearest_exact2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact2d_backward =
    foreign
      "atg__upsample_nearest_exact2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact2d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact2d_out =
    foreign
      "atg__upsample_nearest_exact2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact2d_vec =
    foreign
      "atg__upsample_nearest_exact2d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)

  let stubs__upsample_nearest_exact3d =
    foreign
      "atg__upsample_nearest_exact3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact3d_backward =
    foreign
      "atg__upsample_nearest_exact3d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact3d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact3d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact3d_out =
    foreign
      "atg__upsample_nearest_exact3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs__upsample_nearest_exact3d_vec =
    foreign
      "atg__upsample_nearest_exact3d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)

  let stubs__validate_compressed_sparse_indices =
    foreign
      "atg__validate_compressed_sparse_indices"
      (int @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs__validate_sparse_bsc_tensor_args =
    foreign
      "atg__validate_sparse_bsc_tensor_args"
      (t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__validate_sparse_bsr_tensor_args =
    foreign
      "atg__validate_sparse_bsr_tensor_args"
      (t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__validate_sparse_csc_tensor_args =
    foreign
      "atg__validate_sparse_csc_tensor_args"
      (t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs__values = foreign "atg__values" (ptr t @-> t @-> returning void)
  let stubs__values_copy = foreign "atg__values_copy" (ptr t @-> t @-> returning void)

  let stubs__values_copy_out =
    foreign "atg__values_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs__weight_norm =
    foreign "atg__weight_norm" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_differentiable_backward =
    foreign
      "atg__weight_norm_differentiable_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_interface =
    foreign "atg__weight_norm_interface" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_interface_backward =
    foreign
      "atg__weight_norm_interface_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_interface_backward_out =
    foreign
      "atg__weight_norm_interface_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs__weight_norm_interface_out =
    foreign
      "atg__weight_norm_interface_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_abs = foreign "atg_abs" (ptr t @-> t @-> returning void)
  let stubs_abs_ = foreign "atg_abs_" (ptr t @-> t @-> returning void)
  let stubs_abs_out = foreign "atg_abs_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_absolute = foreign "atg_absolute" (ptr t @-> t @-> returning void)
  let stubs_absolute_ = foreign "atg_absolute_" (ptr t @-> t @-> returning void)

  let stubs_absolute_out =
    foreign "atg_absolute_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_acos = foreign "atg_acos" (ptr t @-> t @-> returning void)
  let stubs_acos_ = foreign "atg_acos_" (ptr t @-> t @-> returning void)
  let stubs_acos_out = foreign "atg_acos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_acosh = foreign "atg_acosh" (ptr t @-> t @-> returning void)
  let stubs_acosh_ = foreign "atg_acosh_" (ptr t @-> t @-> returning void)
  let stubs_acosh_out = foreign "atg_acosh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_adaptive_avg_pool1d =
    foreign
      "atg_adaptive_avg_pool1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool2d =
    foreign
      "atg_adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool2d_out =
    foreign
      "atg_adaptive_avg_pool2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool3d =
    foreign
      "atg_adaptive_avg_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_avg_pool3d_backward =
    foreign "atg_adaptive_avg_pool3d_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_avg_pool3d_out =
    foreign
      "atg_adaptive_avg_pool3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool1d =
    foreign
      "atg_adaptive_max_pool1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool2d =
    foreign
      "atg_adaptive_max_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool2d_backward =
    foreign "atg_adaptive_max_pool2d_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool2d_backward_grad_input =
    foreign
      "atg_adaptive_max_pool2d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool2d_out =
    foreign
      "atg_adaptive_max_pool2d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool3d =
    foreign
      "atg_adaptive_max_pool3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_adaptive_max_pool3d_backward =
    foreign "atg_adaptive_max_pool3d_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool3d_backward_grad_input =
    foreign
      "atg_adaptive_max_pool3d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_adaptive_max_pool3d_out =
    foreign
      "atg_adaptive_max_pool3d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_add = foreign "atg_add" (ptr t @-> t @-> t @-> returning void)
  let stubs_add_ = foreign "atg_add_" (ptr t @-> t @-> t @-> returning void)
  let stubs_add_out = foreign "atg_add_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_add_scalar =
    foreign "atg_add_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_add_scalar_ =
    foreign "atg_add_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_add_scalar_out =
    foreign "atg_add_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_addbmm = foreign "atg_addbmm" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addbmm_ = foreign "atg_addbmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addbmm_out =
    foreign "atg_addbmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addcdiv = foreign "atg_addcdiv" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addcdiv_ = foreign "atg_addcdiv_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addcdiv_out =
    foreign "atg_addcdiv_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addcmul = foreign "atg_addcmul" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addcmul_ = foreign "atg_addcmul_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addcmul_out =
    foreign "atg_addcmul_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addmm = foreign "atg_addmm" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addmm_ = foreign "atg_addmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addmm_out =
    foreign "atg_addmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addmv = foreign "atg_addmv" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addmv_ = foreign "atg_addmv_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addmv_out =
    foreign "atg_addmv_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_addr = foreign "atg_addr" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_addr_ = foreign "atg_addr_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_addr_out =
    foreign "atg_addr_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_adjoint = foreign "atg_adjoint" (ptr t @-> t @-> returning void)

  let stubs_affine_grid_generator =
    foreign
      "atg_affine_grid_generator"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_affine_grid_generator_backward =
    foreign
      "atg_affine_grid_generator_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_affine_grid_generator_out =
    foreign
      "atg_affine_grid_generator_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_alias = foreign "atg_alias" (ptr t @-> t @-> returning void)
  let stubs_alias_copy = foreign "atg_alias_copy" (ptr t @-> t @-> returning void)

  let stubs_alias_copy_out =
    foreign "atg_alias_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_align_as = foreign "atg_align_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_align_tensors =
    foreign "atg_align_tensors" (ptr t @-> int @-> returning (ptr t))

  let stubs_all = foreign "atg_all" (ptr t @-> t @-> returning void)
  let stubs_all_all_out = foreign "atg_all_all_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_all_dim =
    foreign "atg_all_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_all_out =
    foreign "atg_all_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_alpha_dropout =
    foreign "atg_alpha_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_alpha_dropout_ =
    foreign "atg_alpha_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_amax =
    foreign "atg_amax" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amax_out =
    foreign
      "atg_amax_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amin =
    foreign "atg_amin" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_amin_out =
    foreign
      "atg_amin_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_aminmax =
    foreign "atg_aminmax" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_aminmax_out =
    foreign
      "atg_aminmax_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_angle = foreign "atg_angle" (ptr t @-> t @-> returning void)
  let stubs_angle_out = foreign "atg_angle_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_any = foreign "atg_any" (ptr t @-> t @-> returning void)
  let stubs_any_all_out = foreign "atg_any_all_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_any_dim =
    foreign "atg_any_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)
end

module C5 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_any_out =
    foreign "atg_any_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_arange =
    foreign "atg_arange" (ptr t @-> scalar @-> int @-> int @-> returning void)

  let stubs_arange_start =
    foreign
      "atg_arange_start"
      (ptr t @-> scalar @-> scalar @-> int @-> int @-> returning void)

  let stubs_arange_start_step =
    foreign
      "atg_arange_start_step"
      (ptr t @-> scalar @-> scalar @-> int @-> int @-> returning void)

  let stubs_arccos = foreign "atg_arccos" (ptr t @-> t @-> returning void)
  let stubs_arccos_ = foreign "atg_arccos_" (ptr t @-> t @-> returning void)
  let stubs_arccos_out = foreign "atg_arccos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arccosh = foreign "atg_arccosh" (ptr t @-> t @-> returning void)
  let stubs_arccosh_ = foreign "atg_arccosh_" (ptr t @-> t @-> returning void)
  let stubs_arccosh_out = foreign "atg_arccosh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arcsin = foreign "atg_arcsin" (ptr t @-> t @-> returning void)
  let stubs_arcsin_ = foreign "atg_arcsin_" (ptr t @-> t @-> returning void)
  let stubs_arcsin_out = foreign "atg_arcsin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arcsinh = foreign "atg_arcsinh" (ptr t @-> t @-> returning void)
  let stubs_arcsinh_ = foreign "atg_arcsinh_" (ptr t @-> t @-> returning void)
  let stubs_arcsinh_out = foreign "atg_arcsinh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arctan = foreign "atg_arctan" (ptr t @-> t @-> returning void)
  let stubs_arctan2 = foreign "atg_arctan2" (ptr t @-> t @-> t @-> returning void)
  let stubs_arctan2_ = foreign "atg_arctan2_" (ptr t @-> t @-> t @-> returning void)

  let stubs_arctan2_out =
    foreign "atg_arctan2_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_arctan_ = foreign "atg_arctan_" (ptr t @-> t @-> returning void)
  let stubs_arctan_out = foreign "atg_arctan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_arctanh = foreign "atg_arctanh" (ptr t @-> t @-> returning void)
  let stubs_arctanh_ = foreign "atg_arctanh_" (ptr t @-> t @-> returning void)
  let stubs_arctanh_out = foreign "atg_arctanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_argmax =
    foreign "atg_argmax" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_argmax_out =
    foreign
      "atg_argmax_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_argmin =
    foreign "atg_argmin" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_argmin_out =
    foreign
      "atg_argmin_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_argsort =
    foreign "atg_argsort" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_argsort_stable =
    foreign
      "atg_argsort_stable"
      (ptr t @-> t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_argsort_stable_out =
    foreign
      "atg_argsort_stable_out"
      (ptr t @-> t @-> t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_argwhere = foreign "atg_argwhere" (ptr t @-> t @-> returning void)

  let stubs_as_strided =
    foreign
      "atg_as_strided"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_as_strided_ =
    foreign
      "atg_as_strided_"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_as_strided_copy =
    foreign
      "atg_as_strided_copy"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_as_strided_copy_out =
    foreign
      "atg_as_strided_copy_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_as_strided_scatter =
    foreign
      "atg_as_strided_scatter"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_as_strided_scatter_out =
    foreign
      "atg_as_strided_scatter_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_asin = foreign "atg_asin" (ptr t @-> t @-> returning void)
  let stubs_asin_ = foreign "atg_asin_" (ptr t @-> t @-> returning void)
  let stubs_asin_out = foreign "atg_asin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_asinh = foreign "atg_asinh" (ptr t @-> t @-> returning void)
  let stubs_asinh_ = foreign "atg_asinh_" (ptr t @-> t @-> returning void)
  let stubs_asinh_out = foreign "atg_asinh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atan = foreign "atg_atan" (ptr t @-> t @-> returning void)
  let stubs_atan2 = foreign "atg_atan2" (ptr t @-> t @-> t @-> returning void)
  let stubs_atan2_ = foreign "atg_atan2_" (ptr t @-> t @-> t @-> returning void)

  let stubs_atan2_out =
    foreign "atg_atan2_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_atan_ = foreign "atg_atan_" (ptr t @-> t @-> returning void)
  let stubs_atan_out = foreign "atg_atan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atanh = foreign "atg_atanh" (ptr t @-> t @-> returning void)
  let stubs_atanh_ = foreign "atg_atanh_" (ptr t @-> t @-> returning void)
  let stubs_atanh_out = foreign "atg_atanh_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_atleast_1d = foreign "atg_atleast_1d" (ptr t @-> t @-> returning void)

  let stubs_atleast_1d_sequence =
    foreign "atg_atleast_1d_sequence" (ptr t @-> int @-> returning (ptr t))

  let stubs_atleast_2d = foreign "atg_atleast_2d" (ptr t @-> t @-> returning void)

  let stubs_atleast_2d_sequence =
    foreign "atg_atleast_2d_sequence" (ptr t @-> int @-> returning (ptr t))

  let stubs_atleast_3d = foreign "atg_atleast_3d" (ptr t @-> t @-> returning void)

  let stubs_atleast_3d_sequence =
    foreign "atg_atleast_3d_sequence" (ptr t @-> int @-> returning (ptr t))

  let stubs_avg_pool1d =
    foreign
      "atg_avg_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_avg_pool2d =
    foreign
      "atg_avg_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool2d_backward =
    foreign
      "atg_avg_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool2d_backward_grad_input =
    foreign
      "atg_avg_pool2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool2d_out =
    foreign
      "atg_avg_pool2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool3d =
    foreign
      "atg_avg_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool3d_backward =
    foreign
      "atg_avg_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool3d_backward_grad_input =
    foreign
      "atg_avg_pool3d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_avg_pool3d_out =
    foreign
      "atg_avg_pool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_baddbmm = foreign "atg_baddbmm" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_baddbmm_ = foreign "atg_baddbmm_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_baddbmm_out =
    foreign "atg_baddbmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_bartlett_window =
    foreign "atg_bartlett_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_bartlett_window_out =
    foreign "atg_bartlett_window_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_bartlett_window_periodic =
    foreign
      "atg_bartlett_window_periodic"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_bartlett_window_periodic_out =
    foreign
      "atg_bartlett_window_periodic_out"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_batch_norm =
    foreign
      "atg_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> int
      @-> returning void)

  let stubs_batch_norm_backward_elemt =
    foreign
      "atg_batch_norm_backward_elemt"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_batch_norm_backward_elemt_out =
    foreign
      "atg_batch_norm_backward_elemt_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_batch_norm_backward_reduce =
    foreign
      "atg_batch_norm_backward_reduce"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_batch_norm_backward_reduce_out =
    foreign
      "atg_batch_norm_backward_reduce_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_batch_norm_elemt =
    foreign
      "atg_batch_norm_elemt"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_batch_norm_elemt_out =
    foreign
      "atg_batch_norm_elemt_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_batch_norm_gather_stats =
    foreign
      "atg_batch_norm_gather_stats"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_batch_norm_gather_stats_out =
    foreign
      "atg_batch_norm_gather_stats_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_batch_norm_gather_stats_with_counts =
    foreign
      "atg_batch_norm_gather_stats_with_counts"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> double @-> double @-> t @-> returning void)

  let stubs_batch_norm_gather_stats_with_counts_out =
    foreign
      "atg_batch_norm_gather_stats_with_counts_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> t
      @-> returning void)

  let stubs_batch_norm_stats =
    foreign "atg_batch_norm_stats" (ptr t @-> t @-> double @-> returning void)

  let stubs_batch_norm_stats_out =
    foreign
      "atg_batch_norm_stats_out"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_batch_norm_update_stats =
    foreign
      "atg_batch_norm_update_stats"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_batch_norm_update_stats_out =
    foreign
      "atg_batch_norm_update_stats_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_bernoulli = foreign "atg_bernoulli" (ptr t @-> t @-> returning void)
  let stubs_bernoulli_ = foreign "atg_bernoulli_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bernoulli_float_ =
    foreign "atg_bernoulli_float_" (ptr t @-> t @-> double @-> returning void)

  let stubs_bernoulli_p =
    foreign "atg_bernoulli_p" (ptr t @-> t @-> double @-> returning void)

  let stubs_bernoulli_tensor =
    foreign "atg_bernoulli_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_bilinear =
    foreign "atg_bilinear" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_binary_cross_entropy =
    foreign
      "atg_binary_cross_entropy"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_backward =
    foreign
      "atg_binary_cross_entropy_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_backward_grad_input =
    foreign
      "atg_binary_cross_entropy_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)
end

module C6 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_binary_cross_entropy_out =
    foreign
      "atg_binary_cross_entropy_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_with_logits =
    foreign
      "atg_binary_cross_entropy_with_logits"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binary_cross_entropy_with_logits_out =
    foreign
      "atg_binary_cross_entropy_with_logits_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_bincount =
    foreign "atg_bincount" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_bincount_out =
    foreign "atg_bincount_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_binomial = foreign "atg_binomial" (ptr t @-> t @-> t @-> returning void)

  let stubs_binomial_out =
    foreign "atg_binomial_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_and =
    foreign "atg_bitwise_and" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_and_ =
    foreign "atg_bitwise_and_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_and_scalar_out =
    foreign "atg_bitwise_and_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_and_scalar_tensor =
    foreign "atg_bitwise_and_scalar_tensor" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_and_scalar_tensor_out =
    foreign
      "atg_bitwise_and_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_and_tensor =
    foreign "atg_bitwise_and_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_and_tensor_ =
    foreign "atg_bitwise_and_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_and_tensor_out =
    foreign "atg_bitwise_and_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_left_shift =
    foreign "atg_bitwise_left_shift" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_left_shift_ =
    foreign "atg_bitwise_left_shift_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_left_shift_scalar_tensor =
    foreign
      "atg_bitwise_left_shift_scalar_tensor"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_left_shift_scalar_tensor_out =
    foreign
      "atg_bitwise_left_shift_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_left_shift_tensor_out =
    foreign
      "atg_bitwise_left_shift_tensor_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_left_shift_tensor_scalar =
    foreign
      "atg_bitwise_left_shift_tensor_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_left_shift_tensor_scalar_ =
    foreign
      "atg_bitwise_left_shift_tensor_scalar_"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_left_shift_tensor_scalar_out =
    foreign
      "atg_bitwise_left_shift_tensor_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_not = foreign "atg_bitwise_not" (ptr t @-> t @-> returning void)
  let stubs_bitwise_not_ = foreign "atg_bitwise_not_" (ptr t @-> t @-> returning void)

  let stubs_bitwise_not_out =
    foreign "atg_bitwise_not_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_or =
    foreign "atg_bitwise_or" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_or_ =
    foreign "atg_bitwise_or_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_or_scalar_out =
    foreign "atg_bitwise_or_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_or_scalar_tensor =
    foreign "atg_bitwise_or_scalar_tensor" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_or_scalar_tensor_out =
    foreign
      "atg_bitwise_or_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_or_tensor =
    foreign "atg_bitwise_or_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_or_tensor_ =
    foreign "atg_bitwise_or_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_or_tensor_out =
    foreign "atg_bitwise_or_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_right_shift =
    foreign "atg_bitwise_right_shift" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_right_shift_ =
    foreign "atg_bitwise_right_shift_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_right_shift_scalar_tensor =
    foreign
      "atg_bitwise_right_shift_scalar_tensor"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_right_shift_scalar_tensor_out =
    foreign
      "atg_bitwise_right_shift_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_right_shift_tensor_out =
    foreign
      "atg_bitwise_right_shift_tensor_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_bitwise_right_shift_tensor_scalar =
    foreign
      "atg_bitwise_right_shift_tensor_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_right_shift_tensor_scalar_ =
    foreign
      "atg_bitwise_right_shift_tensor_scalar_"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_right_shift_tensor_scalar_out =
    foreign
      "atg_bitwise_right_shift_tensor_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_xor =
    foreign "atg_bitwise_xor" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_xor_ =
    foreign "atg_bitwise_xor_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_xor_scalar_out =
    foreign "atg_bitwise_xor_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_bitwise_xor_scalar_tensor =
    foreign "atg_bitwise_xor_scalar_tensor" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_xor_scalar_tensor_out =
    foreign
      "atg_bitwise_xor_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_bitwise_xor_tensor =
    foreign "atg_bitwise_xor_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_xor_tensor_ =
    foreign "atg_bitwise_xor_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_bitwise_xor_tensor_out =
    foreign "atg_bitwise_xor_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_blackman_window =
    foreign "atg_blackman_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_blackman_window_out =
    foreign "atg_blackman_window_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_blackman_window_periodic =
    foreign
      "atg_blackman_window_periodic"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_blackman_window_periodic_out =
    foreign
      "atg_blackman_window_periodic_out"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_block_diag =
    foreign "atg_block_diag" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_block_diag_out =
    foreign "atg_block_diag_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_bmm = foreign "atg_bmm" (ptr t @-> t @-> t @-> returning void)
  let stubs_bmm_out = foreign "atg_bmm_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_broadcast_tensors =
    foreign "atg_broadcast_tensors" (ptr t @-> int @-> returning (ptr t))

  let stubs_broadcast_to =
    foreign "atg_broadcast_to" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_bucketize =
    foreign "atg_bucketize" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_bucketize_scalar =
    foreign
      "atg_bucketize_scalar"
      (ptr t @-> scalar @-> t @-> int @-> int @-> returning void)

  let stubs_bucketize_scalar_out =
    foreign
      "atg_bucketize_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> int @-> int @-> returning void)

  let stubs_bucketize_tensor_out =
    foreign
      "atg_bucketize_tensor_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_cartesian_prod =
    foreign "atg_cartesian_prod" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_cat =
    foreign "atg_cat" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_cat_out =
    foreign "atg_cat_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_cauchy =
    foreign "atg_cauchy" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_cauchy_ =
    foreign "atg_cauchy_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_cauchy_out =
    foreign "atg_cauchy_out" (ptr t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_ccol_indices = foreign "atg_ccol_indices" (ptr t @-> t @-> returning void)

  let stubs_ccol_indices_copy =
    foreign "atg_ccol_indices_copy" (ptr t @-> t @-> returning void)

  let stubs_ccol_indices_copy_out =
    foreign "atg_ccol_indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_cdist =
    foreign
      "atg_cdist"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_ceil = foreign "atg_ceil" (ptr t @-> t @-> returning void)
  let stubs_ceil_ = foreign "atg_ceil_" (ptr t @-> t @-> returning void)
  let stubs_ceil_out = foreign "atg_ceil_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_celu = foreign "atg_celu" (ptr t @-> t @-> returning void)
  let stubs_celu_ = foreign "atg_celu_" (ptr t @-> t @-> returning void)
  let stubs_celu_out = foreign "atg_celu_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_chain_matmul =
    foreign "atg_chain_matmul" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_chain_matmul_out =
    foreign "atg_chain_matmul_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_chalf = foreign "atg_chalf" (ptr t @-> t @-> returning void)

  let stubs_channel_shuffle =
    foreign "atg_channel_shuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_channel_shuffle_out =
    foreign "atg_channel_shuffle_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cholesky = foreign "atg_cholesky" (ptr t @-> t @-> int @-> returning void)

  let stubs_cholesky_inverse =
    foreign "atg_cholesky_inverse" (ptr t @-> t @-> int @-> returning void)

  let stubs_cholesky_inverse_out =
    foreign "atg_cholesky_inverse_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_out =
    foreign "atg_cholesky_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_solve =
    foreign "atg_cholesky_solve" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_cholesky_solve_out =
    foreign "atg_cholesky_solve_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_choose_qparams_optimized =
    foreign
      "atg_choose_qparams_optimized"
      (ptr t @-> t @-> int64_t @-> int64_t @-> double @-> int64_t @-> returning void)

  let stubs_chunk = foreign "atg_chunk" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_clamp =
    foreign "atg_clamp" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clamp_ =
    foreign "atg_clamp_" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clamp_max = foreign "atg_clamp_max" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_clamp_max_ =
    foreign "atg_clamp_max_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_clamp_max_out =
    foreign "atg_clamp_max_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_clamp_max_tensor =
    foreign "atg_clamp_max_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_max_tensor_ =
    foreign "atg_clamp_max_tensor_" (ptr t @-> t @-> t @-> returning void)
end

module C7 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_clamp_max_tensor_out =
    foreign "atg_clamp_max_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_min = foreign "atg_clamp_min" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_clamp_min_ =
    foreign "atg_clamp_min_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_clamp_min_out =
    foreign "atg_clamp_min_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_clamp_min_tensor =
    foreign "atg_clamp_min_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_min_tensor_ =
    foreign "atg_clamp_min_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_clamp_min_tensor_out =
    foreign "atg_clamp_min_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_out =
    foreign "atg_clamp_out" (ptr t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clamp_tensor =
    foreign "atg_clamp_tensor" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_tensor_ =
    foreign "atg_clamp_tensor_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clamp_tensor_out =
    foreign "atg_clamp_tensor_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_clip =
    foreign "atg_clip" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clip_ =
    foreign "atg_clip_" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clip_out =
    foreign "atg_clip_out" (ptr t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_clip_tensor =
    foreign "atg_clip_tensor" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clip_tensor_ =
    foreign "atg_clip_tensor_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_clip_tensor_out =
    foreign "atg_clip_tensor_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_clone = foreign "atg_clone" (ptr t @-> t @-> returning void)
  let stubs_clone_out = foreign "atg_clone_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_coalesce = foreign "atg_coalesce" (ptr t @-> t @-> returning void)

  let stubs_col2im =
    foreign
      "atg_col2im"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col2im_out =
    foreign
      "atg_col2im_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_col_indices = foreign "atg_col_indices" (ptr t @-> t @-> returning void)

  let stubs_col_indices_copy =
    foreign "atg_col_indices_copy" (ptr t @-> t @-> returning void)

  let stubs_col_indices_copy_out =
    foreign "atg_col_indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_column_stack =
    foreign "atg_column_stack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_column_stack_out =
    foreign "atg_column_stack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_combinations =
    foreign "atg_combinations" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_complex = foreign "atg_complex" (ptr t @-> t @-> t @-> returning void)

  let stubs_complex_out =
    foreign "atg_complex_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_concat =
    foreign "atg_concat" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_concat_out =
    foreign "atg_concat_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_concatenate =
    foreign "atg_concatenate" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_concatenate_out =
    foreign
      "atg_concatenate_out"
      (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_conj = foreign "atg_conj" (ptr t @-> t @-> returning void)
  let stubs_conj_physical = foreign "atg_conj_physical" (ptr t @-> t @-> returning void)
  let stubs_conj_physical_ = foreign "atg_conj_physical_" (ptr t @-> t @-> returning void)

  let stubs_conj_physical_out =
    foreign "atg_conj_physical_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_constant_pad_nd =
    foreign "atg_constant_pad_nd" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_constant_pad_nd_out =
    foreign
      "atg_constant_pad_nd_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_contiguous = foreign "atg_contiguous" (ptr t @-> t @-> returning void)

  let stubs_conv1d =
    foreign
      "atg_conv1d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv1d_padding =
    foreign
      "atg_conv1d_padding"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv2d =
    foreign
      "atg_conv2d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv2d_padding =
    foreign
      "atg_conv2d_padding"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv3d =
    foreign
      "atg_conv3d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv3d_padding =
    foreign
      "atg_conv3d_padding"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_conv_depthwise3d =
    foreign
      "atg_conv_depthwise3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_depthwise3d_out =
    foreign
      "atg_conv_depthwise3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_tbc =
    foreign "atg_conv_tbc" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_conv_tbc_backward =
    foreign
      "atg_conv_tbc_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_conv_tbc_out =
    foreign
      "atg_conv_tbc_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_conv_transpose1d =
    foreign
      "atg_conv_transpose1d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_transpose2d =
    foreign
      "atg_conv_transpose2d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_conv_transpose3d =
    foreign
      "atg_conv_transpose3d"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_convolution =
    foreign
      "atg_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_convolution_out =
    foreign
      "atg_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_convolution_overrideable =
    foreign
      "atg_convolution_overrideable"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_convolution_overrideable_out =
    foreign
      "atg_convolution_overrideable_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_copy = foreign "atg_copy" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_copy_out =
    foreign "atg_copy_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_copy_sparse_to_sparse =
    foreign "atg_copy_sparse_to_sparse" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_copy_sparse_to_sparse_ =
    foreign "atg_copy_sparse_to_sparse_" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_copy_sparse_to_sparse_out =
    foreign
      "atg_copy_sparse_to_sparse_out"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_copysign = foreign "atg_copysign" (ptr t @-> t @-> t @-> returning void)
  let stubs_copysign_ = foreign "atg_copysign_" (ptr t @-> t @-> t @-> returning void)

  let stubs_copysign_out =
    foreign "atg_copysign_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_copysign_scalar =
    foreign "atg_copysign_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_copysign_scalar_ =
    foreign "atg_copysign_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_copysign_scalar_out =
    foreign "atg_copysign_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_corrcoef = foreign "atg_corrcoef" (ptr t @-> t @-> returning void)
  let stubs_cos = foreign "atg_cos" (ptr t @-> t @-> returning void)
  let stubs_cos_ = foreign "atg_cos_" (ptr t @-> t @-> returning void)
  let stubs_cos_out = foreign "atg_cos_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_cosh = foreign "atg_cosh" (ptr t @-> t @-> returning void)
  let stubs_cosh_ = foreign "atg_cosh_" (ptr t @-> t @-> returning void)
  let stubs_cosh_out = foreign "atg_cosh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_cosine_embedding_loss =
    foreign
      "atg_cosine_embedding_loss"
      (ptr t @-> t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_cosine_similarity =
    foreign
      "atg_cosine_similarity"
      (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_count_nonzero =
    foreign
      "atg_count_nonzero"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_count_nonzero_out =
    foreign
      "atg_count_nonzero_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cov =
    foreign "atg_cov" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_cross =
    foreign "atg_cross" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cross_entropy_loss =
    foreign
      "atg_cross_entropy_loss"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> double @-> returning void)

  let stubs_cross_out =
    foreign
      "atg_cross_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_crow_indices = foreign "atg_crow_indices" (ptr t @-> t @-> returning void)

  let stubs_crow_indices_copy =
    foreign "atg_crow_indices_copy" (ptr t @-> t @-> returning void)

  let stubs_crow_indices_copy_out =
    foreign "atg_crow_indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_ctc_loss =
    foreign
      "atg_ctc_loss"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_ctc_loss_tensor =
    foreign
      "atg_ctc_loss_tensor"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_cudnn_affine_grid_generator =
    foreign
      "atg_cudnn_affine_grid_generator"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_cudnn_affine_grid_generator_backward =
    foreign
      "atg_cudnn_affine_grid_generator_backward"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_cudnn_affine_grid_generator_backward_out =
    foreign
      "atg_cudnn_affine_grid_generator_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_affine_grid_generator_out =
    foreign
      "atg_cudnn_affine_grid_generator_out"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_batch_norm =
    foreign
      "atg_cudnn_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_cudnn_batch_norm_backward =
    foreign
      "atg_cudnn_batch_norm_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> t @-> returning void)

  let stubs_cudnn_batch_norm_backward_out =
    foreign
      "atg_cudnn_batch_norm_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> t
      @-> returning void)

  let stubs_cudnn_batch_norm_out =
    foreign
      "atg_cudnn_batch_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_cudnn_convolution =
    foreign
      "atg_cudnn_convolution"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_add_relu =
    foreign
      "atg_cudnn_convolution_add_relu"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)
end

module C8 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_cudnn_convolution_add_relu_out =
    foreign
      "atg_cudnn_convolution_add_relu_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_convolution_out =
    foreign
      "atg_cudnn_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_relu =
    foreign
      "atg_cudnn_convolution_relu"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_convolution_relu_out =
    foreign
      "atg_cudnn_convolution_relu_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_cudnn_convolution_transpose =
    foreign
      "atg_cudnn_convolution_transpose"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_convolution_transpose_out =
    foreign
      "atg_cudnn_convolution_transpose_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_cudnn_grid_sampler =
    foreign "atg_cudnn_grid_sampler" (ptr t @-> t @-> t @-> returning void)

  let stubs_cudnn_grid_sampler_backward =
    foreign "atg_cudnn_grid_sampler_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_cudnn_grid_sampler_backward_out =
    foreign
      "atg_cudnn_grid_sampler_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_cudnn_grid_sampler_out =
    foreign "atg_cudnn_grid_sampler_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_cummax = foreign "atg_cummax" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cummax_out =
    foreign "atg_cummax_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cummaxmin_backward =
    foreign
      "atg_cummaxmin_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cummin = foreign "atg_cummin" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cummin_out =
    foreign "atg_cummin_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_cumprod =
    foreign "atg_cumprod" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumprod_ =
    foreign "atg_cumprod_" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumprod_backward =
    foreign "atg_cumprod_backward" (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_cumprod_out =
    foreign "atg_cumprod_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum =
    foreign "atg_cumsum" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum_ =
    foreign "atg_cumsum_" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumsum_out =
    foreign "atg_cumsum_out" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_cumulative_trapezoid =
    foreign "atg_cumulative_trapezoid" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_cumulative_trapezoid_x =
    foreign "atg_cumulative_trapezoid_x" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_data = foreign "atg_data" (ptr t @-> t @-> returning void)
  let stubs_deg2rad = foreign "atg_deg2rad" (ptr t @-> t @-> returning void)
  let stubs_deg2rad_ = foreign "atg_deg2rad_" (ptr t @-> t @-> returning void)
  let stubs_deg2rad_out = foreign "atg_deg2rad_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_dequantize = foreign "atg_dequantize" (ptr t @-> t @-> returning void)

  let stubs_dequantize_self_out =
    foreign "atg_dequantize_self_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_dequantize_tensors =
    foreign "atg_dequantize_tensors" (ptr t @-> int @-> returning (ptr t))

  let stubs_dequantize_tensors_out =
    foreign
      "atg_dequantize_tensors_out"
      (ptr t @-> int @-> ptr t @-> int @-> returning void)

  let stubs_det = foreign "atg_det" (ptr t @-> t @-> returning void)
  let stubs_detach = foreign "atg_detach" (ptr t @-> t @-> returning void)
  let stubs_detach_ = foreign "atg_detach_" (ptr t @-> t @-> returning void)
  let stubs_detach_copy = foreign "atg_detach_copy" (ptr t @-> t @-> returning void)

  let stubs_detach_copy_out =
    foreign "atg_detach_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_diag = foreign "atg_diag" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_diag_embed =
    foreign
      "atg_diag_embed"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diag_embed_out =
    foreign
      "atg_diag_embed_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diag_out =
    foreign "atg_diag_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_diagflat = foreign "atg_diagflat" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_diagonal =
    foreign
      "atg_diagonal"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diagonal_backward =
    foreign
      "atg_diagonal_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_diagonal_backward_out =
    foreign
      "atg_diagonal_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_diagonal_copy =
    foreign
      "atg_diagonal_copy"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diagonal_copy_out =
    foreign
      "atg_diagonal_copy_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diagonal_scatter =
    foreign
      "atg_diagonal_scatter"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diagonal_scatter_out =
    foreign
      "atg_diagonal_scatter_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_diff =
    foreign "atg_diff" (ptr t @-> t @-> int64_t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_diff_out =
    foreign
      "atg_diff_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_digamma = foreign "atg_digamma" (ptr t @-> t @-> returning void)
  let stubs_digamma_ = foreign "atg_digamma_" (ptr t @-> t @-> returning void)
  let stubs_digamma_out = foreign "atg_digamma_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_dist = foreign "atg_dist" (ptr t @-> t @-> t @-> returning void)
  let stubs_dist_out = foreign "atg_dist_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_div = foreign "atg_div" (ptr t @-> t @-> t @-> returning void)
  let stubs_div_ = foreign "atg_div_" (ptr t @-> t @-> t @-> returning void)
  let stubs_div_out = foreign "atg_div_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_div_out_mode =
    foreign "atg_div_out_mode" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_div_scalar =
    foreign "atg_div_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_div_scalar_ =
    foreign "atg_div_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_div_scalar_mode =
    foreign "atg_div_scalar_mode" (ptr t @-> t @-> scalar @-> string @-> returning void)

  let stubs_div_scalar_mode_ =
    foreign "atg_div_scalar_mode_" (ptr t @-> t @-> scalar @-> string @-> returning void)

  let stubs_div_scalar_mode_out =
    foreign
      "atg_div_scalar_mode_out"
      (ptr t @-> t @-> t @-> scalar @-> string @-> returning void)

  let stubs_div_scalar_out =
    foreign "atg_div_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_div_tensor_mode =
    foreign "atg_div_tensor_mode" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_div_tensor_mode_ =
    foreign "atg_div_tensor_mode_" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_divide = foreign "atg_divide" (ptr t @-> t @-> t @-> returning void)
  let stubs_divide_ = foreign "atg_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_divide_out =
    foreign "atg_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_divide_out_mode =
    foreign "atg_divide_out_mode" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_divide_scalar =
    foreign "atg_divide_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_divide_scalar_ =
    foreign "atg_divide_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_divide_scalar_mode =
    foreign "atg_divide_scalar_mode" (ptr t @-> t @-> scalar @-> string @-> returning void)

  let stubs_divide_scalar_mode_ =
    foreign
      "atg_divide_scalar_mode_"
      (ptr t @-> t @-> scalar @-> string @-> returning void)

  let stubs_divide_tensor_mode =
    foreign "atg_divide_tensor_mode" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_divide_tensor_mode_ =
    foreign "atg_divide_tensor_mode_" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_dot = foreign "atg_dot" (ptr t @-> t @-> t @-> returning void)
  let stubs_dot_out = foreign "atg_dot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_dropout =
    foreign "atg_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_dropout_ =
    foreign "atg_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_dsplit = foreign "atg_dsplit" (t @-> int64_t @-> returning (ptr t))

  let stubs_dsplit_array =
    foreign "atg_dsplit_array" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_dstack = foreign "atg_dstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_dstack_out =
    foreign "atg_dstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_einsum =
    foreign
      "atg_einsum"
      (ptr t @-> string @-> ptr t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_elu = foreign "atg_elu" (ptr t @-> t @-> returning void)
  let stubs_elu_ = foreign "atg_elu_" (ptr t @-> t @-> returning void)

  let stubs_elu_backward =
    foreign
      "atg_elu_backward"
      (ptr t @-> t @-> scalar @-> scalar @-> scalar @-> int @-> t @-> returning void)

  let stubs_elu_backward_grad_input =
    foreign
      "atg_elu_backward_grad_input"
      (ptr t @-> t @-> t @-> scalar @-> scalar @-> scalar @-> int @-> t @-> returning void)

  let stubs_elu_out = foreign "atg_elu_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_embedding =
    foreign
      "atg_embedding"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_embedding_backward =
    foreign
      "atg_embedding_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_embedding_bag =
    foreign
      "atg_embedding_bag"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> returning void)

  let stubs_embedding_bag_padding_idx =
    foreign
      "atg_embedding_bag_padding_idx"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_embedding_dense_backward =
    foreign
      "atg_embedding_dense_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_embedding_dense_backward_out =
    foreign
      "atg_embedding_dense_backward_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_embedding_out =
    foreign
      "atg_embedding_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_embedding_renorm =
    foreign
      "atg_embedding_renorm"
      (ptr t @-> t @-> t @-> double @-> double @-> returning void)
end

module C9 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_embedding_renorm_ =
    foreign
      "atg_embedding_renorm_"
      (ptr t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_embedding_renorm_out =
    foreign
      "atg_embedding_renorm_out"
      (ptr t @-> t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_embedding_sparse_backward =
    foreign
      "atg_embedding_sparse_backward"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_empty =
    foreign "atg_empty" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_empty_like = foreign "atg_empty_like" (ptr t @-> t @-> returning void)

  let stubs_empty_like_out =
    foreign "atg_empty_like_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_empty_out =
    foreign "atg_empty_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_empty_quantized =
    foreign
      "atg_empty_quantized"
      (ptr t @-> ptr int64_t @-> int @-> t @-> int @-> int @-> returning void)

  let stubs_empty_quantized_out =
    foreign
      "atg_empty_quantized_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> returning void)

  let stubs_empty_strided =
    foreign
      "atg_empty_strided"
      (ptr t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_empty_strided_out =
    foreign
      "atg_empty_strided_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_eq = foreign "atg_eq" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_eq_ = foreign "atg_eq_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_eq_scalar_out =
    foreign "atg_eq_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_eq_tensor = foreign "atg_eq_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_eq_tensor_ = foreign "atg_eq_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_eq_tensor_out =
    foreign "atg_eq_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_erf = foreign "atg_erf" (ptr t @-> t @-> returning void)
  let stubs_erf_ = foreign "atg_erf_" (ptr t @-> t @-> returning void)
  let stubs_erf_out = foreign "atg_erf_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_erfc = foreign "atg_erfc" (ptr t @-> t @-> returning void)
  let stubs_erfc_ = foreign "atg_erfc_" (ptr t @-> t @-> returning void)
  let stubs_erfc_out = foreign "atg_erfc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_erfinv = foreign "atg_erfinv" (ptr t @-> t @-> returning void)
  let stubs_erfinv_ = foreign "atg_erfinv_" (ptr t @-> t @-> returning void)
  let stubs_erfinv_out = foreign "atg_erfinv_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_exp = foreign "atg_exp" (ptr t @-> t @-> returning void)
  let stubs_exp2 = foreign "atg_exp2" (ptr t @-> t @-> returning void)
  let stubs_exp2_ = foreign "atg_exp2_" (ptr t @-> t @-> returning void)
  let stubs_exp2_out = foreign "atg_exp2_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_exp_ = foreign "atg_exp_" (ptr t @-> t @-> returning void)
  let stubs_exp_out = foreign "atg_exp_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_expand =
    foreign "atg_expand" (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_expand_as = foreign "atg_expand_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_expand_copy =
    foreign
      "atg_expand_copy"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_expand_copy_out =
    foreign
      "atg_expand_copy_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_expm1 = foreign "atg_expm1" (ptr t @-> t @-> returning void)
  let stubs_expm1_ = foreign "atg_expm1_" (ptr t @-> t @-> returning void)
  let stubs_expm1_out = foreign "atg_expm1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_exponential =
    foreign "atg_exponential" (ptr t @-> t @-> double @-> returning void)

  let stubs_exponential_ =
    foreign "atg_exponential_" (ptr t @-> t @-> double @-> returning void)

  let stubs_exponential_out =
    foreign "atg_exponential_out" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_eye = foreign "atg_eye" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_eye_m =
    foreign "atg_eye_m" (ptr t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_eye_m_out =
    foreign "atg_eye_m_out" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_eye_out = foreign "atg_eye_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine =
    foreign
      "atg_fake_quantize_per_channel_affine"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine_cachemask =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_channel_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_fake_quantize_per_channel_affine_cachemask_out =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_fake_quantize_per_tensor_affine =
    foreign
      "atg_fake_quantize_per_tensor_affine"
      (ptr t @-> t @-> double @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_cachemask =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask"
      (ptr t @-> t @-> double @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_cachemask_out =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_fake_quantize_per_tensor_affine_tensor_qparams =
    foreign
      "atg_fake_quantize_per_tensor_affine_tensor_qparams"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_fbgemm_linear_fp16_weight =
    foreign "atg_fbgemm_linear_fp16_weight" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_fbgemm_linear_fp16_weight_fp32_activation =
    foreign
      "atg_fbgemm_linear_fp16_weight_fp32_activation"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_fbgemm_linear_int8_weight =
    foreign
      "atg_fbgemm_linear_int8_weight"
      (ptr t @-> t @-> t @-> t @-> t @-> scalar @-> scalar @-> t @-> returning void)

  let stubs_fbgemm_linear_int8_weight_fp32_activation =
    foreign
      "atg_fbgemm_linear_int8_weight_fp32_activation"
      (ptr t @-> t @-> t @-> t @-> t @-> scalar @-> scalar @-> t @-> returning void)

  let stubs_fbgemm_pack_gemm_matrix_fp16 =
    foreign "atg_fbgemm_pack_gemm_matrix_fp16" (ptr t @-> t @-> returning void)

  let stubs_fbgemm_pack_quantized_matrix =
    foreign "atg_fbgemm_pack_quantized_matrix" (ptr t @-> t @-> returning void)

  let stubs_fbgemm_pack_quantized_matrix_kn =
    foreign
      "atg_fbgemm_pack_quantized_matrix_kn"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_feature_alpha_dropout =
    foreign "atg_feature_alpha_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_alpha_dropout_ =
    foreign
      "atg_feature_alpha_dropout_"
      (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_dropout =
    foreign "atg_feature_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_feature_dropout_ =
    foreign "atg_feature_dropout_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_fft_fft =
    foreign
      "atg_fft_fft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_fft2 =
    foreign
      "atg_fft_fft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fft2_out =
    foreign
      "atg_fft_fft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fft_out =
    foreign
      "atg_fft_fft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_fftfreq =
    foreign
      "atg_fft_fftfreq"
      (ptr t @-> int64_t @-> double @-> int @-> int @-> returning void)

  let stubs_fft_fftfreq_out =
    foreign "atg_fft_fftfreq_out" (ptr t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_fft_fftn =
    foreign
      "atg_fft_fftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fftn_out =
    foreign
      "atg_fft_fftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_fftshift =
    foreign "atg_fft_fftshift" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fft_hfft =
    foreign
      "atg_fft_hfft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_hfft2 =
    foreign
      "atg_fft_hfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_hfft2_out =
    foreign
      "atg_fft_hfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_hfft_out =
    foreign
      "atg_fft_hfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_hfftn =
    foreign
      "atg_fft_hfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_hfftn_out =
    foreign
      "atg_fft_hfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifft =
    foreign
      "atg_fft_ifft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_ifft2 =
    foreign
      "atg_fft_ifft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifft2_out =
    foreign
      "atg_fft_ifft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifft_out =
    foreign
      "atg_fft_ifft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_ifftn =
    foreign
      "atg_fft_ifftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifftn_out =
    foreign
      "atg_fft_ifftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ifftshift =
    foreign "atg_fft_ifftshift" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fft_ihfft =
    foreign
      "atg_fft_ihfft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_ihfft2 =
    foreign
      "atg_fft_ihfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ihfft2_out =
    foreign
      "atg_fft_ihfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ihfft_out =
    foreign
      "atg_fft_ihfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_ihfftn =
    foreign
      "atg_fft_ihfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_ihfftn_out =
    foreign
      "atg_fft_ihfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfft =
    foreign
      "atg_fft_irfft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_irfft2 =
    foreign
      "atg_fft_irfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfft2_out =
    foreign
      "atg_fft_irfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfft_out =
    foreign
      "atg_fft_irfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_irfftn =
    foreign
      "atg_fft_irfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_irfftn_out =
    foreign
      "atg_fft_irfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)
end

module C10 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_fft_rfft =
    foreign
      "atg_fft_rfft"
      (ptr t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_rfft2 =
    foreign
      "atg_fft_rfft2"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfft2_out =
    foreign
      "atg_fft_rfft2_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfft_out =
    foreign
      "atg_fft_rfft_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> string @-> returning void)

  let stubs_fft_rfftfreq =
    foreign
      "atg_fft_rfftfreq"
      (ptr t @-> int64_t @-> double @-> int @-> int @-> returning void)

  let stubs_fft_rfftfreq_out =
    foreign "atg_fft_rfftfreq_out" (ptr t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_fft_rfftn =
    foreign
      "atg_fft_rfftn"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fft_rfftn_out =
    foreign
      "atg_fft_rfftn_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> string
      @-> returning void)

  let stubs_fill = foreign "atg_fill" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_fill_ = foreign "atg_fill_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_fill_diagonal_ =
    foreign "atg_fill_diagonal_" (ptr t @-> t @-> scalar @-> int @-> returning void)

  let stubs_fill_scalar_out =
    foreign "atg_fill_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_fill_tensor = foreign "atg_fill_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_fill_tensor_ =
    foreign "atg_fill_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_fill_tensor_out =
    foreign "atg_fill_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_fix = foreign "atg_fix" (ptr t @-> t @-> returning void)
  let stubs_fix_ = foreign "atg_fix_" (ptr t @-> t @-> returning void)
  let stubs_fix_out = foreign "atg_fix_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_flatten =
    foreign "atg_flatten" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_flatten_dense_tensors =
    foreign "atg_flatten_dense_tensors" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_flip =
    foreign "atg_flip" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_flip_out =
    foreign "atg_flip_out" (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_fliplr = foreign "atg_fliplr" (ptr t @-> t @-> returning void)
  let stubs_flipud = foreign "atg_flipud" (ptr t @-> t @-> returning void)
  let stubs_float_power = foreign "atg_float_power" (ptr t @-> t @-> t @-> returning void)

  let stubs_float_power_ =
    foreign "atg_float_power_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_float_power_scalar =
    foreign "atg_float_power_scalar" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_float_power_scalar_out =
    foreign "atg_float_power_scalar_out" (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_float_power_tensor_ =
    foreign "atg_float_power_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_float_power_tensor_scalar =
    foreign "atg_float_power_tensor_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_float_power_tensor_scalar_out =
    foreign
      "atg_float_power_tensor_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_float_power_tensor_tensor_out =
    foreign
      "atg_float_power_tensor_tensor_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_floor = foreign "atg_floor" (ptr t @-> t @-> returning void)
  let stubs_floor_ = foreign "atg_floor_" (ptr t @-> t @-> returning void)

  let stubs_floor_divide =
    foreign "atg_floor_divide" (ptr t @-> t @-> t @-> returning void)

  let stubs_floor_divide_ =
    foreign "atg_floor_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_floor_divide_out =
    foreign "atg_floor_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_floor_divide_scalar =
    foreign "atg_floor_divide_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_floor_divide_scalar_ =
    foreign "atg_floor_divide_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_floor_out = foreign "atg_floor_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmax = foreign "atg_fmax" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmax_out = foreign "atg_fmax_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_fmin = foreign "atg_fmin" (ptr t @-> t @-> t @-> returning void)
  let stubs_fmin_out = foreign "atg_fmin_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_fmod = foreign "atg_fmod" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_fmod_ = foreign "atg_fmod_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_fmod_scalar_out =
    foreign "atg_fmod_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_fmod_tensor = foreign "atg_fmod_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_fmod_tensor_ =
    foreign "atg_fmod_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_fmod_tensor_out =
    foreign "atg_fmod_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_frac = foreign "atg_frac" (ptr t @-> t @-> returning void)
  let stubs_frac_ = foreign "atg_frac_" (ptr t @-> t @-> returning void)
  let stubs_frac_out = foreign "atg_frac_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_fractional_max_pool2d =
    foreign
      "atg_fractional_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_backward =
    foreign
      "atg_fractional_max_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_backward_grad_input =
    foreign
      "atg_fractional_max_pool2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool2d_output =
    foreign
      "atg_fractional_max_pool2d_output"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d =
    foreign
      "atg_fractional_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_backward =
    foreign
      "atg_fractional_max_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_backward_grad_input =
    foreign
      "atg_fractional_max_pool3d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_fractional_max_pool3d_output =
    foreign
      "atg_fractional_max_pool3d_output"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_frexp = foreign "atg_frexp" (ptr t @-> t @-> returning void)

  let stubs_frexp_tensor_out =
    foreign "atg_frexp_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_frobenius_norm =
    foreign
      "atg_frobenius_norm"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_frobenius_norm_out =
    foreign
      "atg_frobenius_norm_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_from_file =
    foreign
      "atg_from_file"
      (ptr t @-> string @-> int @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_from_file_out =
    foreign
      "atg_from_file_out"
      (ptr t @-> t @-> string @-> int @-> int64_t @-> int @-> returning void)

  let stubs_full =
    foreign
      "atg_full"
      (ptr t @-> ptr int64_t @-> int @-> scalar @-> int @-> int @-> returning void)

  let stubs_full_like = foreign "atg_full_like" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_full_like_out =
    foreign "atg_full_like_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_full_out =
    foreign
      "atg_full_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> scalar @-> returning void)

  let stubs_fused_moving_avg_obs_fake_quant =
    foreign
      "atg_fused_moving_avg_obs_fake_quant"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_gather =
    foreign "atg_gather" (ptr t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gather_backward =
    foreign
      "atg_gather_backward"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gather_out =
    foreign
      "atg_gather_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> int @-> returning void)

  let stubs_gcd = foreign "atg_gcd" (ptr t @-> t @-> t @-> returning void)
  let stubs_gcd_ = foreign "atg_gcd_" (ptr t @-> t @-> t @-> returning void)
  let stubs_gcd_out = foreign "atg_gcd_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_ge = foreign "atg_ge" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_ge_ = foreign "atg_ge_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_ge_scalar_out =
    foreign "atg_ge_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_ge_tensor = foreign "atg_ge_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_ge_tensor_ = foreign "atg_ge_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_ge_tensor_out =
    foreign "atg_ge_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_gelu = foreign "atg_gelu" (ptr t @-> t @-> string @-> returning void)
  let stubs_gelu_ = foreign "atg_gelu_" (ptr t @-> t @-> string @-> returning void)

  let stubs_gelu_backward =
    foreign "atg_gelu_backward" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_gelu_backward_grad_input =
    foreign
      "atg_gelu_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_gelu_out =
    foreign "atg_gelu_out" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_geometric = foreign "atg_geometric" (ptr t @-> t @-> double @-> returning void)

  let stubs_geometric_ =
    foreign "atg_geometric_" (ptr t @-> t @-> double @-> returning void)

  let stubs_geometric_out =
    foreign "atg_geometric_out" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_geqrf = foreign "atg_geqrf" (ptr t @-> t @-> returning void)
  let stubs_geqrf_a = foreign "atg_geqrf_a" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_ger = foreign "atg_ger" (ptr t @-> t @-> t @-> returning void)
  let stubs_ger_out = foreign "atg_ger_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_glu = foreign "atg_glu" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_glu_backward =
    foreign "atg_glu_backward" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_backward_grad_input =
    foreign
      "atg_glu_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_backward_jvp =
    foreign
      "atg_glu_backward_jvp"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)
end

module C11 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_glu_backward_jvp_out =
    foreign
      "atg_glu_backward_jvp_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_jvp =
    foreign "atg_glu_jvp" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_jvp_out =
    foreign
      "atg_glu_jvp_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_glu_out =
    foreign "atg_glu_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_grad = foreign "atg_grad" (ptr t @-> t @-> returning void)
  let stubs_greater = foreign "atg_greater" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_greater_ = foreign "atg_greater_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_greater_equal =
    foreign "atg_greater_equal" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_greater_equal_ =
    foreign "atg_greater_equal_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_greater_equal_scalar_out =
    foreign
      "atg_greater_equal_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_greater_equal_tensor =
    foreign "atg_greater_equal_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_equal_tensor_ =
    foreign "atg_greater_equal_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_equal_tensor_out =
    foreign "atg_greater_equal_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_greater_scalar_out =
    foreign "atg_greater_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_greater_tensor =
    foreign "atg_greater_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_tensor_ =
    foreign "atg_greater_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_greater_tensor_out =
    foreign "atg_greater_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_grid_sampler =
    foreign
      "atg_grid_sampler"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_2d =
    foreign
      "atg_grid_sampler_2d"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_2d_out =
    foreign
      "atg_grid_sampler_2d_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_3d =
    foreign
      "atg_grid_sampler_3d"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_grid_sampler_3d_out =
    foreign
      "atg_grid_sampler_3d_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_group_norm =
    foreign
      "atg_group_norm"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_gru =
    foreign
      "atg_gru"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_gru_cell =
    foreign "atg_gru_cell" (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_gru_data =
    foreign
      "atg_gru_data"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_gt = foreign "atg_gt" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_gt_ = foreign "atg_gt_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_gt_scalar_out =
    foreign "atg_gt_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_gt_tensor = foreign "atg_gt_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_gt_tensor_ = foreign "atg_gt_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_gt_tensor_out =
    foreign "atg_gt_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hamming_window =
    foreign "atg_hamming_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_hamming_window_out =
    foreign "atg_hamming_window_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_hamming_window_periodic =
    foreign
      "atg_hamming_window_periodic"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_hamming_window_periodic_alpha =
    foreign
      "atg_hamming_window_periodic_alpha"
      (ptr t @-> int64_t @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_hamming_window_periodic_alpha_beta =
    foreign
      "atg_hamming_window_periodic_alpha_beta"
      (ptr t @-> int64_t @-> int @-> double @-> double @-> int @-> int @-> returning void)

  let stubs_hamming_window_periodic_alpha_beta_out =
    foreign
      "atg_hamming_window_periodic_alpha_beta_out"
      (ptr t @-> t @-> int64_t @-> int @-> double @-> double @-> returning void)

  let stubs_hamming_window_periodic_alpha_out =
    foreign
      "atg_hamming_window_periodic_alpha_out"
      (ptr t @-> t @-> int64_t @-> int @-> double @-> returning void)

  let stubs_hamming_window_periodic_out =
    foreign
      "atg_hamming_window_periodic_out"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_hann_window =
    foreign "atg_hann_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_hann_window_out =
    foreign "atg_hann_window_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_hann_window_periodic =
    foreign
      "atg_hann_window_periodic"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_hann_window_periodic_out =
    foreign
      "atg_hann_window_periodic_out"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_hardshrink = foreign "atg_hardshrink" (ptr t @-> t @-> returning void)

  let stubs_hardshrink_backward =
    foreign "atg_hardshrink_backward" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_hardshrink_backward_grad_input =
    foreign
      "atg_hardshrink_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> returning void)

  let stubs_hardshrink_out =
    foreign "atg_hardshrink_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardsigmoid = foreign "atg_hardsigmoid" (ptr t @-> t @-> returning void)
  let stubs_hardsigmoid_ = foreign "atg_hardsigmoid_" (ptr t @-> t @-> returning void)

  let stubs_hardsigmoid_backward =
    foreign "atg_hardsigmoid_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardsigmoid_backward_grad_input =
    foreign
      "atg_hardsigmoid_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hardsigmoid_out =
    foreign "atg_hardsigmoid_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardswish = foreign "atg_hardswish" (ptr t @-> t @-> returning void)
  let stubs_hardswish_ = foreign "atg_hardswish_" (ptr t @-> t @-> returning void)

  let stubs_hardswish_backward =
    foreign "atg_hardswish_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardswish_backward_out =
    foreign "atg_hardswish_backward_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hardswish_out =
    foreign "atg_hardswish_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_hardtanh = foreign "atg_hardtanh" (ptr t @-> t @-> returning void)
  let stubs_hardtanh_ = foreign "atg_hardtanh_" (ptr t @-> t @-> returning void)

  let stubs_hardtanh_backward =
    foreign
      "atg_hardtanh_backward"
      (ptr t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_hardtanh_backward_grad_input =
    foreign
      "atg_hardtanh_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_hardtanh_out =
    foreign "atg_hardtanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_heaviside = foreign "atg_heaviside" (ptr t @-> t @-> t @-> returning void)
  let stubs_heaviside_ = foreign "atg_heaviside_" (ptr t @-> t @-> t @-> returning void)

  let stubs_heaviside_out =
    foreign "atg_heaviside_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hinge_embedding_loss =
    foreign
      "atg_hinge_embedding_loss"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_histc = foreign "atg_histc" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_histc_out =
    foreign "atg_histc_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_hsplit = foreign "atg_hsplit" (t @-> int64_t @-> returning (ptr t))

  let stubs_hsplit_array =
    foreign "atg_hsplit_array" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_hspmm = foreign "atg_hspmm" (ptr t @-> t @-> t @-> returning void)

  let stubs_hspmm_out =
    foreign "atg_hspmm_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_hstack = foreign "atg_hstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_hstack_out =
    foreign "atg_hstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_huber_loss =
    foreign "atg_huber_loss" (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_backward =
    foreign
      "atg_huber_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_backward_out =
    foreign
      "atg_huber_loss_backward_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_huber_loss_out =
    foreign
      "atg_huber_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_hypot = foreign "atg_hypot" (ptr t @-> t @-> t @-> returning void)
  let stubs_hypot_ = foreign "atg_hypot_" (ptr t @-> t @-> t @-> returning void)

  let stubs_hypot_out =
    foreign "atg_hypot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_i0 = foreign "atg_i0" (ptr t @-> t @-> returning void)
  let stubs_i0_ = foreign "atg_i0_" (ptr t @-> t @-> returning void)
  let stubs_i0_out = foreign "atg_i0_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_igamma = foreign "atg_igamma" (ptr t @-> t @-> t @-> returning void)
  let stubs_igamma_ = foreign "atg_igamma_" (ptr t @-> t @-> t @-> returning void)

  let stubs_igamma_out =
    foreign "atg_igamma_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_igammac = foreign "atg_igammac" (ptr t @-> t @-> t @-> returning void)
  let stubs_igammac_ = foreign "atg_igammac_" (ptr t @-> t @-> t @-> returning void)

  let stubs_igammac_out =
    foreign "atg_igammac_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_im2col =
    foreign
      "atg_im2col"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_im2col_out =
    foreign
      "atg_im2col_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_imag = foreign "atg_imag" (ptr t @-> t @-> returning void)
  let stubs_index = foreign "atg_index" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_index_add =
    foreign "atg_index_add" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_add_ =
    foreign "atg_index_add_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_add_out =
    foreign
      "atg_index_add_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_copy =
    foreign "atg_index_copy" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_copy_ =
    foreign "atg_index_copy_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)
end

module C12 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_index_copy_out =
    foreign
      "atg_index_copy_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_fill =
    foreign "atg_index_fill" (ptr t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_index_fill_ =
    foreign "atg_index_fill_" (ptr t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_index_fill_int_scalar_out =
    foreign
      "atg_index_fill_int_scalar_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_index_fill_int_tensor =
    foreign
      "atg_index_fill_int_tensor"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_fill_int_tensor_ =
    foreign
      "atg_index_fill_int_tensor_"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_fill_int_tensor_out =
    foreign
      "atg_index_fill_int_tensor_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_index_put =
    foreign
      "atg_index_put"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs_index_put_ =
    foreign
      "atg_index_put_"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs_index_put_out =
    foreign
      "atg_index_put_out"
      (ptr t @-> t @-> t @-> ptr t @-> int @-> t @-> int @-> returning void)

  let stubs_index_reduce =
    foreign
      "atg_index_reduce"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs_index_reduce_ =
    foreign
      "atg_index_reduce_"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs_index_reduce_out =
    foreign
      "atg_index_reduce_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> string @-> int @-> returning void)

  let stubs_index_select =
    foreign "atg_index_select" (ptr t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_index_select_backward =
    foreign
      "atg_index_select_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> t @-> returning void)

  let stubs_index_select_out =
    foreign "atg_index_select_out" (ptr t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_index_tensor_out =
    foreign "atg_index_tensor_out" (ptr t @-> t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_indices = foreign "atg_indices" (ptr t @-> t @-> returning void)
  let stubs_indices_copy = foreign "atg_indices_copy" (ptr t @-> t @-> returning void)

  let stubs_indices_copy_out =
    foreign "atg_indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_infinitely_differentiable_gelu_backward =
    foreign
      "atg_infinitely_differentiable_gelu_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_inner = foreign "atg_inner" (ptr t @-> t @-> t @-> returning void)

  let stubs_inner_out =
    foreign "atg_inner_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_instance_norm =
    foreign
      "atg_instance_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> int
      @-> returning void)

  let stubs_int_repr = foreign "atg_int_repr" (ptr t @-> t @-> returning void)

  let stubs_int_repr_out =
    foreign "atg_int_repr_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_inverse = foreign "atg_inverse" (ptr t @-> t @-> returning void)
  let stubs_inverse_out = foreign "atg_inverse_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isclose =
    foreign
      "atg_isclose"
      (ptr t @-> t @-> t @-> double @-> double @-> int @-> returning void)

  let stubs_isfinite = foreign "atg_isfinite" (ptr t @-> t @-> returning void)

  let stubs_isin =
    foreign "atg_isin" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_isin_scalar_tensor =
    foreign
      "atg_isin_scalar_tensor"
      (ptr t @-> scalar @-> t @-> int @-> int @-> returning void)

  let stubs_isin_scalar_tensor_out =
    foreign
      "atg_isin_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> int @-> int @-> returning void)

  let stubs_isin_tensor_scalar =
    foreign
      "atg_isin_tensor_scalar"
      (ptr t @-> t @-> scalar @-> int @-> int @-> returning void)

  let stubs_isin_tensor_scalar_out =
    foreign
      "atg_isin_tensor_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> int @-> int @-> returning void)

  let stubs_isin_tensor_tensor_out =
    foreign
      "atg_isin_tensor_tensor_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_isinf = foreign "atg_isinf" (ptr t @-> t @-> returning void)
  let stubs_isinf_out = foreign "atg_isinf_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_isnan = foreign "atg_isnan" (ptr t @-> t @-> returning void)
  let stubs_isnan_out = foreign "atg_isnan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_isneginf = foreign "atg_isneginf" (ptr t @-> t @-> returning void)

  let stubs_isneginf_out =
    foreign "atg_isneginf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isposinf = foreign "atg_isposinf" (ptr t @-> t @-> returning void)

  let stubs_isposinf_out =
    foreign "atg_isposinf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_isreal = foreign "atg_isreal" (ptr t @-> t @-> returning void)

  let stubs_istft =
    foreign
      "atg_istft"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_kaiser_window =
    foreign "atg_kaiser_window" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_kaiser_window_beta =
    foreign
      "atg_kaiser_window_beta"
      (ptr t @-> int64_t @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_kaiser_window_beta_out =
    foreign
      "atg_kaiser_window_beta_out"
      (ptr t @-> t @-> int64_t @-> int @-> double @-> returning void)

  let stubs_kaiser_window_out =
    foreign "atg_kaiser_window_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_kaiser_window_periodic =
    foreign
      "atg_kaiser_window_periodic"
      (ptr t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_kaiser_window_periodic_out =
    foreign
      "atg_kaiser_window_periodic_out"
      (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_kl_div =
    foreign "atg_kl_div" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_kron = foreign "atg_kron" (ptr t @-> t @-> t @-> returning void)
  let stubs_kron_out = foreign "atg_kron_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_kthvalue =
    foreign "atg_kthvalue" (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_kthvalue_values =
    foreign
      "atg_kthvalue_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_l1_loss =
    foreign "atg_l1_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_layer_norm =
    foreign
      "atg_layer_norm"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> double
      @-> int
      @-> returning void)

  let stubs_lcm = foreign "atg_lcm" (ptr t @-> t @-> t @-> returning void)
  let stubs_lcm_ = foreign "atg_lcm_" (ptr t @-> t @-> t @-> returning void)
  let stubs_lcm_out = foreign "atg_lcm_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_ldexp = foreign "atg_ldexp" (ptr t @-> t @-> t @-> returning void)
  let stubs_ldexp_ = foreign "atg_ldexp_" (ptr t @-> t @-> t @-> returning void)

  let stubs_ldexp_out =
    foreign "atg_ldexp_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_le = foreign "atg_le" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_le_ = foreign "atg_le_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_le_scalar_out =
    foreign "atg_le_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_le_tensor = foreign "atg_le_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_le_tensor_ = foreign "atg_le_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_le_tensor_out =
    foreign "atg_le_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_leaky_relu = foreign "atg_leaky_relu" (ptr t @-> t @-> returning void)
  let stubs_leaky_relu_ = foreign "atg_leaky_relu_" (ptr t @-> t @-> returning void)

  let stubs_leaky_relu_backward =
    foreign
      "atg_leaky_relu_backward"
      (ptr t @-> t @-> t @-> scalar @-> int @-> returning void)

  let stubs_leaky_relu_backward_grad_input =
    foreign
      "atg_leaky_relu_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> int @-> returning void)

  let stubs_leaky_relu_out =
    foreign "atg_leaky_relu_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_lerp = foreign "atg_lerp" (ptr t @-> t @-> t @-> scalar @-> returning void)
  let stubs_lerp_ = foreign "atg_lerp_" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_lerp_scalar_out =
    foreign "atg_lerp_scalar_out" (ptr t @-> t @-> t @-> t @-> scalar @-> returning void)

  let stubs_lerp_tensor =
    foreign "atg_lerp_tensor" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lerp_tensor_ =
    foreign "atg_lerp_tensor_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lerp_tensor_out =
    foreign "atg_lerp_tensor_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_less = foreign "atg_less" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_less_ = foreign "atg_less_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_less_equal =
    foreign "atg_less_equal" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_less_equal_ =
    foreign "atg_less_equal_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_less_equal_scalar_out =
    foreign "atg_less_equal_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_less_equal_tensor =
    foreign "atg_less_equal_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_less_equal_tensor_ =
    foreign "atg_less_equal_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_less_equal_tensor_out =
    foreign "atg_less_equal_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_less_scalar_out =
    foreign "atg_less_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_less_tensor = foreign "atg_less_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_less_tensor_ =
    foreign "atg_less_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_less_tensor_out =
    foreign "atg_less_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lgamma = foreign "atg_lgamma" (ptr t @-> t @-> returning void)
  let stubs_lgamma_ = foreign "atg_lgamma_" (ptr t @-> t @-> returning void)
  let stubs_lgamma_out = foreign "atg_lgamma_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_lift = foreign "atg_lift" (ptr t @-> t @-> returning void)
  let stubs_lift_fresh = foreign "atg_lift_fresh" (ptr t @-> t @-> returning void)

  let stubs_lift_fresh_copy =
    foreign "atg_lift_fresh_copy" (ptr t @-> t @-> returning void)
end

module C13 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_lift_fresh_copy_out =
    foreign "atg_lift_fresh_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_lift_out = foreign "atg_lift_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_cholesky =
    foreign "atg_linalg_cholesky" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_cholesky_ex =
    foreign "atg_linalg_cholesky_ex" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_cholesky_ex_l =
    foreign
      "atg_linalg_cholesky_ex_l"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_cholesky_out =
    foreign "atg_linalg_cholesky_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_cond =
    foreign "atg_linalg_cond" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_linalg_cond_out =
    foreign "atg_linalg_cond_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_linalg_cond_p_str =
    foreign "atg_linalg_cond_p_str" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_cond_p_str_out =
    foreign "atg_linalg_cond_p_str_out" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_cross =
    foreign "atg_linalg_cross" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_cross_out =
    foreign "atg_linalg_cross_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_det = foreign "atg_linalg_det" (ptr t @-> t @-> returning void)

  let stubs_linalg_det_out =
    foreign "atg_linalg_det_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_diagonal =
    foreign
      "atg_linalg_diagonal"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_linalg_eig = foreign "atg_linalg_eig" (ptr t @-> t @-> returning void)

  let stubs_linalg_eig_out =
    foreign "atg_linalg_eig_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_eigh =
    foreign "atg_linalg_eigh" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_eigh_eigvals =
    foreign
      "atg_linalg_eigh_eigvals"
      (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_eigvals = foreign "atg_linalg_eigvals" (ptr t @-> t @-> returning void)

  let stubs_linalg_eigvals_out =
    foreign "atg_linalg_eigvals_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_eigvalsh =
    foreign "atg_linalg_eigvalsh" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_eigvalsh_out =
    foreign "atg_linalg_eigvalsh_out" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_householder_product =
    foreign "atg_linalg_householder_product" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_householder_product_out =
    foreign
      "atg_linalg_householder_product_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_inv = foreign "atg_linalg_inv" (ptr t @-> t @-> returning void)

  let stubs_linalg_inv_ex =
    foreign "atg_linalg_inv_ex" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_inv_ex_inverse =
    foreign
      "atg_linalg_inv_ex_inverse"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_inv_out =
    foreign "atg_linalg_inv_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_ldl_factor =
    foreign "atg_linalg_ldl_factor" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_ldl_factor_ex =
    foreign "atg_linalg_ldl_factor_ex" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_ldl_factor_ex_out =
    foreign
      "atg_linalg_ldl_factor_ex_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_ldl_factor_out =
    foreign
      "atg_linalg_ldl_factor_out"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_ldl_solve =
    foreign "atg_linalg_ldl_solve" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_ldl_solve_out =
    foreign
      "atg_linalg_ldl_solve_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_lstsq =
    foreign
      "atg_linalg_lstsq"
      (ptr t @-> t @-> t @-> double @-> int @-> string @-> returning void)

  let stubs_linalg_lstsq_out =
    foreign
      "atg_linalg_lstsq_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> int
      @-> string
      @-> returning void)

  let stubs_linalg_lu = foreign "atg_linalg_lu" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_lu_factor =
    foreign "atg_linalg_lu_factor" (ptr t @-> t @-> int @-> returning void)

  let stubs_linalg_lu_factor_ex =
    foreign "atg_linalg_lu_factor_ex" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_lu_factor_ex_out =
    foreign
      "atg_linalg_lu_factor_ex_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_lu_factor_out =
    foreign "atg_linalg_lu_factor_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_lu_out =
    foreign "atg_linalg_lu_out" (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_lu_solve =
    foreign
      "atg_linalg_lu_solve"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_lu_solve_out =
    foreign
      "atg_linalg_lu_solve_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_matmul =
    foreign "atg_linalg_matmul" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_matmul_out =
    foreign "atg_linalg_matmul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_matrix_exp =
    foreign "atg_linalg_matrix_exp" (ptr t @-> t @-> returning void)

  let stubs_linalg_matrix_exp_out =
    foreign "atg_linalg_matrix_exp_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_linalg_matrix_power =
    foreign "atg_linalg_matrix_power" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_matrix_power_out =
    foreign
      "atg_linalg_matrix_power_out"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_matrix_rank =
    foreign "atg_linalg_matrix_rank" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_matrix_rank_atol_rtol_float =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_float"
      (ptr t @-> t @-> double @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_linalg_matrix_rank_atol_rtol_float_out =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_float_out"
      (ptr t @-> t @-> t @-> double @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_linalg_matrix_rank_atol_rtol_tensor =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_matrix_rank_atol_rtol_tensor_out =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_tensor_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_matrix_rank_out =
    foreign
      "atg_linalg_matrix_rank_out"
      (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_matrix_rank_out_tol_tensor =
    foreign
      "atg_linalg_matrix_rank_out_tol_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_matrix_rank_tol_tensor =
    foreign
      "atg_linalg_matrix_rank_tol_tensor"
      (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_multi_dot =
    foreign "atg_linalg_multi_dot" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_linalg_multi_dot_out =
    foreign "atg_linalg_multi_dot_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_linalg_pinv =
    foreign "atg_linalg_pinv" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_pinv_atol_rtol_float =
    foreign
      "atg_linalg_pinv_atol_rtol_float"
      (ptr t @-> t @-> double @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_linalg_pinv_atol_rtol_float_out =
    foreign
      "atg_linalg_pinv_atol_rtol_float_out"
      (ptr t @-> t @-> t @-> double @-> int @-> double @-> int @-> int @-> returning void)

  let stubs_linalg_pinv_atol_rtol_tensor =
    foreign
      "atg_linalg_pinv_atol_rtol_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_pinv_atol_rtol_tensor_out =
    foreign
      "atg_linalg_pinv_atol_rtol_tensor_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_pinv_out =
    foreign "atg_linalg_pinv_out" (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_linalg_pinv_out_rcond_tensor =
    foreign
      "atg_linalg_pinv_out_rcond_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_pinv_rcond_tensor =
    foreign "atg_linalg_pinv_rcond_tensor" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_qr = foreign "atg_linalg_qr" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_qr_out =
    foreign "atg_linalg_qr_out" (ptr t @-> t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_slogdet = foreign "atg_linalg_slogdet" (ptr t @-> t @-> returning void)

  let stubs_linalg_slogdet_out =
    foreign "atg_linalg_slogdet_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linalg_solve =
    foreign "atg_linalg_solve" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_solve_ex =
    foreign "atg_linalg_solve_ex" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_solve_ex_out =
    foreign
      "atg_linalg_solve_ex_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_linalg_solve_out =
    foreign "atg_linalg_solve_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_linalg_solve_triangular =
    foreign
      "atg_linalg_solve_triangular"
      (ptr t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_linalg_solve_triangular_out =
    foreign
      "atg_linalg_solve_triangular_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_linalg_svd =
    foreign "atg_linalg_svd" (ptr t @-> t @-> int @-> string @-> returning void)

  let stubs_linalg_svd_u =
    foreign
      "atg_linalg_svd_u"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> string @-> returning void)

  let stubs_linalg_svdvals =
    foreign "atg_linalg_svdvals" (ptr t @-> t @-> string @-> returning void)

  let stubs_linalg_svdvals_out =
    foreign "atg_linalg_svdvals_out" (ptr t @-> t @-> t @-> string @-> returning void)

  let stubs_linalg_tensorinv =
    foreign "atg_linalg_tensorinv" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_tensorinv_out =
    foreign "atg_linalg_tensorinv_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_tensorsolve =
    foreign
      "atg_linalg_tensorsolve"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_linalg_tensorsolve_out =
    foreign
      "atg_linalg_tensorsolve_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_linalg_vander =
    foreign "atg_linalg_vander" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_linalg_vecdot =
    foreign "atg_linalg_vecdot" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linalg_vecdot_out =
    foreign
      "atg_linalg_vecdot_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_linear = foreign "atg_linear" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_linear_out =
    foreign "atg_linear_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_linspace =
    foreign
      "atg_linspace"
      (ptr t @-> scalar @-> scalar @-> int64_t @-> int @-> int @-> returning void)

  let stubs_linspace_out =
    foreign
      "atg_linspace_out"
      (ptr t @-> t @-> scalar @-> scalar @-> int64_t @-> returning void)

  let stubs_log = foreign "atg_log" (ptr t @-> t @-> returning void)
  let stubs_log10 = foreign "atg_log10" (ptr t @-> t @-> returning void)
  let stubs_log10_ = foreign "atg_log10_" (ptr t @-> t @-> returning void)
  let stubs_log10_out = foreign "atg_log10_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log1p = foreign "atg_log1p" (ptr t @-> t @-> returning void)
  let stubs_log1p_ = foreign "atg_log1p_" (ptr t @-> t @-> returning void)
end

module C14 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_log1p_out = foreign "atg_log1p_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log2 = foreign "atg_log2" (ptr t @-> t @-> returning void)
  let stubs_log2_ = foreign "atg_log2_" (ptr t @-> t @-> returning void)
  let stubs_log2_out = foreign "atg_log2_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log_ = foreign "atg_log_" (ptr t @-> t @-> returning void)

  let stubs_log_normal =
    foreign "atg_log_normal" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_log_normal_ =
    foreign "atg_log_normal_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_log_normal_out =
    foreign
      "atg_log_normal_out"
      (ptr t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_log_out = foreign "atg_log_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_log_sigmoid = foreign "atg_log_sigmoid" (ptr t @-> t @-> returning void)

  let stubs_log_sigmoid_backward =
    foreign "atg_log_sigmoid_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_log_sigmoid_backward_grad_input =
    foreign
      "atg_log_sigmoid_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_log_sigmoid_out =
    foreign "atg_log_sigmoid_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_log_softmax =
    foreign "atg_log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_log_softmax_int_out =
    foreign
      "atg_log_softmax_int_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_logaddexp = foreign "atg_logaddexp" (ptr t @-> t @-> t @-> returning void)
  let stubs_logaddexp2 = foreign "atg_logaddexp2" (ptr t @-> t @-> t @-> returning void)

  let stubs_logaddexp2_out =
    foreign "atg_logaddexp2_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logaddexp_out =
    foreign "atg_logaddexp_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logcumsumexp =
    foreign "atg_logcumsumexp" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_logcumsumexp_out =
    foreign "atg_logcumsumexp_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_logdet = foreign "atg_logdet" (ptr t @-> t @-> returning void)
  let stubs_logical_and = foreign "atg_logical_and" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_and_ =
    foreign "atg_logical_and_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_and_out =
    foreign "atg_logical_and_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logical_not = foreign "atg_logical_not" (ptr t @-> t @-> returning void)
  let stubs_logical_not_ = foreign "atg_logical_not_" (ptr t @-> t @-> returning void)

  let stubs_logical_not_out =
    foreign "atg_logical_not_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_or = foreign "atg_logical_or" (ptr t @-> t @-> t @-> returning void)
  let stubs_logical_or_ = foreign "atg_logical_or_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_or_out =
    foreign "atg_logical_or_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logical_xor = foreign "atg_logical_xor" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_xor_ =
    foreign "atg_logical_xor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_logical_xor_out =
    foreign "atg_logical_xor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_logit = foreign "atg_logit" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_logit_ =
    foreign "atg_logit_" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_logit_backward =
    foreign "atg_logit_backward" (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_logit_backward_grad_input =
    foreign
      "atg_logit_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_logit_out =
    foreign "atg_logit_out" (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_logspace =
    foreign
      "atg_logspace"
      (ptr t
      @-> scalar
      @-> scalar
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_logspace_out =
    foreign
      "atg_logspace_out"
      (ptr t @-> t @-> scalar @-> scalar @-> int64_t @-> double @-> returning void)

  let stubs_logsumexp =
    foreign
      "atg_logsumexp"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_logsumexp_out =
    foreign
      "atg_logsumexp_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_lstm =
    foreign
      "atg_lstm"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_lstm_cell =
    foreign
      "atg_lstm_cell"
      (ptr t @-> t @-> ptr t @-> int @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_lstm_data =
    foreign
      "atg_lstm_data"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_lstm_mps_backward =
    foreign
      "atg_lstm_mps_backward"
      (t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_lt = foreign "atg_lt" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_lt_ = foreign "atg_lt_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_lt_scalar_out =
    foreign "atg_lt_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_lt_tensor = foreign "atg_lt_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_lt_tensor_ = foreign "atg_lt_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_lt_tensor_out =
    foreign "atg_lt_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lu_solve = foreign "atg_lu_solve" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_lu_solve_out =
    foreign "atg_lu_solve_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_lu_unpack =
    foreign "atg_lu_unpack" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_lu_unpack_out =
    foreign
      "atg_lu_unpack_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_margin_ranking_loss =
    foreign
      "atg_margin_ranking_loss"
      (ptr t @-> t @-> t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_masked_fill =
    foreign "atg_masked_fill" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_masked_fill_ =
    foreign "atg_masked_fill_" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_masked_fill_scalar_out =
    foreign
      "atg_masked_fill_scalar_out"
      (ptr t @-> t @-> t @-> t @-> scalar @-> returning void)

  let stubs_masked_fill_tensor =
    foreign "atg_masked_fill_tensor" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_fill_tensor_ =
    foreign "atg_masked_fill_tensor_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_fill_tensor_out =
    foreign "atg_masked_fill_tensor_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_scatter =
    foreign "atg_masked_scatter" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_scatter_ =
    foreign "atg_masked_scatter_" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_scatter_out =
    foreign "atg_masked_scatter_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_select =
    foreign "atg_masked_select" (ptr t @-> t @-> t @-> returning void)

  let stubs_masked_select_backward =
    foreign "atg_masked_select_backward" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_masked_select_out =
    foreign "atg_masked_select_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_matmul = foreign "atg_matmul" (ptr t @-> t @-> t @-> returning void)

  let stubs_matmul_out =
    foreign "atg_matmul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_matrix_exp = foreign "atg_matrix_exp" (ptr t @-> t @-> returning void)

  let stubs_matrix_exp_backward =
    foreign "atg_matrix_exp_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_matrix_h = foreign "atg_matrix_h" (ptr t @-> t @-> returning void)

  let stubs_matrix_power =
    foreign "atg_matrix_power" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_matrix_power_out =
    foreign "atg_matrix_power_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_max = foreign "atg_max" (ptr t @-> t @-> returning void)

  let stubs_max_dim =
    foreign "atg_max_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_max_dim_max =
    foreign
      "atg_max_dim_max"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_max_other = foreign "atg_max_other" (ptr t @-> t @-> t @-> returning void)
  let stubs_max_out = foreign "atg_max_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_max_pool1d =
    foreign
      "atg_max_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool1d_with_indices =
    foreign
      "atg_max_pool1d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d =
    foreign
      "atg_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_backward =
    foreign
      "atg_max_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_backward_out =
    foreign
      "atg_max_pool2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_with_indices =
    foreign
      "atg_max_pool2d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool2d_with_indices_backward =
    foreign
      "atg_max_pool2d_with_indices_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool2d_with_indices_backward_grad_input =
    foreign
      "atg_max_pool2d_with_indices_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool2d_with_indices_out =
    foreign
      "atg_max_pool2d_with_indices_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d =
    foreign
      "atg_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d_with_indices =
    foreign
      "atg_max_pool3d_with_indices"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_pool3d_with_indices_backward =
    foreign
      "atg_max_pool3d_with_indices_backward"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool3d_with_indices_backward_grad_input =
    foreign
      "atg_max_pool3d_with_indices_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_max_pool3d_with_indices_out =
    foreign
      "atg_max_pool3d_with_indices_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_max_unary_out =
    foreign "atg_max_unary_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_max_unpool2d =
    foreign
      "atg_max_unpool2d"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool2d_out =
    foreign
      "atg_max_unpool2d_out"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_max_unpool3d =
    foreign
      "atg_max_unpool3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)
end

module C15 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_max_unpool3d_out =
    foreign
      "atg_max_unpool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_maximum = foreign "atg_maximum" (ptr t @-> t @-> t @-> returning void)

  let stubs_maximum_out =
    foreign "atg_maximum_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mean = foreign "atg_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_mean_dim =
    foreign
      "atg_mean_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_mean_out =
    foreign
      "atg_mean_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_median = foreign "atg_median" (ptr t @-> t @-> returning void)

  let stubs_median_dim =
    foreign "atg_median_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_median_dim_values =
    foreign
      "atg_median_dim_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_median_out = foreign "atg_median_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_meshgrid = foreign "atg_meshgrid" (ptr t @-> int @-> returning (ptr t))

  let stubs_meshgrid_indexing =
    foreign "atg_meshgrid_indexing" (ptr t @-> int @-> string @-> returning (ptr t))

  let stubs_mh = foreign "atg_mh" (ptr t @-> t @-> returning void)
  let stubs_min = foreign "atg_min" (ptr t @-> t @-> returning void)

  let stubs_min_dim =
    foreign "atg_min_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_min_dim_min =
    foreign
      "atg_min_dim_min"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_min_other = foreign "atg_min_other" (ptr t @-> t @-> t @-> returning void)
  let stubs_min_out = foreign "atg_min_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_minimum = foreign "atg_minimum" (ptr t @-> t @-> t @-> returning void)

  let stubs_minimum_out =
    foreign "atg_minimum_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_miopen_batch_norm =
    foreign
      "atg_miopen_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_miopen_batch_norm_backward =
    foreign
      "atg_miopen_batch_norm_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_miopen_batch_norm_backward_out =
    foreign
      "atg_miopen_batch_norm_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> returning void)

  let stubs_miopen_batch_norm_out =
    foreign
      "atg_miopen_batch_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_miopen_convolution =
    foreign
      "atg_miopen_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_add_relu =
    foreign
      "atg_miopen_convolution_add_relu"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_miopen_convolution_out =
    foreign
      "atg_miopen_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_relu =
    foreign
      "atg_miopen_convolution_relu"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_miopen_convolution_transpose =
    foreign
      "atg_miopen_convolution_transpose"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_convolution_transpose_out =
    foreign
      "atg_miopen_convolution_transpose_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_depthwise_convolution =
    foreign
      "atg_miopen_depthwise_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_depthwise_convolution_out =
    foreign
      "atg_miopen_depthwise_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_miopen_rnn =
    foreign
      "atg_miopen_rnn"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_miopen_rnn_out =
    foreign
      "atg_miopen_rnn_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int64_t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> double
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> t
      @-> returning void)

  let stubs_mish = foreign "atg_mish" (ptr t @-> t @-> returning void)
  let stubs_mish_ = foreign "atg_mish_" (ptr t @-> t @-> returning void)

  let stubs_mish_backward =
    foreign "atg_mish_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_mish_out = foreign "atg_mish_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d_backward =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_backward"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d_backward_out =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_backward_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mkldnn_adaptive_avg_pool2d_out =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_mkldnn_convolution =
    foreign
      "atg_mkldnn_convolution"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_convolution_out =
    foreign
      "atg_mkldnn_convolution_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_linear =
    foreign "atg_mkldnn_linear" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mkldnn_linear_backward_input =
    foreign
      "atg_mkldnn_linear_backward_input"
      (ptr t @-> ptr int64_t @-> int @-> t @-> t @-> returning void)

  let stubs_mkldnn_linear_backward_input_out =
    foreign
      "atg_mkldnn_linear_backward_input_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> t @-> returning void)

  let stubs_mkldnn_linear_backward_weights =
    foreign
      "atg_mkldnn_linear_backward_weights"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_mkldnn_linear_backward_weights_out =
    foreign
      "atg_mkldnn_linear_backward_weights_out"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_mkldnn_linear_out =
    foreign "atg_mkldnn_linear_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_mkldnn_max_pool2d =
    foreign
      "atg_mkldnn_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool2d_backward =
    foreign
      "atg_mkldnn_max_pool2d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool2d_backward_out =
    foreign
      "atg_mkldnn_max_pool2d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool2d_out =
    foreign
      "atg_mkldnn_max_pool2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d =
    foreign
      "atg_mkldnn_max_pool3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d_backward =
    foreign
      "atg_mkldnn_max_pool3d_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d_backward_out =
    foreign
      "atg_mkldnn_max_pool3d_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_max_pool3d_out =
    foreign
      "atg_mkldnn_max_pool3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_reorder_conv2d_weight =
    foreign
      "atg_mkldnn_reorder_conv2d_weight"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_mkldnn_reorder_conv2d_weight_out =
    foreign
      "atg_mkldnn_reorder_conv2d_weight_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_mkldnn_reorder_conv3d_weight =
    foreign
      "atg_mkldnn_reorder_conv3d_weight"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_reorder_conv3d_weight_out =
    foreign
      "atg_mkldnn_reorder_conv3d_weight_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_mkldnn_rnn_layer =
    foreign
      "atg_mkldnn_rnn_layer"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_mkldnn_rnn_layer_backward =
    foreign
      "atg_mkldnn_rnn_layer_backward"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_mkldnn_rnn_layer_backward_out =
    foreign
      "atg_mkldnn_rnn_layer_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> t
      @-> returning void)

  let stubs_mkldnn_rnn_layer_out =
    foreign
      "atg_mkldnn_rnn_layer_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_mm = foreign "atg_mm" (ptr t @-> t @-> t @-> returning void)
  let stubs_mm_out = foreign "atg_mm_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_mode = foreign "atg_mode" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_mode_values =
    foreign
      "atg_mode_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_moveaxis =
    foreign
      "atg_moveaxis"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_moveaxis_int =
    foreign "atg_moveaxis_int" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_movedim =
    foreign
      "atg_movedim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_movedim_int =
    foreign "atg_movedim_int" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_mse_loss =
    foreign "atg_mse_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_backward =
    foreign
      "atg_mse_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_backward_grad_input =
    foreign
      "atg_mse_loss_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_mse_loss_out =
    foreign "atg_mse_loss_out" (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_msort = foreign "atg_msort" (ptr t @-> t @-> returning void)
  let stubs_msort_out = foreign "atg_msort_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_mt = foreign "atg_mt" (ptr t @-> t @-> returning void)
  let stubs_mul = foreign "atg_mul" (ptr t @-> t @-> t @-> returning void)
  let stubs_mul_ = foreign "atg_mul_" (ptr t @-> t @-> t @-> returning void)
  let stubs_mul_out = foreign "atg_mul_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_mul_scalar =
    foreign "atg_mul_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_mul_scalar_ =
    foreign "atg_mul_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_mul_scalar_out =
    foreign "atg_mul_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_multi_margin_loss_backward =
    foreign
      "atg_multi_margin_loss_backward"
      (ptr t @-> t @-> t @-> t @-> scalar @-> scalar @-> t @-> int64_t @-> returning void)

  let stubs_multi_margin_loss_backward_grad_input =
    foreign
      "atg_multi_margin_loss_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> t
      @-> int64_t
      @-> returning void)

  let stubs_multilabel_margin_loss =
    foreign "atg_multilabel_margin_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_multilabel_margin_loss_backward =
    foreign
      "atg_multilabel_margin_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_multilabel_margin_loss_backward_grad_input =
    foreign
      "atg_multilabel_margin_loss_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_multilabel_margin_loss_out =
    foreign
      "atg_multilabel_margin_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_multinomial =
    foreign "atg_multinomial" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_multinomial_out =
    foreign
      "atg_multinomial_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_multiply = foreign "atg_multiply" (ptr t @-> t @-> t @-> returning void)
  let stubs_multiply_ = foreign "atg_multiply_" (ptr t @-> t @-> t @-> returning void)

  let stubs_multiply_out =
    foreign "atg_multiply_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_multiply_scalar =
    foreign "atg_multiply_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_multiply_scalar_ =
    foreign "atg_multiply_scalar_" (ptr t @-> t @-> scalar @-> returning void)
end

module C16 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void
  let stubs_mv = foreign "atg_mv" (ptr t @-> t @-> t @-> returning void)
  let stubs_mv_out = foreign "atg_mv_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_mvlgamma = foreign "atg_mvlgamma" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_mvlgamma_ =
    foreign "atg_mvlgamma_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_mvlgamma_out =
    foreign "atg_mvlgamma_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_nan_to_num =
    foreign
      "atg_nan_to_num"
      (ptr t
      @-> t
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_nan_to_num_ =
    foreign
      "atg_nan_to_num_"
      (ptr t
      @-> t
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_nan_to_num_out =
    foreign
      "atg_nan_to_num_out"
      (ptr t
      @-> t
      @-> t
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_nanmean =
    foreign
      "atg_nanmean"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_nanmean_out =
    foreign
      "atg_nanmean_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_nanmedian = foreign "atg_nanmedian" (ptr t @-> t @-> returning void)

  let stubs_nanmedian_dim =
    foreign "atg_nanmedian_dim" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanmedian_dim_values =
    foreign
      "atg_nanmedian_dim_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_nanmedian_out =
    foreign "atg_nanmedian_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_nanquantile =
    foreign
      "atg_nanquantile"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_nanquantile_out =
    foreign
      "atg_nanquantile_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_nanquantile_scalar =
    foreign
      "atg_nanquantile_scalar"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_nanquantile_scalar_out =
    foreign
      "atg_nanquantile_scalar_out"
      (ptr t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int
      @-> int
      @-> string
      @-> returning void)

  let stubs_nansum =
    foreign
      "atg_nansum"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_nansum_out =
    foreign
      "atg_nansum_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_narrow =
    foreign
      "atg_narrow"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_narrow_copy =
    foreign
      "atg_narrow_copy"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_narrow_copy_out =
    foreign
      "atg_narrow_copy_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_narrow_tensor =
    foreign
      "atg_narrow_tensor"
      (ptr t @-> t @-> int64_t @-> t @-> int64_t @-> returning void)

  let stubs_native_batch_norm =
    foreign
      "atg_native_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_native_batch_norm_out =
    foreign
      "atg_native_batch_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> double
      @-> double
      @-> returning void)

  let stubs_native_channel_shuffle =
    foreign "atg_native_channel_shuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_native_dropout =
    foreign "atg_native_dropout" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_native_dropout_backward =
    foreign "atg_native_dropout_backward" (ptr t @-> t @-> t @-> double @-> returning void)

  let stubs_native_dropout_backward_out =
    foreign
      "atg_native_dropout_backward_out"
      (ptr t @-> t @-> t @-> t @-> double @-> returning void)

  let stubs_native_dropout_out =
    foreign
      "atg_native_dropout_out"
      (ptr t @-> t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_native_group_norm =
    foreign
      "atg_native_group_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs_native_group_norm_out =
    foreign
      "atg_native_group_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> double
      @-> returning void)

  let stubs_native_layer_norm =
    foreign
      "atg_native_layer_norm"
      (ptr t @-> t @-> ptr int64_t @-> int @-> t @-> t @-> double @-> returning void)

  let stubs_native_layer_norm_out =
    foreign
      "atg_native_layer_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> t
      @-> double
      @-> returning void)

  let stubs_native_norm = foreign "atg_native_norm" (ptr t @-> t @-> returning void)

  let stubs_native_norm_out =
    foreign "atg_native_norm_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_native_norm_scalaropt_dim_dtype =
    foreign
      "atg_native_norm_scalaropt_dim_dtype"
      (ptr t @-> t @-> scalar @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_native_norm_scalaropt_dim_dtype_out =
    foreign
      "atg_native_norm_scalaropt_dim_dtype_out"
      (ptr t
      @-> t
      @-> t
      @-> scalar
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_ne = foreign "atg_ne" (ptr t @-> t @-> scalar @-> returning void)
  let stubs_ne_ = foreign "atg_ne_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_ne_scalar_out =
    foreign "atg_ne_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_ne_tensor = foreign "atg_ne_tensor" (ptr t @-> t @-> t @-> returning void)
  let stubs_ne_tensor_ = foreign "atg_ne_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_ne_tensor_out =
    foreign "atg_ne_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_neg = foreign "atg_neg" (ptr t @-> t @-> returning void)
  let stubs_neg_ = foreign "atg_neg_" (ptr t @-> t @-> returning void)
  let stubs_neg_out = foreign "atg_neg_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_negative = foreign "atg_negative" (ptr t @-> t @-> returning void)
  let stubs_negative_ = foreign "atg_negative_" (ptr t @-> t @-> returning void)

  let stubs_negative_out =
    foreign "atg_negative_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_nested_to_padded_tensor =
    foreign
      "atg_nested_to_padded_tensor"
      (ptr t @-> t @-> double @-> ptr int64_t @-> int @-> returning void)

  let stubs_new_empty =
    foreign
      "atg_new_empty"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_new_empty_out =
    foreign
      "atg_new_empty_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_new_empty_strided =
    foreign
      "atg_new_empty_strided"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_new_empty_strided_out =
    foreign
      "atg_new_empty_strided_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_new_full =
    foreign
      "atg_new_full"
      (ptr t @-> t @-> ptr int64_t @-> int @-> scalar @-> int @-> int @-> returning void)

  let stubs_new_full_out =
    foreign
      "atg_new_full_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> scalar @-> returning void)

  let stubs_new_ones =
    foreign
      "atg_new_ones"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_new_ones_out =
    foreign
      "atg_new_ones_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_new_zeros =
    foreign
      "atg_new_zeros"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_new_zeros_out =
    foreign
      "atg_new_zeros_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_nextafter = foreign "atg_nextafter" (ptr t @-> t @-> t @-> returning void)
  let stubs_nextafter_ = foreign "atg_nextafter_" (ptr t @-> t @-> t @-> returning void)

  let stubs_nextafter_out =
    foreign "atg_nextafter_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_nll_loss =
    foreign
      "atg_nll_loss"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss2d =
    foreign
      "atg_nll_loss2d"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss2d_backward =
    foreign
      "atg_nll_loss2d_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> returning void)

  let stubs_nll_loss2d_backward_grad_input =
    foreign
      "atg_nll_loss2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> returning void)

  let stubs_nll_loss2d_out =
    foreign
      "atg_nll_loss2d_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss_backward =
    foreign
      "atg_nll_loss_backward"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> t @-> returning void)

  let stubs_nll_loss_backward_grad_input =
    foreign
      "atg_nll_loss_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> t
      @-> returning void)

  let stubs_nll_loss_nd =
    foreign
      "atg_nll_loss_nd"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nll_loss_out =
    foreign
      "atg_nll_loss_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_nonzero = foreign "atg_nonzero" (ptr t @-> t @-> returning void)
  let stubs_nonzero_numpy = foreign "atg_nonzero_numpy" (t @-> returning (ptr t))
  let stubs_nonzero_out = foreign "atg_nonzero_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_norm = foreign "atg_norm" (ptr t @-> t @-> returning void)

  let stubs_norm_dtype_out =
    foreign
      "atg_norm_dtype_out"
      (ptr t
      @-> t
      @-> t
      @-> scalar
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_norm_except_dim =
    foreign "atg_norm_except_dim" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_norm_out =
    foreign
      "atg_norm_out"
      (ptr t @-> t @-> t @-> scalar @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_norm_scalar_out =
    foreign "atg_norm_scalar_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_norm_scalaropt_dim =
    foreign
      "atg_norm_scalaropt_dim"
      (ptr t @-> t @-> scalar @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_norm_scalaropt_dim_dtype =
    foreign
      "atg_norm_scalaropt_dim_dtype"
      (ptr t @-> t @-> scalar @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_norm_scalaropt_dtype =
    foreign "atg_norm_scalaropt_dtype" (ptr t @-> t @-> scalar @-> int @-> returning void)

  let stubs_norm_scalaropt_dtype_out =
    foreign
      "atg_norm_scalaropt_dtype_out"
      (ptr t @-> t @-> t @-> scalar @-> int @-> returning void)

  let stubs_normal_ =
    foreign "atg_normal_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_normal_functional =
    foreign "atg_normal_functional" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_not_equal = foreign "atg_not_equal" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_not_equal_ =
    foreign "atg_not_equal_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_not_equal_scalar_out =
    foreign "atg_not_equal_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_not_equal_tensor =
    foreign "atg_not_equal_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_not_equal_tensor_ =
    foreign "atg_not_equal_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_not_equal_tensor_out =
    foreign "atg_not_equal_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_nuclear_norm =
    foreign "atg_nuclear_norm" (ptr t @-> t @-> int @-> returning void)

  let stubs_nuclear_norm_dim =
    foreign
      "atg_nuclear_norm_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_nuclear_norm_dim_out =
    foreign
      "atg_nuclear_norm_dim_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_nuclear_norm_out =
    foreign "atg_nuclear_norm_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_numpy_t = foreign "atg_numpy_t" (ptr t @-> t @-> returning void)
  let stubs_one_hot = foreign "atg_one_hot" (ptr t @-> t @-> int64_t @-> returning void)
end

module C17 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_ones =
    foreign "atg_ones" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_ones_like = foreign "atg_ones_like" (ptr t @-> t @-> returning void)

  let stubs_ones_like_out =
    foreign "atg_ones_like_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_ones_out =
    foreign "atg_ones_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_orgqr = foreign "atg_orgqr" (ptr t @-> t @-> t @-> returning void)

  let stubs_orgqr_out =
    foreign "atg_orgqr_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_ormqr =
    foreign "atg_ormqr" (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_ormqr_out =
    foreign
      "atg_ormqr_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_outer = foreign "atg_outer" (ptr t @-> t @-> t @-> returning void)

  let stubs_outer_out =
    foreign "atg_outer_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_pad =
    foreign
      "atg_pad"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> string
      @-> double
      @-> int
      @-> returning void)

  let stubs_pad_sequence =
    foreign
      "atg_pad_sequence"
      (ptr t @-> ptr t @-> int @-> int @-> double @-> returning void)

  let stubs_pairwise_distance =
    foreign
      "atg_pairwise_distance"
      (ptr t @-> t @-> t @-> double @-> double @-> int @-> returning void)

  let stubs_pdist = foreign "atg_pdist" (ptr t @-> t @-> double @-> returning void)

  let stubs_permute =
    foreign "atg_permute" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_permute_copy =
    foreign "atg_permute_copy" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_permute_copy_out =
    foreign
      "atg_permute_copy_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_pin_memory = foreign "atg_pin_memory" (ptr t @-> t @-> int @-> returning void)
  let stubs_pinverse = foreign "atg_pinverse" (ptr t @-> t @-> double @-> returning void)

  let stubs_pixel_shuffle =
    foreign "atg_pixel_shuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_pixel_shuffle_out =
    foreign "atg_pixel_shuffle_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_pixel_unshuffle =
    foreign "atg_pixel_unshuffle" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_pixel_unshuffle_out =
    foreign "atg_pixel_unshuffle_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_poisson = foreign "atg_poisson" (ptr t @-> t @-> returning void)

  let stubs_poisson_nll_loss =
    foreign
      "atg_poisson_nll_loss"
      (ptr t @-> t @-> t @-> int @-> int @-> double @-> int64_t @-> returning void)

  let stubs_poisson_out = foreign "atg_poisson_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_polar = foreign "atg_polar" (ptr t @-> t @-> t @-> returning void)

  let stubs_polar_out =
    foreign "atg_polar_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_polygamma =
    foreign "atg_polygamma" (ptr t @-> int64_t @-> t @-> returning void)

  let stubs_polygamma_ =
    foreign "atg_polygamma_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_polygamma_out =
    foreign "atg_polygamma_out" (ptr t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_positive = foreign "atg_positive" (ptr t @-> t @-> returning void)
  let stubs_pow = foreign "atg_pow" (ptr t @-> t @-> t @-> returning void)
  let stubs_pow_ = foreign "atg_pow_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_pow_scalar =
    foreign "atg_pow_scalar" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_pow_scalar_out =
    foreign "atg_pow_scalar_out" (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_pow_tensor_ = foreign "atg_pow_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_pow_tensor_scalar =
    foreign "atg_pow_tensor_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_pow_tensor_scalar_out =
    foreign "atg_pow_tensor_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_pow_tensor_tensor_out =
    foreign "atg_pow_tensor_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_prelu = foreign "atg_prelu" (ptr t @-> t @-> t @-> returning void)
  let stubs_prod = foreign "atg_prod" (ptr t @-> t @-> int @-> returning void)

  let stubs_prod_dim_int =
    foreign "atg_prod_dim_int" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_prod_int_out =
    foreign
      "atg_prod_int_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_prod_out =
    foreign "atg_prod_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_put = foreign "atg_put" (ptr t @-> t @-> t @-> t @-> int @-> returning void)
  let stubs_put_ = foreign "atg_put_" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_put_out =
    foreign "atg_put_out" (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_q_per_channel_scales =
    foreign "atg_q_per_channel_scales" (ptr t @-> t @-> returning void)

  let stubs_q_per_channel_scales_out =
    foreign "atg_q_per_channel_scales_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_q_per_channel_zero_points =
    foreign "atg_q_per_channel_zero_points" (ptr t @-> t @-> returning void)

  let stubs_q_per_channel_zero_points_out =
    foreign "atg_q_per_channel_zero_points_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_qr = foreign "atg_qr" (ptr t @-> t @-> int @-> returning void)
  let stubs_qr_q = foreign "atg_qr_q" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_quantile =
    foreign
      "atg_quantile"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_quantile_out =
    foreign
      "atg_quantile_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_quantile_scalar =
    foreign
      "atg_quantile_scalar"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> int @-> string @-> returning void)

  let stubs_quantile_scalar_out =
    foreign
      "atg_quantile_scalar_out"
      (ptr t
      @-> t
      @-> t
      @-> double
      @-> int64_t
      @-> int
      @-> int
      @-> string
      @-> returning void)

  let stubs_quantize_per_channel =
    foreign
      "atg_quantize_per_channel"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_channel_out =
    foreign
      "atg_quantize_per_channel_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_tensor =
    foreign
      "atg_quantize_per_tensor"
      (ptr t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_tensor_dynamic =
    foreign
      "atg_quantize_per_tensor_dynamic"
      (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_quantize_per_tensor_dynamic_out =
    foreign
      "atg_quantize_per_tensor_dynamic_out"
      (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_quantize_per_tensor_out =
    foreign
      "atg_quantize_per_tensor_out"
      (ptr t @-> t @-> t @-> double @-> int64_t @-> int @-> returning void)

  let stubs_quantize_per_tensor_tensor_qparams =
    foreign
      "atg_quantize_per_tensor_tensor_qparams"
      (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_quantize_per_tensor_tensor_qparams_out =
    foreign
      "atg_quantize_per_tensor_tensor_qparams_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_quantize_per_tensor_tensors =
    foreign
      "atg_quantize_per_tensor_tensors"
      (ptr t @-> int @-> t @-> t @-> int @-> returning (ptr t))

  let stubs_quantize_per_tensor_tensors_out =
    foreign
      "atg_quantize_per_tensor_tensors_out"
      (ptr t @-> int @-> ptr t @-> int @-> t @-> t @-> int @-> returning void)

  let stubs_quantized_batch_norm =
    foreign
      "atg_quantized_batch_norm"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_quantized_batch_norm_out =
    foreign
      "atg_quantized_batch_norm_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> int64_t
      @-> returning void)

  let stubs_quantized_gru_cell =
    foreign
      "atg_quantized_gru_cell"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> scalar
      @-> scalar
      @-> returning void)

  let stubs_quantized_lstm_cell =
    foreign
      "atg_quantized_lstm_cell"
      (ptr t
      @-> t
      @-> ptr t
      @-> int
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> scalar
      @-> scalar
      @-> returning void)

  let stubs_quantized_max_pool1d =
    foreign
      "atg_quantized_max_pool1d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_quantized_max_pool1d_out =
    foreign
      "atg_quantized_max_pool1d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_quantized_max_pool2d =
    foreign
      "atg_quantized_max_pool2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_quantized_max_pool2d_out =
    foreign
      "atg_quantized_max_pool2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_quantized_rnn_relu_cell =
    foreign
      "atg_quantized_rnn_relu_cell"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> scalar
      @-> scalar
      @-> returning void)

  let stubs_quantized_rnn_tanh_cell =
    foreign
      "atg_quantized_rnn_tanh_cell"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> scalar
      @-> scalar
      @-> returning void)

  let stubs_rad2deg = foreign "atg_rad2deg" (ptr t @-> t @-> returning void)
  let stubs_rad2deg_ = foreign "atg_rad2deg_" (ptr t @-> t @-> returning void)
  let stubs_rad2deg_out = foreign "atg_rad2deg_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_rand =
    foreign "atg_rand" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_rand_like = foreign "atg_rand_like" (ptr t @-> t @-> returning void)

  let stubs_rand_like_out =
    foreign "atg_rand_like_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_rand_out =
    foreign "atg_rand_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randint =
    foreign
      "atg_randint"
      (ptr t @-> int64_t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_randint_like =
    foreign "atg_randint_like" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_randint_like_low_dtype =
    foreign
      "atg_randint_like_low_dtype"
      (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_randint_like_low_dtype_out =
    foreign
      "atg_randint_like_low_dtype_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_randint_like_out =
    foreign "atg_randint_like_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_randint_low =
    foreign
      "atg_randint_low"
      (ptr t
      @-> int64_t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_randint_low_out =
    foreign
      "atg_randint_low_out"
      (ptr t @-> t @-> int64_t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randint_out =
    foreign
      "atg_randint_out"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_randn =
    foreign "atg_randn" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_randn_like = foreign "atg_randn_like" (ptr t @-> t @-> returning void)

  let stubs_randn_like_out =
    foreign "atg_randn_like_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_randn_out =
    foreign "atg_randn_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_random = foreign "atg_random" (ptr t @-> t @-> returning void)
  let stubs_random_ = foreign "atg_random_" (ptr t @-> t @-> returning void)

  let stubs_random_from =
    foreign
      "atg_random_from"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)
end

module C18 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_random_from_ =
    foreign
      "atg_random_from_"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_random_from_out =
    foreign
      "atg_random_from_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> returning void)

  let stubs_random_out = foreign "atg_random_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_random_to =
    foreign "atg_random_to" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_random_to_ =
    foreign "atg_random_to_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_random_to_out =
    foreign "atg_random_to_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_randperm =
    foreign "atg_randperm" (ptr t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_randperm_out =
    foreign "atg_randperm_out" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_range =
    foreign "atg_range" (ptr t @-> scalar @-> scalar @-> int @-> int @-> returning void)

  let stubs_range_out =
    foreign "atg_range_out" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_range_out_ =
    foreign "atg_range_out_" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_range_step =
    foreign
      "atg_range_step"
      (ptr t @-> scalar @-> scalar @-> int @-> int @-> returning void)

  let stubs_ravel = foreign "atg_ravel" (ptr t @-> t @-> returning void)
  let stubs_real = foreign "atg_real" (ptr t @-> t @-> returning void)
  let stubs_reciprocal = foreign "atg_reciprocal" (ptr t @-> t @-> returning void)
  let stubs_reciprocal_ = foreign "atg_reciprocal_" (ptr t @-> t @-> returning void)

  let stubs_reciprocal_out =
    foreign "atg_reciprocal_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_reflection_pad1d =
    foreign "atg_reflection_pad1d" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_backward =
    foreign
      "atg_reflection_pad1d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_backward_grad_input =
    foreign
      "atg_reflection_pad1d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad1d_out =
    foreign
      "atg_reflection_pad1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d =
    foreign "atg_reflection_pad2d" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_backward =
    foreign
      "atg_reflection_pad2d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_backward_grad_input =
    foreign
      "atg_reflection_pad2d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad2d_out =
    foreign
      "atg_reflection_pad2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad3d =
    foreign "atg_reflection_pad3d" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad3d_backward =
    foreign
      "atg_reflection_pad3d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad3d_backward_grad_input =
    foreign
      "atg_reflection_pad3d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reflection_pad3d_out =
    foreign
      "atg_reflection_pad3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_relu = foreign "atg_relu" (ptr t @-> t @-> returning void)
  let stubs_relu6 = foreign "atg_relu6" (ptr t @-> t @-> returning void)
  let stubs_relu6_ = foreign "atg_relu6_" (ptr t @-> t @-> returning void)
  let stubs_relu_ = foreign "atg_relu_" (ptr t @-> t @-> returning void)
  let stubs_relu_out = foreign "atg_relu_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_remainder = foreign "atg_remainder" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_remainder_ =
    foreign "atg_remainder_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_remainder_scalar_out =
    foreign "atg_remainder_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_remainder_scalar_tensor =
    foreign "atg_remainder_scalar_tensor" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_remainder_scalar_tensor_out =
    foreign
      "atg_remainder_scalar_tensor_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_remainder_tensor =
    foreign "atg_remainder_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_remainder_tensor_ =
    foreign "atg_remainder_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_remainder_tensor_out =
    foreign "atg_remainder_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_renorm =
    foreign "atg_renorm" (ptr t @-> t @-> scalar @-> int64_t @-> scalar @-> returning void)

  let stubs_renorm_ =
    foreign
      "atg_renorm_"
      (ptr t @-> t @-> scalar @-> int64_t @-> scalar @-> returning void)

  let stubs_renorm_out =
    foreign
      "atg_renorm_out"
      (ptr t @-> t @-> t @-> scalar @-> int64_t @-> scalar @-> returning void)

  let stubs_repeat =
    foreign "atg_repeat" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_repeat_interleave =
    foreign "atg_repeat_interleave" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_repeat_interleave_self_int =
    foreign
      "atg_repeat_interleave_self_int"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_repeat_interleave_self_tensor =
    foreign
      "atg_repeat_interleave_self_tensor"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_repeat_interleave_tensor_out =
    foreign
      "atg_repeat_interleave_tensor_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_repeat_out =
    foreign "atg_repeat_out" (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d =
    foreign
      "atg_replication_pad1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_backward =
    foreign
      "atg_replication_pad1d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_backward_grad_input =
    foreign
      "atg_replication_pad1d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad1d_out =
    foreign
      "atg_replication_pad1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d =
    foreign
      "atg_replication_pad2d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_backward =
    foreign
      "atg_replication_pad2d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_backward_grad_input =
    foreign
      "atg_replication_pad2d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad2d_out =
    foreign
      "atg_replication_pad2d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d =
    foreign
      "atg_replication_pad3d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d_backward =
    foreign
      "atg_replication_pad3d_backward"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d_backward_grad_input =
    foreign
      "atg_replication_pad3d_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_replication_pad3d_out =
    foreign
      "atg_replication_pad3d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_requires_grad_ =
    foreign "atg_requires_grad_" (ptr t @-> t @-> int @-> returning void)

  let stubs_reshape =
    foreign "atg_reshape" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_reshape_as = foreign "atg_reshape_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize =
    foreign "atg_resize" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_resize_ =
    foreign "atg_resize_" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_resize_as = foreign "atg_resize_as" (ptr t @-> t @-> t @-> returning void)
  let stubs_resize_as_ = foreign "atg_resize_as_" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize_as_out =
    foreign "atg_resize_as_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_resize_as_sparse =
    foreign "atg_resize_as_sparse" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize_as_sparse_ =
    foreign "atg_resize_as_sparse_" (ptr t @-> t @-> t @-> returning void)

  let stubs_resize_as_sparse_out =
    foreign "atg_resize_as_sparse_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_resize_out =
    foreign "atg_resize_out" (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_resolve_conj = foreign "atg_resolve_conj" (ptr t @-> t @-> returning void)
  let stubs_resolve_neg = foreign "atg_resolve_neg" (ptr t @-> t @-> returning void)

  let stubs_rnn_relu =
    foreign
      "atg_rnn_relu"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_relu_cell =
    foreign
      "atg_rnn_relu_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_rnn_relu_data =
    foreign
      "atg_rnn_relu_data"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_tanh =
    foreign
      "atg_rnn_tanh"
      (ptr t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_rnn_tanh_cell =
    foreign
      "atg_rnn_tanh_cell"
      (ptr t @-> t @-> t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_rnn_tanh_data =
    foreign
      "atg_rnn_tanh_data"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr t
      @-> int
      @-> int
      @-> int64_t
      @-> double
      @-> int
      @-> int
      @-> returning void)

  let stubs_roll =
    foreign
      "atg_roll"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning void)

  let stubs_roll_out =
    foreign
      "atg_roll_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_rot90 =
    foreign
      "atg_rot90"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_rot90_out =
    foreign
      "atg_rot90_out"
      (ptr t @-> t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_round = foreign "atg_round" (ptr t @-> t @-> returning void)
  let stubs_round_ = foreign "atg_round_" (ptr t @-> t @-> returning void)

  let stubs_round_decimals =
    foreign "atg_round_decimals" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_round_decimals_ =
    foreign "atg_round_decimals_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_round_decimals_out =
    foreign "atg_round_decimals_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_round_out = foreign "atg_round_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_row_indices = foreign "atg_row_indices" (ptr t @-> t @-> returning void)

  let stubs_row_indices_copy =
    foreign "atg_row_indices_copy" (ptr t @-> t @-> returning void)

  let stubs_row_indices_copy_out =
    foreign "atg_row_indices_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_row_stack =
    foreign "atg_row_stack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_row_stack_out =
    foreign "atg_row_stack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_rrelu = foreign "atg_rrelu" (ptr t @-> t @-> int @-> returning void)
  let stubs_rrelu_ = foreign "atg_rrelu_" (ptr t @-> t @-> int @-> returning void)
end

module C19 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_rrelu_with_noise =
    foreign "atg_rrelu_with_noise" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_rrelu_with_noise_ =
    foreign "atg_rrelu_with_noise_" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_rrelu_with_noise_backward =
    foreign
      "atg_rrelu_with_noise_backward"
      (ptr t @-> t @-> t @-> t @-> scalar @-> scalar @-> int @-> int @-> returning void)

  let stubs_rrelu_with_noise_backward_out =
    foreign
      "atg_rrelu_with_noise_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> scalar
      @-> scalar
      @-> int
      @-> int
      @-> returning void)

  let stubs_rrelu_with_noise_out =
    foreign "atg_rrelu_with_noise_out" (ptr t @-> t @-> t @-> t @-> int @-> returning void)

  let stubs_rsqrt = foreign "atg_rsqrt" (ptr t @-> t @-> returning void)
  let stubs_rsqrt_ = foreign "atg_rsqrt_" (ptr t @-> t @-> returning void)
  let stubs_rsqrt_out = foreign "atg_rsqrt_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_rsub = foreign "atg_rsub" (ptr t @-> t @-> t @-> returning void)

  let stubs_rsub_scalar =
    foreign "atg_rsub_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_rsub_scalar_out =
    foreign "atg_rsub_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_rsub_tensor_out =
    foreign "atg_rsub_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_scalar_tensor =
    foreign "atg_scalar_tensor" (ptr t @-> scalar @-> int @-> int @-> returning void)

  let stubs_scalar_tensor_out =
    foreign "atg_scalar_tensor_out" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_scaled_dot_product_attention =
    foreign
      "atg_scaled_dot_product_attention"
      (ptr t @-> t @-> t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_scatter =
    foreign "atg_scatter" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_ =
    foreign "atg_scatter_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_add =
    foreign "atg_scatter_add" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_add_ =
    foreign "atg_scatter_add_" (ptr t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_add_out =
    foreign
      "atg_scatter_add_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_reduce =
    foreign
      "atg_scatter_reduce"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> returning void)

  let stubs_scatter_reduce_ =
    foreign
      "atg_scatter_reduce_"
      (ptr t @-> t @-> int64_t @-> t @-> t @-> string @-> returning void)

  let stubs_scatter_reduce_out =
    foreign
      "atg_scatter_reduce_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> string @-> returning void)

  let stubs_scatter_src_out =
    foreign
      "atg_scatter_src_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> t @-> returning void)

  let stubs_scatter_value =
    foreign
      "atg_scatter_value"
      (ptr t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_scatter_value_ =
    foreign
      "atg_scatter_value_"
      (ptr t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_scatter_value_out =
    foreign
      "atg_scatter_value_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> scalar @-> returning void)

  let stubs_scatter_value_reduce =
    foreign
      "atg_scatter_value_reduce"
      (ptr t @-> t @-> int64_t @-> t @-> scalar @-> string @-> returning void)

  let stubs_scatter_value_reduce_ =
    foreign
      "atg_scatter_value_reduce_"
      (ptr t @-> t @-> int64_t @-> t @-> scalar @-> string @-> returning void)

  let stubs_scatter_value_reduce_out =
    foreign
      "atg_scatter_value_reduce_out"
      (ptr t @-> t @-> t @-> int64_t @-> t @-> scalar @-> string @-> returning void)

  let stubs_searchsorted =
    foreign
      "atg_searchsorted"
      (ptr t @-> t @-> t @-> int @-> int @-> string @-> t @-> returning void)

  let stubs_searchsorted_scalar =
    foreign
      "atg_searchsorted_scalar"
      (ptr t @-> t @-> scalar @-> int @-> int @-> string @-> t @-> returning void)

  let stubs_searchsorted_scalar_out =
    foreign
      "atg_searchsorted_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> int @-> int @-> string @-> t @-> returning void)

  let stubs_searchsorted_tensor_out =
    foreign
      "atg_searchsorted_tensor_out"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> string @-> t @-> returning void)

  let stubs_segment_reduce =
    foreign
      "atg_segment_reduce"
      (ptr t
      @-> t
      @-> string
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> scalar
      @-> returning void)

  let stubs_segment_reduce_out =
    foreign
      "atg_segment_reduce_out"
      (ptr t
      @-> t
      @-> t
      @-> string
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> scalar
      @-> returning void)

  let stubs_select =
    foreign "atg_select" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_backward =
    foreign
      "atg_select_backward"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_backward_out =
    foreign
      "atg_select_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_select_copy =
    foreign "atg_select_copy" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_copy_int_out =
    foreign
      "atg_select_copy_int_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_scatter =
    foreign
      "atg_select_scatter"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_select_scatter_out =
    foreign
      "atg_select_scatter_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_selu = foreign "atg_selu" (ptr t @-> t @-> returning void)
  let stubs_selu_ = foreign "atg_selu_" (ptr t @-> t @-> returning void)
  let stubs_set = foreign "atg_set" (ptr t @-> t @-> returning void)
  let stubs_set_ = foreign "atg_set_" (ptr t @-> t @-> returning void)
  let stubs_set_out = foreign "atg_set_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_set_requires_grad =
    foreign "atg_set_requires_grad" (ptr t @-> t @-> int @-> returning void)

  let stubs_set_source_tensor =
    foreign "atg_set_source_tensor" (ptr t @-> t @-> t @-> returning void)

  let stubs_set_source_tensor_ =
    foreign "atg_set_source_tensor_" (ptr t @-> t @-> t @-> returning void)

  let stubs_set_source_tensor_out =
    foreign "atg_set_source_tensor_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_set_source_tensor_storage_offset_ =
    foreign
      "atg_set_source_tensor_storage_offset_"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_sgn = foreign "atg_sgn" (ptr t @-> t @-> returning void)
  let stubs_sgn_ = foreign "atg_sgn_" (ptr t @-> t @-> returning void)
  let stubs_sgn_out = foreign "atg_sgn_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sigmoid = foreign "atg_sigmoid" (ptr t @-> t @-> returning void)
  let stubs_sigmoid_ = foreign "atg_sigmoid_" (ptr t @-> t @-> returning void)

  let stubs_sigmoid_backward =
    foreign "atg_sigmoid_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_sigmoid_backward_grad_input =
    foreign "atg_sigmoid_backward_grad_input" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sigmoid_out = foreign "atg_sigmoid_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sign = foreign "atg_sign" (ptr t @-> t @-> returning void)
  let stubs_sign_ = foreign "atg_sign_" (ptr t @-> t @-> returning void)
  let stubs_sign_out = foreign "atg_sign_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_signbit = foreign "atg_signbit" (ptr t @-> t @-> returning void)
  let stubs_signbit_out = foreign "atg_signbit_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_silu = foreign "atg_silu" (ptr t @-> t @-> returning void)
  let stubs_silu_ = foreign "atg_silu_" (ptr t @-> t @-> returning void)

  let stubs_silu_backward =
    foreign "atg_silu_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_silu_backward_grad_input =
    foreign "atg_silu_backward_grad_input" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_silu_out = foreign "atg_silu_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sin = foreign "atg_sin" (ptr t @-> t @-> returning void)
  let stubs_sin_ = foreign "atg_sin_" (ptr t @-> t @-> returning void)
  let stubs_sin_out = foreign "atg_sin_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sinc = foreign "atg_sinc" (ptr t @-> t @-> returning void)
  let stubs_sinc_ = foreign "atg_sinc_" (ptr t @-> t @-> returning void)
  let stubs_sinc_out = foreign "atg_sinc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_sinh = foreign "atg_sinh" (ptr t @-> t @-> returning void)
  let stubs_sinh_ = foreign "atg_sinh_" (ptr t @-> t @-> returning void)
  let stubs_sinh_out = foreign "atg_sinh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_slice =
    foreign
      "atg_slice"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_slice_backward =
    foreign
      "atg_slice_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_slice_backward_out =
    foreign
      "atg_slice_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_slice_copy =
    foreign
      "atg_slice_copy"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_slice_copy_tensor_out =
    foreign
      "atg_slice_copy_tensor_out"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_slice_scatter =
    foreign
      "atg_slice_scatter"
      (ptr t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_slice_scatter_out =
    foreign
      "atg_slice_scatter_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_slogdet = foreign "atg_slogdet" (ptr t @-> t @-> returning void)

  let stubs_slogdet_out =
    foreign "atg_slogdet_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_slow_conv3d =
    foreign
      "atg_slow_conv3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv3d_out =
    foreign
      "atg_slow_conv3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated2d =
    foreign
      "atg_slow_conv_dilated2d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated2d_out =
    foreign
      "atg_slow_conv_dilated2d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated3d =
    foreign
      "atg_slow_conv_dilated3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_dilated3d_out =
    foreign
      "atg_slow_conv_dilated3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose2d =
    foreign
      "atg_slow_conv_transpose2d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose2d_out =
    foreign
      "atg_slow_conv_transpose2d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose3d =
    foreign
      "atg_slow_conv_transpose3d"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_slow_conv_transpose3d_out =
    foreign
      "atg_slow_conv_transpose3d_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_smm = foreign "atg_smm" (ptr t @-> t @-> t @-> returning void)
end

module C20 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_smooth_l1_loss =
    foreign
      "atg_smooth_l1_loss"
      (ptr t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_backward =
    foreign
      "atg_smooth_l1_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_backward_grad_input =
    foreign
      "atg_smooth_l1_loss_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_smooth_l1_loss_out =
    foreign
      "atg_smooth_l1_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> double @-> returning void)

  let stubs_soft_margin_loss =
    foreign "atg_soft_margin_loss" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_backward =
    foreign
      "atg_soft_margin_loss_backward"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_backward_grad_input =
    foreign
      "atg_soft_margin_loss_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_soft_margin_loss_out =
    foreign
      "atg_soft_margin_loss_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_softmax =
    foreign "atg_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_softmax_int_out =
    foreign
      "atg_softmax_int_out"
      (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_softplus = foreign "atg_softplus" (ptr t @-> t @-> returning void)

  let stubs_softplus_backward =
    foreign
      "atg_softplus_backward"
      (ptr t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_softplus_backward_grad_input =
    foreign
      "atg_softplus_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_softplus_out =
    foreign "atg_softplus_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_softshrink = foreign "atg_softshrink" (ptr t @-> t @-> returning void)

  let stubs_softshrink_backward =
    foreign "atg_softshrink_backward" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_softshrink_backward_grad_input =
    foreign
      "atg_softshrink_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> returning void)

  let stubs_softshrink_out =
    foreign "atg_softshrink_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_sort = foreign "atg_sort" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_sort_stable =
    foreign "atg_sort_stable" (ptr t @-> t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_sort_values =
    foreign
      "atg_sort_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_sort_values_stable =
    foreign
      "atg_sort_values_stable"
      (ptr t @-> t @-> t @-> t @-> int @-> int64_t @-> int @-> returning void)

  let stubs_sparse_bsc_tensor =
    foreign
      "atg_sparse_bsc_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_bsc_tensor_ccol_row_value_size =
    foreign
      "atg_sparse_bsc_tensor_ccol_row_value_size"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_bsr_tensor =
    foreign
      "atg_sparse_bsr_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_bsr_tensor_crow_col_value_size =
    foreign
      "atg_sparse_bsr_tensor_crow_col_value_size"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_compressed_tensor =
    foreign
      "atg_sparse_compressed_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_compressed_tensor_comp_plain_value_size =
    foreign
      "atg_sparse_compressed_tensor_comp_plain_value_size"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor =
    foreign
      "atg_sparse_coo_tensor"
      (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor_indices =
    foreign
      "atg_sparse_coo_tensor_indices"
      (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor_indices_size =
    foreign
      "atg_sparse_coo_tensor_indices_size"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_coo_tensor_size_out =
    foreign
      "atg_sparse_coo_tensor_size_out"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_sparse_csc_tensor =
    foreign
      "atg_sparse_csc_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_csc_tensor_ccol_row_value_size =
    foreign
      "atg_sparse_csc_tensor_ccol_row_value_size"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_csr_tensor =
    foreign
      "atg_sparse_csr_tensor"
      (ptr t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_sparse_csr_tensor_crow_col_value_size =
    foreign
      "atg_sparse_csr_tensor_crow_col_value_size"
      (ptr t @-> t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sparse_mask = foreign "atg_sparse_mask" (ptr t @-> t @-> t @-> returning void)

  let stubs_sparse_mask_out =
    foreign "atg_sparse_mask_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sparse_resize =
    foreign
      "atg_sparse_resize"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_sparse_resize_ =
    foreign
      "atg_sparse_resize_"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_sparse_resize_and_clear =
    foreign
      "atg_sparse_resize_and_clear"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_sparse_resize_and_clear_ =
    foreign
      "atg_sparse_resize_and_clear_"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning void)

  let stubs_sparse_resize_and_clear_out =
    foreign
      "atg_sparse_resize_and_clear_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_sparse_resize_out =
    foreign
      "atg_sparse_resize_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_sparse_sampled_addmm =
    foreign "atg_sparse_sampled_addmm" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sparse_sampled_addmm_out =
    foreign
      "atg_sparse_sampled_addmm_out"
      (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_special_airy_ai =
    foreign "atg_special_airy_ai" (ptr t @-> t @-> returning void)

  let stubs_special_airy_ai_out =
    foreign "atg_special_airy_ai_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_bessel_j0 =
    foreign "atg_special_bessel_j0" (ptr t @-> t @-> returning void)

  let stubs_special_bessel_j0_out =
    foreign "atg_special_bessel_j0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_bessel_j1 =
    foreign "atg_special_bessel_j1" (ptr t @-> t @-> returning void)

  let stubs_special_bessel_j1_out =
    foreign "atg_special_bessel_j1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_bessel_y0 =
    foreign "atg_special_bessel_y0" (ptr t @-> t @-> returning void)

  let stubs_special_bessel_y0_out =
    foreign "atg_special_bessel_y0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_bessel_y1 =
    foreign "atg_special_bessel_y1" (ptr t @-> t @-> returning void)

  let stubs_special_bessel_y1_out =
    foreign "atg_special_bessel_y1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_t =
    foreign "atg_special_chebyshev_polynomial_t" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_t_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_t_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_t_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_t_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_t_out =
    foreign
      "atg_special_chebyshev_polynomial_t_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_t_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_t_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_t_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_t_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_u =
    foreign "atg_special_chebyshev_polynomial_u" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_u_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_u_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_u_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_u_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_u_out =
    foreign
      "atg_special_chebyshev_polynomial_u_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_u_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_u_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_u_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_u_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_v =
    foreign "atg_special_chebyshev_polynomial_v" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_v_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_v_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_v_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_v_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_v_out =
    foreign
      "atg_special_chebyshev_polynomial_v_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_v_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_v_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_v_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_v_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_w =
    foreign "atg_special_chebyshev_polynomial_w" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_w_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_w_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_w_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_w_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_chebyshev_polynomial_w_out =
    foreign
      "atg_special_chebyshev_polynomial_w_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_w_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_w_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_chebyshev_polynomial_w_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_w_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_digamma =
    foreign "atg_special_digamma" (ptr t @-> t @-> returning void)

  let stubs_special_digamma_out =
    foreign "atg_special_digamma_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_entr = foreign "atg_special_entr" (ptr t @-> t @-> returning void)

  let stubs_special_entr_out =
    foreign "atg_special_entr_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erf = foreign "atg_special_erf" (ptr t @-> t @-> returning void)

  let stubs_special_erf_out =
    foreign "atg_special_erf_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erfc = foreign "atg_special_erfc" (ptr t @-> t @-> returning void)

  let stubs_special_erfc_out =
    foreign "atg_special_erfc_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erfcx = foreign "atg_special_erfcx" (ptr t @-> t @-> returning void)

  let stubs_special_erfcx_out =
    foreign "atg_special_erfcx_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_erfinv = foreign "atg_special_erfinv" (ptr t @-> t @-> returning void)

  let stubs_special_erfinv_out =
    foreign "atg_special_erfinv_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_exp2 = foreign "atg_special_exp2" (ptr t @-> t @-> returning void)

  let stubs_special_exp2_out =
    foreign "atg_special_exp2_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_expit = foreign "atg_special_expit" (ptr t @-> t @-> returning void)

  let stubs_special_expit_out =
    foreign "atg_special_expit_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_expm1 = foreign "atg_special_expm1" (ptr t @-> t @-> returning void)

  let stubs_special_expm1_out =
    foreign "atg_special_expm1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_gammainc =
    foreign "atg_special_gammainc" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_gammainc_out =
    foreign "atg_special_gammainc_out" (ptr t @-> t @-> t @-> t @-> returning void)
end

module C21 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_special_gammaincc =
    foreign "atg_special_gammaincc" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_gammaincc_out =
    foreign "atg_special_gammaincc_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_gammaln =
    foreign "atg_special_gammaln" (ptr t @-> t @-> returning void)

  let stubs_special_gammaln_out =
    foreign "atg_special_gammaln_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_hermite_polynomial_h =
    foreign "atg_special_hermite_polynomial_h" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_hermite_polynomial_h_n_scalar =
    foreign
      "atg_special_hermite_polynomial_h_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_hermite_polynomial_h_n_scalar_out =
    foreign
      "atg_special_hermite_polynomial_h_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_hermite_polynomial_h_out =
    foreign
      "atg_special_hermite_polynomial_h_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_hermite_polynomial_h_x_scalar =
    foreign
      "atg_special_hermite_polynomial_h_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_hermite_polynomial_h_x_scalar_out =
    foreign
      "atg_special_hermite_polynomial_h_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_hermite_polynomial_he =
    foreign "atg_special_hermite_polynomial_he" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_hermite_polynomial_he_n_scalar =
    foreign
      "atg_special_hermite_polynomial_he_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_hermite_polynomial_he_n_scalar_out =
    foreign
      "atg_special_hermite_polynomial_he_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_hermite_polynomial_he_out =
    foreign
      "atg_special_hermite_polynomial_he_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_hermite_polynomial_he_x_scalar =
    foreign
      "atg_special_hermite_polynomial_he_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_hermite_polynomial_he_x_scalar_out =
    foreign
      "atg_special_hermite_polynomial_he_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_i0 = foreign "atg_special_i0" (ptr t @-> t @-> returning void)

  let stubs_special_i0_out =
    foreign "atg_special_i0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_i0e = foreign "atg_special_i0e" (ptr t @-> t @-> returning void)

  let stubs_special_i0e_out =
    foreign "atg_special_i0e_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_i1 = foreign "atg_special_i1" (ptr t @-> t @-> returning void)

  let stubs_special_i1_out =
    foreign "atg_special_i1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_i1e = foreign "atg_special_i1e" (ptr t @-> t @-> returning void)

  let stubs_special_i1e_out =
    foreign "atg_special_i1e_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_laguerre_polynomial_l =
    foreign "atg_special_laguerre_polynomial_l" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_laguerre_polynomial_l_n_scalar =
    foreign
      "atg_special_laguerre_polynomial_l_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_laguerre_polynomial_l_n_scalar_out =
    foreign
      "atg_special_laguerre_polynomial_l_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_laguerre_polynomial_l_out =
    foreign
      "atg_special_laguerre_polynomial_l_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_laguerre_polynomial_l_x_scalar =
    foreign
      "atg_special_laguerre_polynomial_l_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_laguerre_polynomial_l_x_scalar_out =
    foreign
      "atg_special_laguerre_polynomial_l_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_legendre_polynomial_p =
    foreign "atg_special_legendre_polynomial_p" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_legendre_polynomial_p_n_scalar =
    foreign
      "atg_special_legendre_polynomial_p_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_legendre_polynomial_p_n_scalar_out =
    foreign
      "atg_special_legendre_polynomial_p_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_legendre_polynomial_p_out =
    foreign
      "atg_special_legendre_polynomial_p_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_legendre_polynomial_p_x_scalar =
    foreign
      "atg_special_legendre_polynomial_p_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_legendre_polynomial_p_x_scalar_out =
    foreign
      "atg_special_legendre_polynomial_p_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_log1p = foreign "atg_special_log1p" (ptr t @-> t @-> returning void)

  let stubs_special_log1p_out =
    foreign "atg_special_log1p_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_log_ndtr =
    foreign "atg_special_log_ndtr" (ptr t @-> t @-> returning void)

  let stubs_special_log_ndtr_out =
    foreign "atg_special_log_ndtr_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_log_softmax =
    foreign "atg_special_log_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_special_logit =
    foreign "atg_special_logit" (ptr t @-> t @-> double @-> int @-> returning void)

  let stubs_special_logit_out =
    foreign
      "atg_special_logit_out"
      (ptr t @-> t @-> t @-> double @-> int @-> returning void)

  let stubs_special_logsumexp =
    foreign
      "atg_special_logsumexp"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_special_logsumexp_out =
    foreign
      "atg_special_logsumexp_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_special_modified_bessel_i0 =
    foreign "atg_special_modified_bessel_i0" (ptr t @-> t @-> returning void)

  let stubs_special_modified_bessel_i0_out =
    foreign "atg_special_modified_bessel_i0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_modified_bessel_i1 =
    foreign "atg_special_modified_bessel_i1" (ptr t @-> t @-> returning void)

  let stubs_special_modified_bessel_i1_out =
    foreign "atg_special_modified_bessel_i1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_modified_bessel_k0 =
    foreign "atg_special_modified_bessel_k0" (ptr t @-> t @-> returning void)

  let stubs_special_modified_bessel_k0_out =
    foreign "atg_special_modified_bessel_k0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_modified_bessel_k1 =
    foreign "atg_special_modified_bessel_k1" (ptr t @-> t @-> returning void)

  let stubs_special_modified_bessel_k1_out =
    foreign "atg_special_modified_bessel_k1_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_multigammaln =
    foreign "atg_special_multigammaln" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_special_multigammaln_out =
    foreign
      "atg_special_multigammaln_out"
      (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_special_ndtr = foreign "atg_special_ndtr" (ptr t @-> t @-> returning void)

  let stubs_special_ndtr_out =
    foreign "atg_special_ndtr_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_ndtri = foreign "atg_special_ndtri" (ptr t @-> t @-> returning void)

  let stubs_special_ndtri_out =
    foreign "atg_special_ndtri_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_polygamma =
    foreign "atg_special_polygamma" (ptr t @-> int64_t @-> t @-> returning void)

  let stubs_special_polygamma_out =
    foreign "atg_special_polygamma_out" (ptr t @-> t @-> int64_t @-> t @-> returning void)

  let stubs_special_psi = foreign "atg_special_psi" (ptr t @-> t @-> returning void)

  let stubs_special_psi_out =
    foreign "atg_special_psi_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_round =
    foreign "atg_special_round" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_special_round_out =
    foreign "atg_special_round_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_special_scaled_modified_bessel_k0 =
    foreign "atg_special_scaled_modified_bessel_k0" (ptr t @-> t @-> returning void)

  let stubs_special_scaled_modified_bessel_k0_out =
    foreign
      "atg_special_scaled_modified_bessel_k0_out"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_scaled_modified_bessel_k1 =
    foreign "atg_special_scaled_modified_bessel_k1" (ptr t @-> t @-> returning void)

  let stubs_special_scaled_modified_bessel_k1_out =
    foreign
      "atg_special_scaled_modified_bessel_k1_out"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_t_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_u_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_v_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w"
      (ptr t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_n_scalar"
      (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_n_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_out"
      (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_x_scalar"
      (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_shifted_chebyshev_polynomial_w_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_x_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_sinc = foreign "atg_special_sinc" (ptr t @-> t @-> returning void)

  let stubs_special_sinc_out =
    foreign "atg_special_sinc_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_softmax =
    foreign "atg_special_softmax" (ptr t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_special_spherical_bessel_j0 =
    foreign "atg_special_spherical_bessel_j0" (ptr t @-> t @-> returning void)

  let stubs_special_spherical_bessel_j0_out =
    foreign "atg_special_spherical_bessel_j0_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_xlog1py =
    foreign "atg_special_xlog1py" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_xlog1py_other_scalar =
    foreign "atg_special_xlog1py_other_scalar" (ptr t @-> t @-> scalar @-> returning void)
end

module C22 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_special_xlog1py_other_scalar_out =
    foreign
      "atg_special_xlog1py_other_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_xlog1py_out =
    foreign "atg_special_xlog1py_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_xlog1py_self_scalar =
    foreign "atg_special_xlog1py_self_scalar" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_xlog1py_self_scalar_out =
    foreign
      "atg_special_xlog1py_self_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_xlogy =
    foreign "atg_special_xlogy" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_xlogy_other_scalar =
    foreign "atg_special_xlogy_other_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_xlogy_other_scalar_out =
    foreign
      "atg_special_xlogy_other_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_xlogy_out =
    foreign "atg_special_xlogy_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_xlogy_self_scalar =
    foreign "atg_special_xlogy_self_scalar" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_xlogy_self_scalar_out =
    foreign
      "atg_special_xlogy_self_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_special_zeta =
    foreign "atg_special_zeta" (ptr t @-> t @-> t @-> returning void)

  let stubs_special_zeta_other_scalar =
    foreign "atg_special_zeta_other_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_special_zeta_other_scalar_out =
    foreign
      "atg_special_zeta_other_scalar_out"
      (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_special_zeta_out =
    foreign "atg_special_zeta_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_special_zeta_self_scalar =
    foreign "atg_special_zeta_self_scalar" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_special_zeta_self_scalar_out =
    foreign
      "atg_special_zeta_self_scalar_out"
      (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_split = foreign "atg_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_split_copy =
    foreign "atg_split_copy" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_split_copy_tensor_out =
    foreign
      "atg_split_copy_tensor_out"
      (ptr t @-> int @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_split_sizes =
    foreign "atg_split_sizes" (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_split_with_sizes =
    foreign
      "atg_split_with_sizes"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_split_with_sizes_copy =
    foreign
      "atg_split_with_sizes_copy"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_split_with_sizes_copy_out =
    foreign
      "atg_split_with_sizes_copy_out"
      (ptr t @-> int @-> t @-> ptr int64_t @-> int @-> int64_t @-> returning void)

  let stubs_sqrt = foreign "atg_sqrt" (ptr t @-> t @-> returning void)
  let stubs_sqrt_ = foreign "atg_sqrt_" (ptr t @-> t @-> returning void)
  let stubs_sqrt_out = foreign "atg_sqrt_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_square = foreign "atg_square" (ptr t @-> t @-> returning void)
  let stubs_square_ = foreign "atg_square_" (ptr t @-> t @-> returning void)
  let stubs_square_out = foreign "atg_square_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_squeeze = foreign "atg_squeeze" (ptr t @-> t @-> returning void)
  let stubs_squeeze_ = foreign "atg_squeeze_" (ptr t @-> t @-> returning void)
  let stubs_squeeze_copy = foreign "atg_squeeze_copy" (ptr t @-> t @-> returning void)

  let stubs_squeeze_copy_dim =
    foreign "atg_squeeze_copy_dim" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_squeeze_copy_dim_out =
    foreign "atg_squeeze_copy_dim_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_squeeze_copy_dims =
    foreign
      "atg_squeeze_copy_dims"
      (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_squeeze_copy_dims_out =
    foreign
      "atg_squeeze_copy_dims_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_squeeze_copy_out =
    foreign "atg_squeeze_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_squeeze_dim =
    foreign "atg_squeeze_dim" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_squeeze_dim_ =
    foreign "atg_squeeze_dim_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_squeeze_dims =
    foreign "atg_squeeze_dims" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_squeeze_dims_ =
    foreign "atg_squeeze_dims_" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_sspaddmm = foreign "atg_sspaddmm" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sspaddmm_out =
    foreign "atg_sspaddmm_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_stack =
    foreign "atg_stack" (ptr t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_stack_out =
    foreign "atg_stack_out" (ptr t @-> t @-> ptr t @-> int @-> int64_t @-> returning void)

  let stubs_std = foreign "atg_std" (ptr t @-> t @-> int @-> returning void)

  let stubs_std_correction =
    foreign
      "atg_std_correction"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs_std_correction_out =
    foreign
      "atg_std_correction_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_std_dim =
    foreign
      "atg_std_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_std_mean = foreign "atg_std_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_std_mean_correction =
    foreign
      "atg_std_mean_correction"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs_std_mean_correction_out =
    foreign
      "atg_std_mean_correction_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_std_mean_dim =
    foreign
      "atg_std_mean_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_std_out =
    foreign
      "atg_std_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_stft =
    foreign
      "atg_stft"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_stft_center =
    foreign
      "atg_stft_center"
      (ptr t
      @-> t
      @-> int64_t
      @-> int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> t
      @-> int
      @-> string
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_sub = foreign "atg_sub" (ptr t @-> t @-> t @-> returning void)
  let stubs_sub_ = foreign "atg_sub_" (ptr t @-> t @-> t @-> returning void)
  let stubs_sub_out = foreign "atg_sub_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_sub_scalar =
    foreign "atg_sub_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_sub_scalar_ =
    foreign "atg_sub_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_sub_scalar_out =
    foreign "atg_sub_scalar_out" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_subtract = foreign "atg_subtract" (ptr t @-> t @-> t @-> returning void)
  let stubs_subtract_ = foreign "atg_subtract_" (ptr t @-> t @-> t @-> returning void)

  let stubs_subtract_out =
    foreign "atg_subtract_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_subtract_scalar =
    foreign "atg_subtract_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_subtract_scalar_ =
    foreign "atg_subtract_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_sum = foreign "atg_sum" (ptr t @-> t @-> int @-> returning void)

  let stubs_sum_dim_intlist =
    foreign
      "atg_sum_dim_intlist"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sum_intlist_out =
    foreign
      "atg_sum_intlist_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_sum_out = foreign "atg_sum_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_sum_to_size =
    foreign "atg_sum_to_size" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_svd = foreign "atg_svd" (ptr t @-> t @-> int @-> int @-> returning void)

  let stubs_svd_u =
    foreign "atg_svd_u" (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_swapaxes =
    foreign "atg_swapaxes" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapaxes_ =
    foreign "atg_swapaxes_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapdims =
    foreign "atg_swapdims" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_swapdims_ =
    foreign "atg_swapdims_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_tr = foreign "atg_t" (ptr t @-> t @-> returning void)
  let stubs_t_ = foreign "atg_t_" (ptr t @-> t @-> returning void)
  let stubs_t_copy = foreign "atg_t_copy" (ptr t @-> t @-> returning void)
  let stubs_t_copy_out = foreign "atg_t_copy_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_take = foreign "atg_take" (ptr t @-> t @-> t @-> returning void)

  let stubs_take_along_dim =
    foreign "atg_take_along_dim" (ptr t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_take_along_dim_out =
    foreign
      "atg_take_along_dim_out"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int @-> returning void)

  let stubs_take_out = foreign "atg_take_out" (ptr t @-> t @-> t @-> t @-> returning void)
  let stubs_tan = foreign "atg_tan" (ptr t @-> t @-> returning void)
  let stubs_tan_ = foreign "atg_tan_" (ptr t @-> t @-> returning void)
  let stubs_tan_out = foreign "atg_tan_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_tanh = foreign "atg_tanh" (ptr t @-> t @-> returning void)
  let stubs_tanh_ = foreign "atg_tanh_" (ptr t @-> t @-> returning void)

  let stubs_tanh_backward =
    foreign "atg_tanh_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_tanh_backward_grad_input =
    foreign "atg_tanh_backward_grad_input" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_tanh_out = foreign "atg_tanh_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_tensor_split =
    foreign "atg_tensor_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_tensor_split_indices =
    foreign
      "atg_tensor_split_indices"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_tensor_split_tensor_indices_or_sections =
    foreign
      "atg_tensor_split_tensor_indices_or_sections"
      (t @-> t @-> int64_t @-> returning (ptr t))

  let stubs_tensordot =
    foreign
      "atg_tensordot"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_tensordot_out =
    foreign
      "atg_tensordot_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> returning void)

  let stubs_threshold =
    foreign "atg_threshold" (ptr t @-> t @-> scalar @-> scalar @-> returning void)
end

module C23 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_threshold_ =
    foreign "atg_threshold_" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_threshold_backward =
    foreign "atg_threshold_backward" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_threshold_backward_grad_input =
    foreign
      "atg_threshold_backward_grad_input"
      (ptr t @-> t @-> t @-> t @-> scalar @-> returning void)

  let stubs_threshold_out =
    foreign
      "atg_threshold_out"
      (ptr t @-> t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_tile =
    foreign "atg_tile" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_to_ = foreign "atg_to" (ptr t @-> t @-> int @-> returning void)
  let stubs_to_dense = foreign "atg_to_dense" (ptr t @-> t @-> int @-> returning void)

  let stubs_to_dense_backward =
    foreign "atg_to_dense_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_to_device =
    foreign
      "atg_to_device"
      (ptr t @-> t @-> int @-> int @-> int @-> int @-> returning void)

  let stubs_to_dtype =
    foreign "atg_to_dtype" (ptr t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_to_dtype_layout =
    foreign
      "atg_to_dtype_layout"
      (ptr t @-> t @-> int @-> int @-> int @-> int @-> returning void)

  let stubs_to_mkldnn = foreign "atg_to_mkldnn" (ptr t @-> t @-> int @-> returning void)

  let stubs_to_mkldnn_backward =
    foreign "atg_to_mkldnn_backward" (ptr t @-> t @-> t @-> returning void)

  let stubs_to_mkldnn_out =
    foreign "atg_to_mkldnn_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_to_other =
    foreign "atg_to_other" (ptr t @-> t @-> t @-> int @-> int @-> returning void)

  let stubs_to_padded_tensor =
    foreign
      "atg_to_padded_tensor"
      (ptr t @-> t @-> double @-> ptr int64_t @-> int @-> returning void)

  let stubs_to_padded_tensor_out =
    foreign
      "atg_to_padded_tensor_out"
      (ptr t @-> t @-> t @-> double @-> ptr int64_t @-> int @-> returning void)

  let stubs_topk =
    foreign
      "atg_topk"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_topk_values =
    foreign
      "atg_topk_values"
      (ptr t @-> t @-> t @-> t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_totype = foreign "atg_totype" (ptr t @-> t @-> int @-> returning void)
  let stubs_trace = foreign "atg_trace" (ptr t @-> t @-> returning void)

  let stubs_trace_backward =
    foreign "atg_trace_backward" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_trace_out = foreign "atg_trace_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_transpose =
    foreign "atg_transpose" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_transpose_ =
    foreign "atg_transpose_" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_transpose_copy =
    foreign "atg_transpose_copy" (ptr t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_transpose_copy_int_out =
    foreign
      "atg_transpose_copy_int_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_trapezoid =
    foreign "atg_trapezoid" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_trapezoid_x =
    foreign "atg_trapezoid_x" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_trapz = foreign "atg_trapz" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_trapz_dx =
    foreign "atg_trapz_dx" (ptr t @-> t @-> double @-> int64_t @-> returning void)

  let stubs_triangular_solve =
    foreign
      "atg_triangular_solve"
      (ptr t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_triangular_solve_x =
    foreign
      "atg_triangular_solve_x"
      (ptr t @-> t @-> t @-> t @-> t @-> int @-> int @-> int @-> returning void)

  let stubs_tril = foreign "atg_tril" (ptr t @-> t @-> int64_t @-> returning void)
  let stubs_tril_ = foreign "atg_tril_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_tril_indices =
    foreign
      "atg_tril_indices"
      (ptr t @-> int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_tril_indices_out =
    foreign
      "atg_tril_indices_out"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_tril_out =
    foreign "atg_tril_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_triplet_margin_loss =
    foreign
      "atg_triplet_margin_loss"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> double
      @-> double
      @-> double
      @-> int
      @-> int64_t
      @-> returning void)

  let stubs_triu = foreign "atg_triu" (ptr t @-> t @-> int64_t @-> returning void)
  let stubs_triu_ = foreign "atg_triu_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_triu_indices =
    foreign
      "atg_triu_indices"
      (ptr t @-> int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_triu_indices_out =
    foreign
      "atg_triu_indices_out"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_triu_out =
    foreign "atg_triu_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_true_divide = foreign "atg_true_divide" (ptr t @-> t @-> t @-> returning void)

  let stubs_true_divide_ =
    foreign "atg_true_divide_" (ptr t @-> t @-> t @-> returning void)

  let stubs_true_divide_out =
    foreign "atg_true_divide_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_true_divide_scalar =
    foreign "atg_true_divide_scalar" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_true_divide_scalar_ =
    foreign "atg_true_divide_scalar_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_trunc = foreign "atg_trunc" (ptr t @-> t @-> returning void)
  let stubs_trunc_ = foreign "atg_trunc_" (ptr t @-> t @-> returning void)
  let stubs_trunc_out = foreign "atg_trunc_out" (ptr t @-> t @-> t @-> returning void)
  let stubs_type_as = foreign "atg_type_as" (ptr t @-> t @-> t @-> returning void)
  let stubs_unbind = foreign "atg_unbind" (t @-> int64_t @-> returning (ptr t))
  let stubs_unbind_copy = foreign "atg_unbind_copy" (t @-> int64_t @-> returning (ptr t))

  let stubs_unbind_copy_int_out =
    foreign "atg_unbind_copy_int_out" (ptr t @-> int @-> t @-> int64_t @-> returning void)

  let stubs_unflatten =
    foreign
      "atg_unflatten"
      (ptr t @-> t @-> int64_t @-> ptr int64_t @-> int @-> returning void)

  let stubs_unflatten_dense_tensors =
    foreign "atg_unflatten_dense_tensors" (t @-> ptr t @-> int @-> returning (ptr t))

  let stubs_unfold =
    foreign
      "atg_unfold"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_unfold_backward =
    foreign
      "atg_unfold_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_unfold_backward_out =
    foreign
      "atg_unfold_backward_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int64_t
      @-> int64_t
      @-> returning void)

  let stubs_unfold_copy =
    foreign
      "atg_unfold_copy"
      (ptr t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_unfold_copy_out =
    foreign
      "atg_unfold_copy_out"
      (ptr t @-> t @-> t @-> int64_t @-> int64_t @-> int64_t @-> returning void)

  let stubs_uniform =
    foreign "atg_uniform" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_uniform_ =
    foreign "atg_uniform_" (ptr t @-> t @-> double @-> double @-> returning void)

  let stubs_uniform_out =
    foreign "atg_uniform_out" (ptr t @-> t @-> t @-> double @-> double @-> returning void)

  let stubs_unique_consecutive =
    foreign
      "atg_unique_consecutive"
      (ptr t @-> t @-> int @-> int @-> int64_t @-> int @-> returning void)

  let stubs_unique_consecutive_out =
    foreign
      "atg_unique_consecutive_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int
      @-> int
      @-> int64_t
      @-> int
      @-> returning void)

  let stubs_unique_dim =
    foreign
      "atg_unique_dim"
      (ptr t @-> t @-> int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_unique_dim_consecutive =
    foreign
      "atg_unique_dim_consecutive"
      (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_unique_dim_consecutive_out =
    foreign
      "atg_unique_dim_consecutive_out"
      (ptr t @-> t @-> t @-> t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_unique_dim_out =
    foreign
      "atg_unique_dim_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> t
      @-> int64_t
      @-> int
      @-> int
      @-> int
      @-> returning void)

  let stubs_unsafe_chunk =
    foreign "atg_unsafe_chunk" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_unsafe_split =
    foreign "atg_unsafe_split" (t @-> int64_t @-> int64_t @-> returning (ptr t))

  let stubs_unsafe_split_tensor_out =
    foreign
      "atg_unsafe_split_tensor_out"
      (ptr t @-> int @-> t @-> int64_t @-> int64_t @-> returning void)

  let stubs_unsafe_split_with_sizes =
    foreign
      "atg_unsafe_split_with_sizes"
      (t @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr t))

  let stubs_unsafe_split_with_sizes_out =
    foreign
      "atg_unsafe_split_with_sizes_out"
      (ptr t @-> int @-> t @-> ptr int64_t @-> int @-> int64_t @-> returning void)

  let stubs_unsqueeze =
    foreign "atg_unsqueeze" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_unsqueeze_ =
    foreign "atg_unsqueeze_" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_unsqueeze_copy =
    foreign "atg_unsqueeze_copy" (ptr t @-> t @-> int64_t @-> returning void)

  let stubs_unsqueeze_copy_out =
    foreign "atg_unsqueeze_copy_out" (ptr t @-> t @-> t @-> int64_t @-> returning void)

  let stubs_upsample_bicubic2d =
    foreign
      "atg_upsample_bicubic2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bicubic2d_backward =
    foreign
      "atg_upsample_bicubic2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bicubic2d_backward_grad_input =
    foreign
      "atg_upsample_bicubic2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bicubic2d_out =
    foreign
      "atg_upsample_bicubic2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bicubic2d_vec =
    foreign
      "atg_upsample_bicubic2d_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs_upsample_bilinear2d =
    foreign
      "atg_upsample_bilinear2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bilinear2d_backward =
    foreign
      "atg_upsample_bilinear2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bilinear2d_backward_grad_input =
    foreign
      "atg_upsample_bilinear2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bilinear2d_out =
    foreign
      "atg_upsample_bilinear2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_bilinear2d_vec =
    foreign
      "atg_upsample_bilinear2d_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs_upsample_linear1d =
    foreign
      "atg_upsample_linear1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> double @-> int @-> returning void)

  let stubs_upsample_linear1d_backward =
    foreign
      "atg_upsample_linear1d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_linear1d_backward_grad_input =
    foreign
      "atg_upsample_linear1d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_linear1d_out =
    foreign
      "atg_upsample_linear1d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_linear1d_vec =
    foreign
      "atg_upsample_linear1d_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest1d =
    foreign
      "atg_upsample_nearest1d"
      (ptr t @-> t @-> ptr int64_t @-> int @-> double @-> int @-> returning void)

  let stubs_upsample_nearest1d_backward =
    foreign
      "atg_upsample_nearest1d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest1d_backward_grad_input =
    foreign
      "atg_upsample_nearest1d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest1d_out =
    foreign
      "atg_upsample_nearest1d_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> double @-> int @-> returning void)
end

module C24 (F : Cstubs.FOREIGN) = struct
  open F

  type t = unit ptr

  let t : t typ = ptr void

  type scalar = unit ptr

  let scalar : scalar typ = ptr void

  let stubs_upsample_nearest1d_vec =
    foreign
      "atg_upsample_nearest1d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)

  let stubs_upsample_nearest2d =
    foreign
      "atg_upsample_nearest2d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest2d_backward =
    foreign
      "atg_upsample_nearest2d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest2d_backward_grad_input =
    foreign
      "atg_upsample_nearest2d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest2d_out =
    foreign
      "atg_upsample_nearest2d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest2d_vec =
    foreign
      "atg_upsample_nearest2d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)

  let stubs_upsample_nearest3d =
    foreign
      "atg_upsample_nearest3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest3d_backward =
    foreign
      "atg_upsample_nearest3d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest3d_backward_grad_input =
    foreign
      "atg_upsample_nearest3d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest3d_out =
    foreign
      "atg_upsample_nearest3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_nearest3d_vec =
    foreign
      "atg_upsample_nearest3d_vec"
      (ptr t @-> t @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning void)

  let stubs_upsample_trilinear3d =
    foreign
      "atg_upsample_trilinear3d"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_trilinear3d_backward =
    foreign
      "atg_upsample_trilinear3d_backward"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_trilinear3d_backward_grad_input =
    foreign
      "atg_upsample_trilinear3d_backward_grad_input"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_trilinear3d_out =
    foreign
      "atg_upsample_trilinear3d_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> double
      @-> int
      @-> returning void)

  let stubs_upsample_trilinear3d_vec =
    foreign
      "atg_upsample_trilinear3d_vec"
      (ptr t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int
      @-> ptr double
      @-> int
      @-> returning void)

  let stubs_value_selecting_reduction_backward =
    foreign
      "atg_value_selecting_reduction_backward"
      (ptr t @-> t @-> int64_t @-> t @-> ptr int64_t @-> int @-> int @-> returning void)

  let stubs_values = foreign "atg_values" (ptr t @-> t @-> returning void)
  let stubs_values_copy = foreign "atg_values_copy" (ptr t @-> t @-> returning void)

  let stubs_values_copy_out =
    foreign "atg_values_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_vander =
    foreign "atg_vander" (ptr t @-> t @-> int64_t @-> int @-> int @-> returning void)

  let stubs_var = foreign "atg_var" (ptr t @-> t @-> int @-> returning void)

  let stubs_var_correction =
    foreign
      "atg_var_correction"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs_var_correction_out =
    foreign
      "atg_var_correction_out"
      (ptr t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_var_dim =
    foreign
      "atg_var_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_var_mean = foreign "atg_var_mean" (ptr t @-> t @-> int @-> returning void)

  let stubs_var_mean_correction =
    foreign
      "atg_var_mean_correction"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int64_t @-> int @-> int @-> returning void)

  let stubs_var_mean_correction_out =
    foreign
      "atg_var_mean_correction_out"
      (ptr t
      @-> t
      @-> t
      @-> t
      @-> ptr int64_t
      @-> int
      @-> int64_t
      @-> int
      @-> int
      @-> returning void)

  let stubs_var_mean_dim =
    foreign
      "atg_var_mean_dim"
      (ptr t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_var_out =
    foreign
      "atg_var_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_vdot = foreign "atg_vdot" (ptr t @-> t @-> t @-> returning void)
  let stubs_vdot_out = foreign "atg_vdot_out" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_view =
    foreign "atg_view" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_view_as = foreign "atg_view_as" (ptr t @-> t @-> t @-> returning void)

  let stubs_view_as_complex =
    foreign "atg_view_as_complex" (ptr t @-> t @-> returning void)

  let stubs_view_as_complex_copy =
    foreign "atg_view_as_complex_copy" (ptr t @-> t @-> returning void)

  let stubs_view_as_complex_copy_out =
    foreign "atg_view_as_complex_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_view_as_real = foreign "atg_view_as_real" (ptr t @-> t @-> returning void)

  let stubs_view_as_real_copy =
    foreign "atg_view_as_real_copy" (ptr t @-> t @-> returning void)

  let stubs_view_as_real_copy_out =
    foreign "atg_view_as_real_copy_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_view_copy =
    foreign "atg_view_copy" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_view_copy_dtype =
    foreign "atg_view_copy_dtype" (ptr t @-> t @-> int @-> returning void)

  let stubs_view_copy_dtype_out =
    foreign "atg_view_copy_dtype_out" (ptr t @-> t @-> t @-> int @-> returning void)

  let stubs_view_copy_out =
    foreign
      "atg_view_copy_out"
      (ptr t @-> t @-> t @-> ptr int64_t @-> int @-> returning void)

  let stubs_view_dtype = foreign "atg_view_dtype" (ptr t @-> t @-> int @-> returning void)
  let stubs_vsplit = foreign "atg_vsplit" (t @-> int64_t @-> returning (ptr t))

  let stubs_vsplit_array =
    foreign "atg_vsplit_array" (t @-> ptr int64_t @-> int @-> returning (ptr t))

  let stubs_vstack = foreign "atg_vstack" (ptr t @-> ptr t @-> int @-> returning void)

  let stubs_vstack_out =
    foreign "atg_vstack_out" (ptr t @-> t @-> ptr t @-> int @-> returning void)

  let stubs_where = foreign "atg_where" (t @-> returning (ptr t))

  let stubs_where_scalar =
    foreign "atg_where_scalar" (ptr t @-> t @-> scalar @-> scalar @-> returning void)

  let stubs_where_scalarother =
    foreign "atg_where_scalarother" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_where_scalarself =
    foreign "atg_where_scalarself" (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_where_self =
    foreign "atg_where_self" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_where_self_out =
    foreign "atg_where_self_out" (ptr t @-> t @-> t @-> t @-> t @-> returning void)

  let stubs_xlogy = foreign "atg_xlogy" (ptr t @-> t @-> t @-> returning void)
  let stubs_xlogy_ = foreign "atg_xlogy_" (ptr t @-> t @-> t @-> returning void)

  let stubs_xlogy_outscalar_other =
    foreign "atg_xlogy_outscalar_other" (ptr t @-> t @-> t @-> scalar @-> returning void)

  let stubs_xlogy_outscalar_self =
    foreign "atg_xlogy_outscalar_self" (ptr t @-> t @-> scalar @-> t @-> returning void)

  let stubs_xlogy_outtensor =
    foreign "atg_xlogy_outtensor" (ptr t @-> t @-> t @-> t @-> returning void)

  let stubs_xlogy_scalar_other =
    foreign "atg_xlogy_scalar_other" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_xlogy_scalar_other_ =
    foreign "atg_xlogy_scalar_other_" (ptr t @-> t @-> scalar @-> returning void)

  let stubs_xlogy_scalar_self =
    foreign "atg_xlogy_scalar_self" (ptr t @-> scalar @-> t @-> returning void)

  let stubs_zero = foreign "atg_zero" (ptr t @-> t @-> returning void)
  let stubs_zero_ = foreign "atg_zero_" (ptr t @-> t @-> returning void)
  let stubs_zero_out = foreign "atg_zero_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_zeros =
    foreign "atg_zeros" (ptr t @-> ptr int64_t @-> int @-> int @-> int @-> returning void)

  let stubs_zeros_like = foreign "atg_zeros_like" (ptr t @-> t @-> returning void)

  let stubs_zeros_like_out =
    foreign "atg_zeros_like_out" (ptr t @-> t @-> t @-> returning void)

  let stubs_zeros_out =
    foreign "atg_zeros_out" (ptr t @-> t @-> ptr int64_t @-> int @-> returning void)
end

module C (F : Cstubs.FOREIGN) = struct
  include C0 (F)
  include C1 (F)
  include C2 (F)
  include C3 (F)
  include C4 (F)
  include C5 (F)
  include C6 (F)
  include C7 (F)
  include C8 (F)
  include C9 (F)
  include C10 (F)
  include C11 (F)
  include C12 (F)
  include C13 (F)
  include C14 (F)
  include C15 (F)
  include C16 (F)
  include C17 (F)
  include C18 (F)
  include C19 (F)
  include C20 (F)
  include C21 (F)
  include C22 (F)
  include C23 (F)
  include C24 (F)
end
